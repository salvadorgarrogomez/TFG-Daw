{
"version":3,
"file":"module$node_modules$crypto_js$mode_ctr.js",
"lineCount":22,
"mappings":"AAAAA,cAAA,CAAA,sCAAA,GAA2D,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AACjG,WAAS,CAACC,IAAD,EAAOC,OAAP,EAAgBC,KAAhB,CAAuB;AACV,YAAvB,KAAI,MAAOH,QAAX,GAECD,MAAOC,CAAAA,OAFR,GAEkBA,OAFlB,GAE4BE,OAAA,CAAQJ,OAAA,CAAQ,oCAAR,CAAR,EAA2BA,OAAA,CAAQ,2CAAR,CAA3B,CAF5B,GAI2B,UAAtB,KAAI,MAAOM,OAAX,IAAoCA,MAAOC,CAAAA,GAA3C,GAEJD,MAAA,CAAO,CAAC,QAAD,EAAW,eAAX,CAAP,EAAoCF,OAApC,CAFI,GAMJA,OAAA,CAAQD,IAAKK,CAAAA,QAAb,CAVD;AADiC,GAAhC,CAAA,CAaA,IAbA,EAaM,QAAS,CAACA,QAAD,CAAW;AAK3BA,YAASC,CAAAA,IAAKC,CAAAA,GAAd,GAAqB,QAAS,EAAG;AAC7B,UAAIA,MAAMF,QAASG,CAAAA,GAAIC,CAAAA,eAAgBC,CAAAA,MAA7B,EAAV,EAEIC,YAAYJ,GAAII,CAAAA,SAAhBA,GAA4BJ,GAAIG,CAAAA,MAAJ,CAAW,CACvCE,aAAcA,QAAS,CAACC,KAAD,EAAQC,MAAR,CAAgB;AAEnC,YAAIC,SAAS,IAAKC,CAAAA,OAAlB,EACIC,YAAYF,MAAOE,CAAAA,SADvB,EAEIC,KAAK,IAAKC,CAAAA,GAFd,EAGIC,UAAU,IAAKC,CAAAA,QAHnB;AAMIH,UAAJ,KACIE,OAGA,GAHU,IAAKC,CAAAA,QAGf,GAH0BH,EAAGI,CAAAA,KAAH,CAAS,CAAT,CAG1B,EAAA,IAAKH,CAAAA,GAAL,GAAWI,IAAAA,EAJf;AAMIC,UAAAA,GAAYJ,OAAQE,CAAAA,KAAR,CAAc,CAAd,CAAZE;AACJT,cAAOU,CAAAA,YAAP,CAAoBD,EAApB,EAA+B,CAA/B,CAAA;AAGAJ,eAAA,CAAQH,SAAR,GAAoB,CAApB,CAAA,GAA0BG,OAAA,CAAQH,SAAR,GAAoB,CAApB,CAA1B,GAAmD,CAAnD,GAAwD,CAAxD;AAGA,aAASS,MAAT,GAAa,CAAb,EAAgBA,MAAhB,GAAoBT,SAApB,EAA+BS,MAAA,EAA/B;AACIb,eAAA,CAAMC,MAAN,GAAeY,MAAf,CAAA,IAAqBF,EAAA,CAAUE,MAAV,CAArB;AADJ;AArBmC,OADA,CAAX,CAFhC;AA8BAnB,SAAIoB,CAAAA,SAAJ,GAAgBhB,SAAhB;AAEA,aAAOJ,GAAP;AAjC6B,KAAZ,EAArB;AAqCA,WAAOF,QAASC,CAAAA,IAAKC,CAAAA,GAArB;AA1C2B,GAb1B,CAAD;AADkG,CAAnG;;",
"sources":["node_modules/crypto-js/mode-ctr.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$crypto_js$mode_ctr\"] = function(global,require,module,exports) {\n;(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Counter block mode.\n\t */\n\tCryptoJS.mode.CTR = (function () {\n\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            var keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Increment counter\n\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTR.Decryptor = Encryptor;\n\n\t    return CTR;\n\t}());\n\n\n\treturn CryptoJS.mode.CTR;\n\n}));\n};"],
"names":["shadow$provide","global","require","module","exports","root","factory","undef","define","amd","CryptoJS","mode","CTR","lib","BlockCipherMode","extend","Encryptor","processBlock","words","offset","cipher","_cipher","blockSize","iv","_iv","counter","_counter","slice","undefined","keystream","encryptBlock","i","Decryptor"]
}
