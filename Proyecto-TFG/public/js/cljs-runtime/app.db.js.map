{"version":3,"sources":["app/db.cljs"],"mappings":"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","names":["app.db/categorias","reagent.core.atom","app.db/productos","app.db/list-productos","js/app","js/app.db","js/app.db.imagenes","app.db/imagenes","app.db/fetch-categorias","js/console.log","c__12039__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__12040__auto__","switch__11942__auto__","state_26294","state_val_26295","inst_26271","inst_26272","inst_26273","inst_26274","cljs.core/PersistentHashMap","inst_26275","inst_26276","inst_26277","inst_26278","cljs.core.async.impl.ioc-helpers/take!","inst_26280","inst_26281","cljs.core/--destructure-map","inst_26282","cljs.core.get","inst_26283","inst_26284","statearr-26296","statearr-26297","statearr-26298","inst_26286","inst_26287","cljs.core/deref","inst_26288","statearr-26299","statearr-26300","inst_26290","statearr-26301","inst_26292","cljs.core.async.impl.ioc-helpers/return-chan","statearr-26302","state-machine__11943__auto__","ret-value__11944__auto__","result__11945__auto__","cljs.core/keyword-identical?","ex__11946__auto__","e26303","statearr-26304","cljs.core/seq","statearr-26305","cljs.core/first","state__12041__auto__","statearr-26306","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs_http.client.get","ajax.core/json-response-format","cljs.core._EQ_","cljs.core/reset!","js/console.error","app.db/fetch-list-categorias","state_26331","state_val_26332","inst_26308","inst_26309","inst_26310","inst_26311","inst_26312","inst_26313","inst_26314","inst_26315","inst_26317","inst_26318","inst_26319","inst_26320","inst_26321","statearr-26333","statearr-26334","statearr-26335","inst_26323","inst_26324","inst_26325","statearr-26336","statearr-26337","inst_26327","statearr-26338","inst_26329","statearr-26339","e26340","statearr-26341","statearr-26342","statearr-26343","app.db/fetch-productos","categoria-id","state_26375","state_val_26376","inst_26345","inst_26346","inst_26347","inst_26348","inst_26349","inst_26350","inst_26351","inst_26352","inst_26353","inst_26355","inst_26356","inst_26357","inst_26358","inst_26359","statearr-26377","statearr-26378","statearr-26379","inst_26361","statearr-26380","statearr-26381","inst_26371","statearr-26382","inst_26373","inst_26363","statearr-26383","statearr-26384","inst_26366","inst_26367","inst_26368","inst_26369","statearr-26385","statearr-26386","statearr-26387","e26388","statearr-26389","statearr-26390","statearr-26391","cljs.core/map?","app.db/fetch-list-productos","state_26416","state_val_26417","inst_26393","inst_26394","inst_26395","inst_26396","inst_26397","inst_26398","inst_26399","inst_26400","inst_26402","inst_26403","inst_26404","inst_26405","inst_26406","statearr-26418","statearr-26419","statearr-26420","inst_26408","inst_26409","inst_26410","statearr-26421","statearr-26422","inst_26412","statearr-26423","inst_26414","statearr-26424","e26425","statearr-26426","statearr-26427","statearr-26428","app.db/cargar-imagenes","js/fetch","p1__26429#","data","cljs.core/clj->js","cljs.core/empty?","cljs.core.js__GT_clj","error"],"sourcesContent":["(ns app.db\r\n  (:require [reagent.core :as r]\r\n            [cljs-http.client :as http]\r\n            [cljs.core.async :refer [<! go]]\r\n            [ajax.core :as ajax]))\r\n\r\n;; Estados globales\r\n(def categorias (r/atom []))\r\n(def productos (r/atom []))\r\n(def list-productos (r/atom []))\r\n(defonce imagenes (r/atom []))\r\n\r\n;; Obtener categor\u00edas\r\n;; Todos los js/console.log los utilizo como mensajes de depuracion para ver en el navegador, y ver si algo falla\r\n(defn fetch-categorias []\r\n  (js/console.log \"Llamando a fetch-categorias...\")\r\n  (go\r\n    (let [{:keys [status body]} (<! (http/get \"/api/categorias/\"\r\n                                              {:with-credentials? false\r\n                                               :response-format (ajax/json-response-format {:keywords? true})}))]\r\n      (if (= 200 status)\r\n        (do\r\n          (reset! categorias body)\r\n          (js/console.log \"Categor\u00edas actualizadas:\" @categorias))\r\n        (js/console.error \"Error al obtener categor\u00edas\")))))\r\n\r\n(defn fetch-list-categorias []\r\n  (js/console.log \"Llamando a fetch-categorias...\")\r\n  (go\r\n    (let [{:keys [status body]} (<! (http/get \"/api/todas_categorias\"\r\n                                              {:with-credentials? false\r\n                                               :response-format (ajax/json-response-format {:keywords? true})}))]\r\n      (if (= 200 status)\r\n        (do\r\n          (reset! categorias body)\r\n          (js/console.log \"Categor\u00edas actualizadas:\" @categorias))\r\n        (js/console.error \"Error al obtener categor\u00edas\")))))\r\n\r\n;; Obtener productos por categor\u00eda\r\n(defn fetch-productos [categoria-id]\r\n  (js/console.log \"Llamando a fetch-productos para categor\u00eda:\" categoria-id)\r\n  (go\r\n    (let [{:keys [status body]} (<! (http/get (str \"/api/productos/categoria/\" categoria-id)\r\n                                              {:with-credentials? false\r\n                                               :response-format (ajax/json-response-format {:keywords? true})}))]\r\n      (if (= 200 status)\r\n        (do\r\n          ;; Extraer los productos si la respuesta tiene estructura inesperada\r\n          (let [productos-obtenidos (if (map? body) (:productos body) body)]\r\n            (reset! productos productos-obtenidos)\r\n            (js/console.log \"Productos actualizados:\" @productos)))\r\n        (js/console.error \"Error al obtener productos\")))))\r\n\r\n\r\n(defn fetch-list-productos []\r\n  (js/console.log \"Llamando a fetch-list-productos...\")\r\n  (go\r\n    (let [{:keys [status body]} (<! (http/get \"/api/productos/\"\r\n                                              {:with-credentials? false\r\n                                               :response-format (ajax/json-response-format {:keywords? true})}))]\r\n      (if (= 200 status)\r\n        (do\r\n          (reset! list-productos body)\r\n          (js/console.log \"Productos actualizados:\" @categorias))\r\n        (js/console.error \"Error al obtener productos\")))))\r\n\r\n(defn cargar-imagenes []\r\n  (js/console.log \"Llamando a cargar-imagenes...\")\r\n  (-> (js/fetch \"/api/imagenes\")\r\n      (.then #(.json %))\r\n      (.then (fn [data]\r\n               (js/console.log \"Datos recibidos desde el backend:\" (clj->js data))\r\n               (if (empty? data)\r\n                 (js/console.log \"No se encontraron im\u00e1genes.\")\r\n                 ;; Aqu\u00ed actualizamos el `atom` `imagenes` con los datos\r\n                 (reset! imagenes (js->clj data :keywordize-keys true)))))\r\n      (.catch (fn [error]\r\n                (js/console.error \"Error cargando im\u00e1genes:\" error)))))\r\n"]}