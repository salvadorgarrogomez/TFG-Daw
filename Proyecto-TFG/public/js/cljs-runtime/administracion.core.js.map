{"version":3,"sources":["administracion/core.cljs"],"mappings":"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","names":["js/administracion","js/administracion.core","js/administracion.core.logged-in?","administracion.core/logged-in?","reagent.core.atom","js/administracion.core.loading?","administracion.core/loading?","js/administracion.core.usuario","administracion.core/usuario","js/administracion.core.contrasenia","administracion.core/contrasenia","administracion.core/sesion-verificada?","js/administracion.core.datos-usuario","administracion.core/datos-usuario","js/administracion.core.auth-token","administracion.core/auth-token","js/administracion.core.mostrar-productos?","administracion.core/mostrar-productos?","js/administracion.core.mostrar-categorias?","administracion.core/mostrar-categorias?","js/administracion.core.categoria-busqueda","administracion.core/categoria-busqueda","js/administracion.core.producto-busqueda","administracion.core/producto-busqueda","administracion.core/verificar-sesion","ajax.core.GET","response","usuario","cljs.core/reset!","js/localStorage.setItem","app.state/set-rol","_","administracion.core/render-categorias","cljs.core/deref","p1__40802#","texto","clojure.string/lower-case","categorias-filtradas","p1__40801#","cljs.core.filter","clojure.string/includes?","app.db/categorias","iter__5480__auto__","s__40816","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5478__auto__","size__5479__auto__","cljs.core/count","b__40818","cljs.core/chunk-buffer","i__40817","map__40828","cljs.core/-nth","cljs.core/--destructure-map","cljs.core.get","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__40815","cljs.core/chunk-rest","map__40850","cljs.core/first","cljs.core/cons","cljs.core/rest","id","nombre","descripcion","activo","js/location","app.db/activo-categoria","administracion.core/render-productos","p1__40871#","productos-filtradas","p1__40869#","app.db/list-productos","s__40888","b__40890","i__40889","map__40899","iter__40887","map__40914","description","precio","nombre_categoria","tipo_plato","tipo_porcion","app.db/activo-producto","administracion.core/login","p1__40937#","p1__40939#","ajax.core.POST","resp","js/console.log","err","cljs.core.println","js/alert","p1__40942#","p1__40943#","administracion.core/login-form","administracion.core/logout","js/localStorage.removeItem","e","administracion.core/admin-panel","with-let40956","reagent.ratom/with-let-values","temp__5808__auto__","reagent.ratom/*ratom-context*","c__12240__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init40957","cljs.core/not","res40958","cljs.core.not_EQ_","cljs.core._EQ_","app.db/fetch-list-productos","app.db/fetch-list-categorias","administracion.core/page","administracion.core/init","reagent.dom.render","js/document","cljs.core/chunk-first"],"sourcesContent":["(ns administracion.core\r\n  (:require [reagent.core :as r]\r\n            [app.state :as state]\r\n            [ajax.core :refer [GET POST]]\r\n            [app.db :refer [list-productos fetch-list-productos categorias eliminar-categoria eliminar-producto fetch-list-categorias activo-producto activo-categoria]]\r\n            [reagent.dom :as dom]\r\n            [reitit.frontend.easy :as rfe]))\r\n\r\n(defonce logged-in? (r/atom nil))\r\n(defonce loading? (r/atom false))\r\n(defonce usuario (r/atom \"\"))\r\n(defonce contrasenia (r/atom \"\"))\r\n(def sesion-verificada? (r/atom false))\r\n(defonce datos-usuario (r/atom nil))\r\n(defonce auth-token (r/atom nil))\r\n(defonce mostrar-productos? (r/atom false))\r\n(defonce mostrar-categorias? (r/atom false))\r\n\r\n(defonce categoria-busqueda (r/atom \"\"))\r\n(defonce producto-busqueda (r/atom \"\"))\r\n\r\n(defn verificar-sesion []\r\n  (GET \"/api/admin\"\r\n    {:with-credentials? true\r\n     :response-format :json\r\n     :keywords? true\r\n     :handler (fn [response]\r\n                ;; Devuelve {:usuario {:id xx :nombre \"xxxx\" :rol \"xxxx\"}}\r\n                (let [usuario (:usuario response)]\r\n                  (reset! logged-in? true)\r\n                  (reset! datos-usuario usuario)\r\n                  (js/localStorage.setItem \"id\" (:id usuario))\r\n                  (reset! sesion-verificada? true)\r\n                  (state/set-rol (:rol usuario))))\r\n     :error-handler (fn [_]\r\n                      (reset! logged-in? false)\r\n                      (reset! datos-usuario nil)\r\n                      (reset! sesion-verificada? true))}))\r\n\r\n(defn render-categorias []\r\n  (let [texto (clojure.string/lower-case @categoria-busqueda)\r\n        categorias-filtradas (filter #(clojure.string/includes?\r\n                                       (clojure.string/lower-case (:nombre %))\r\n                                       texto)\r\n                                     @categorias)]\r\n    [:div.col-12\r\n     [:h3 \"Lista de categorias\"]\r\n     ;; Caja de b\u00fasqueda\r\n     [:input.form-control.mb-3\r\n      {:type \"text\"\r\n       :placeholder \"Buscar categor\u00eda por nombre...\"\r\n       :value @categoria-busqueda\r\n       :on-change #(reset! categoria-busqueda (-> % .-target .-value))}]\r\n     [:table {:class \"table table-striped\"}\r\n      [:thead\r\n       [:tr\r\n        [:th {:class \"id\"} \"ID\"] [:th \"Nombre\"] [:th.d-none.d-sm-table-cell \"Descripcion\"] [:th {:class \"tdButton\"} \"Editar\"] [:th {:class \"tdButton\"} \"Eliminar\"]]]\r\n      [:tbody\r\n       (for [{:keys [id nombre descripcion activo]} categorias-filtradas]\r\n         ^{:key id}\r\n         [:tr {:class (if activo \"table-success\" \"table-danger\")}\r\n          [:td {:class \"tdButton\"} id] [:td nombre] [:td.d-none.d-sm-table-cell descripcion]\r\n          [:td {:class \"tdButton\"}\r\n           [:button\r\n            {:on-click #(do\r\n                          (set! (.-hash js/location) (str \"/editar/categoria/\" id)))}\r\n            \"Editar\"]]\r\n          [:td {:class \"tdButton\"} [:button\r\n                                    {:on-click #(activo-categoria id)}\r\n                                    \"Activar/Desactivar categoria\"]]])\r\n       [:tr\r\n        [:td\r\n         [:button\r\n          {:on-click\r\n           #(do\r\n              (set! (.-hash js/location) \"/nuevo/categoria\"))\r\n           :class \"nuevo\"}\r\n          \"A\u00f1adir nueva categoria\"]]]]]]))\r\n\r\n(defn render-productos []\r\n  (let [texto (clojure.string/lower-case @producto-busqueda)\r\n        productos-filtradas (filter #(clojure.string/includes?\r\n                                      (clojure.string/lower-case (:nombre %))\r\n                                      texto)\r\n                                    @list-productos)]\r\n    [:div.col-12\r\n     [:h3 \"Lista de productos\"]\r\n     [:input.form-control.mb-3\r\n      {:type \"text\"\r\n       :placeholder \"Buscar producto por nombre...\"\r\n       :value @producto-busqueda\r\n       :on-change #(reset! producto-busqueda (-> % .-target .-value))}]\r\n     [:table {:class \"table table-striped\"}\r\n      [:thead\r\n       [:tr\r\n        [:th {:class \"id\"} \"ID\"] [:th \"Nombre\"] [:th.d-none.d-lg-table-cell \"Descripcion\"] [:th.d-none.d-sm-table-cell \"Precio\"]\r\n        [:th.d-none.d-lg-table-cell \"Categor\u00eda\"] [:th.d-none.d-lg-table-cell \"Tipo de plato\"] [:th \"Tipo de porci\u00f3n\"]\r\n        [:th \"Editar\"] [:th \"Eliminar\"]]]\r\n      [:tbody\r\n       (for [{:keys [id nombre description precio nombre_categoria tipo_plato tipo_porcion activo]} productos-filtradas]\r\n         ^{:key id}\r\n         [:tr {:class (if activo \"table-success\" \"table-danger\")}\r\n          [:td {:class \"id\"} id] [:td nombre] [:td.d-none.d-lg-table-cell description] [:td.d-none.d-sm-table-cell (str precio \" \u20ac\")]\r\n          [:td.d-none.d-lg-table-cell nombre_categoria] [:td.d-none.d-lg-table-cell tipo_plato] [:td tipo_porcion]\r\n          [:td {:class \"tdButton\"}\r\n           [:button\r\n            {:on-click #(do\r\n                          (set! (.-hash js/location) (str \"/editar/producto/\" id)))}\r\n            \"Editar\"]]\r\n          [:td {:class \"tdButton\"} [:button\r\n                                    {:on-click #(activo-producto id)}\r\n                                    \"Activar/Desactivar Producto\"]]])\r\n       [:tr\r\n        [:td\r\n         [:button\r\n          {:on-click\r\n           #(do\r\n              (set! (.-hash js/location) \"/nuevo/producto\"))\r\n           :class \"nuevo\"}\r\n          \"A\u00f1adir nuevo producto\"]]]]]]))\r\n\r\n(defn login []\r\n  (POST \"/api/login\"\r\n    {:params {:nombre @usuario\r\n              :contrasenia @contrasenia}\r\n     :format :json\r\n     :response-format :json\r\n     :keywords? true\r\n     :with-credentials? true\r\n     :handler #(do\r\n                 ;; Se limpia cualquier estado anterior\r\n                 (reset! auth-token nil)\r\n                 (reset! logged-in? true)\r\n                 (reset! datos-usuario {:nombre (:nombre %) :rol (:rol %)})\r\n                 (js/localStorage.setItem \"id\" (:id %))\r\n                 ;; Verifica el rol desde el backend\r\n                 (GET \"/api/admin\"\r\n                   {:with-credentials? true\r\n                    :handler (fn [resp]\r\n                               (js/console.log \"Verificado como admin\" resp))\r\n                    :error-handler (fn [err]\r\n                                     (js/console.log \"No eres admin\" err))}))\r\n\r\n     :error-handler #(do\r\n                       (println \"Error en la solicitud: \" %)\r\n                       (js/alert \"Credenciales incorrectas.\")\r\n                       (reset! loading? false))}))\r\n\r\n(defn login-form []\r\n  [:div.row {:class \"administracion\"}\r\n   [:div {:class \"entrada\"}\r\n    [:div.col-12\r\n     [:p \"Nombre de usuario: \"\r\n      [:input {:type \"text\"\r\n               :placeholder \"Ingrese su nombre de usuario\"\r\n               :value @usuario\r\n               :on-change #(reset! usuario (-> % .-target .-value))}]]\r\n     [:p \"Contrase\u00f1a: \"\r\n      [:input {:type \"password\"\r\n               :placeholder \"Ingrese su contrase\u00f1a\"\r\n               :value @contrasenia\r\n               :on-change #(reset! contrasenia (-> % .-target .-value))}]]]\r\n    [:div.row {:class \"rowButton\"}\r\n     [:div.col-12\r\n      [:button {:on-click #(do\r\n                             (login)\r\n                             (.reload js/location true))} \"Entrar\"]]]]])\r\n\r\n(defn logout []\r\n  (POST \"/api/logout\"\r\n    {:with-credentials? true\r\n     :handler (fn [_]\r\n                (reset! logged-in? false)\r\n                (reset! datos-usuario {:nombre nil :rol nil})\r\n                (js/localStorage.removeItem \"id\"))\r\n     :error-handler (fn [e]\r\n                      (js/console.log \"Error cerrando sesi\u00f3n\" e))}))\r\n\r\n(defn admin-panel []\r\n  (r/with-let [_ (do\r\n                   (reset! mostrar-productos? false)\r\n                   (reset! mostrar-categorias? false))]\r\n    (cond\r\n      (not @sesion-verificada?)\r\n      [:div \"Cargando sesi\u00f3n...\"]\r\n      (nil? @datos-usuario)\r\n      [:div.row {:class \"panel\"}\r\n       [:div.col-12 {:class \"panelBotones\"}\r\n        [:h2 \"Aviso importante!!!\"]\r\n        [:p \"No est\u00e1s logeado, debes de cerrar sesi\u00f3n y logearte correctamente.\"]\r\n        [:button {:on-click #(do\r\n                               (logout)\r\n                               (.reload js/location true))} \"Cerrar sesi\u00f3n\"]]]\r\n      (not @logged-in?)\r\n      [:div \"Acceso denegado.\"]\r\n      :else\r\n      (let [usuario (:rol @datos-usuario)]\r\n        (if (not= usuario \"admin\")\r\n          (do\r\n            (js/alert \"Acceso denegado. Solo los administradores pueden acceder a este panel.\")\r\n            [:div \"Acceso denegado.\"])\r\n          ;; Si el usuario es admin, muestra el panel de administraci\u00f3n\r\n          [:div.row {:class \"panel\"}\r\n           [:div.col-12 {:class \"panelBotones\"}\r\n            [:h2 (str \"Bienvenido/a, \" (:nombre @datos-usuario) \"!\")]\r\n            [:p (str \"Tienes permisos, \" usuario)]\r\n            [:p \"Tienes acceso al panel de administraci\u00f3n.\"]\r\n            [:button {:on-click #(do\r\n                                   (logout)\r\n                                   (.reload js/location true))} \"Cerrar sesi\u00f3n\"]\r\n            (when (= usuario \"admin\")\r\n              [:div {:class \"botonesAdmin\"}\r\n               [:p \"Eres administrador. Puedes editar el contenido.\"]\r\n               [:button {:on-click #(do\r\n                                      (reset! mostrar-productos? true)\r\n                                      (reset! mostrar-categorias? false)\r\n                                      (fetch-list-productos))} \"Mostrar productos\"]\r\n               [:button {:on-click #(do\r\n                                      (reset! mostrar-categorias? true)\r\n                                      (reset! mostrar-productos? false)\r\n                                      (fetch-list-categorias))} \"Mostrar categor\u00edas\"]\r\n               [:button {:on-click #(set! (.-hash js/location) \"#/imagenes\")} \"Mostrar fotograf\u00edas\"]])\r\n            (when @mostrar-productos? [render-productos])\r\n            (when @mostrar-categorias? [render-categorias])]])))))\r\n\r\n(defn page []\r\n  (cond\r\n    (not @sesion-verificada?) [:p {:class \"administracion\"} \"Verificando sesi\u00f3n...\"]\r\n    @logged-in? [admin-panel]\r\n    :else [login-form]))\r\n\r\n\r\n;; Monta la aplicaci\u00f3n en el DOM\r\n(defn init []\r\n  (verificar-sesion)\r\n  (dom/render [page] (.getElementById js/document \"app\")))\r\n\r\n;; Llamar la funci\u00f3n init para iniciar la aplicaci\u00f3n\r\n(init)\r\n"]}