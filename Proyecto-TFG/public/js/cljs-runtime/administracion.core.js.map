{"version":3,"sources":["administracion/core.cljs"],"mappings":"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","names":["js/administracion","js/administracion.core","js/administracion.core.logged-in?","administracion.core/logged-in?","reagent.core.atom","js/administracion.core.loading?","administracion.core/loading?","js/administracion.core.usuario","administracion.core/usuario","js/administracion.core.contrasenia","administracion.core/contrasenia","administracion.core/sesion-verificada?","js/administracion.core.datos-usuario","administracion.core/datos-usuario","js/administracion.core.auth-token","administracion.core/auth-token","js/administracion.core.mostrar-productos?","administracion.core/mostrar-productos?","js/administracion.core.mostrar-categorias?","administracion.core/mostrar-categorias?","administracion.core/categoria-seleccionada","js/administracion.core.categoria-busqueda","administracion.core/categoria-busqueda","js/administracion.core.producto-busqueda","administracion.core/producto-busqueda","administracion.core/verificar-sesion","ajax.core.GET","response","usuario","cljs.core/reset!","js/localStorage.setItem","app.state/set-rol","_","administracion.core/render-categorias","cljs.core/deref","p1__13843#","texto","clojure.string/lower-case","categorias-filtradas","p1__13842#","cljs.core.filter","clojure.string/includes?","app.db/categorias","iter__5480__auto__","s__13845","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5478__auto__","size__5479__auto__","cljs.core/count","b__13847","cljs.core/chunk-buffer","i__13846","map__13848","cljs.core/-nth","cljs.core/--destructure-map","cljs.core.get","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__13844","cljs.core/chunk-rest","map__13849","cljs.core/first","cljs.core/cons","cljs.core/rest","id","nombre","descripcion","activo","js/location","app.db/activo-categoria","administracion.core/render-productos","p1__13852#","p1__13853#","categoria","productos-filtradas","app.db/list-productos","p1__13850#","p1__13851#","cljs.core._EQ_","s__13855","b__13857","i__13856","map__13858","iter__13854","map__13859","s__13861","b__13863","i__13862","map__13864","iter__13860","map__13865","description","precio","nombre_categoria","tipo_plato","tipo_porcion","app.db/activo-producto","administracion.core/login","p1__13866#","p1__13867#","ajax.core.POST","resp","js/console.log","err","cljs.core.println","js/alert","p1__13868#","p1__13869#","administracion.core/login-form","administracion.core/logout","js/localStorage.removeItem","e","administracion.core/admin-panel","with-let13870","reagent.ratom/with-let-values","temp__5808__auto__","reagent.ratom/*ratom-context*","c__12240__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init13871","cljs.core/not","res13872","cljs.core.not_EQ_","app.db/fetch-list-productos","app.db/fetch-list-categorias","administracion.core/page","administracion.core/init","reagent.dom.render","js/document","cljs.core/chunk-first"],"sourcesContent":["(ns administracion.core\r\n  (:require [reagent.core :as r]\r\n            [app.state :as state]\r\n            [ajax.core :refer [GET POST]]\r\n            [app.db :refer [list-productos fetch-list-productos categorias eliminar-categoria eliminar-producto fetch-list-categorias activo-producto activo-categoria]]\r\n            [reagent.dom :as dom]\r\n            [reitit.frontend.easy :as rfe]))\r\n\r\n(defonce logged-in? (r/atom nil))\r\n(defonce loading? (r/atom false))\r\n(defonce usuario (r/atom \"\"))\r\n(defonce contrasenia (r/atom \"\"))\r\n(def sesion-verificada? (r/atom false))\r\n(defonce datos-usuario (r/atom nil))\r\n(defonce auth-token (r/atom nil))\r\n(defonce mostrar-productos? (r/atom false))\r\n(defonce mostrar-categorias? (r/atom false))\r\n\r\n(def categoria-seleccionada (r/atom \"todas\"))\r\n(defonce categoria-busqueda (r/atom \"\"))\r\n(defonce producto-busqueda (r/atom \"\"))\r\n\r\n(defn verificar-sesion []\r\n  (GET \"/api/admin\"\r\n    {:with-credentials? true\r\n     :response-format :json\r\n     :keywords? true\r\n     :handler (fn [response]\r\n                ;; Devuelve {:usuario {:id xx :nombre \"xxxx\" :rol \"xxxx\"}}\r\n                (let [usuario (:usuario response)]\r\n                  (reset! logged-in? true)\r\n                  (reset! datos-usuario usuario)\r\n                  (js/localStorage.setItem \"id\" (:id usuario))\r\n                  (reset! sesion-verificada? true)\r\n                  (state/set-rol (:rol usuario))))\r\n     :error-handler (fn [_]\r\n                      (reset! logged-in? false)\r\n                      (reset! datos-usuario nil)\r\n                      (reset! sesion-verificada? true))}))\r\n\r\n(defn render-categorias []\r\n  (let [texto (clojure.string/lower-case @categoria-busqueda)\r\n        categorias-filtradas (filter #(clojure.string/includes?\r\n                                       (clojure.string/lower-case (:nombre %))\r\n                                       texto)\r\n                                     @categorias)]\r\n    [:div.col-12\r\n     [:h3 \"Lista de categorias\"]\r\n     ;; Caja de b\u00fasqueda\r\n     [:input.form-control.mb-3\r\n      {:type \"text\"\r\n       :placeholder \"Buscar categor\u00eda por nombre...\"\r\n       :value @categoria-busqueda\r\n       :on-change #(reset! categoria-busqueda (-> % .-target .-value))}]\r\n     [:table {:class \"table table-striped tableCategorias\"}\r\n      [:thead\r\n       [:tr\r\n        [:th {:class \"id\"} \"ID\"] [:th \"Nombre\"] [:th.d-none.d-sm-table-cell \"Descripcion\"] [:th {:class \"tdButton\"} \"Editar\"] [:th {:class \"tdButton\"} \"Activar/Desactivar\"]]]\r\n      [:tbody\r\n       (for [{:keys [id nombre descripcion activo]} categorias-filtradas]\r\n         ^{:key id}\r\n         [:tr {:class (if activo \"table-success\" \"table-danger\")}\r\n          [:td {:class \"tdButton\"} id] [:td nombre] [:td.d-none.d-sm-table-cell descripcion]\r\n          [:td {:class \"tdButton\"}\r\n           [:button\r\n            {:on-click #(do\r\n                          (set! (.-hash js/location) (str \"/editar/categoria/\" id)))}\r\n            \"Editar\"]]\r\n          [:td {:class \"tdButton\"} [:button\r\n                                    {:on-click #(activo-categoria id)}\r\n                                    \"\u2714\ufe0f/\u274c\"]]])\r\n       [:tr\r\n        [:td\r\n         [:button\r\n          {:on-click\r\n           #(do\r\n              (set! (.-hash js/location) \"/nuevo/categoria\"))\r\n           :class \"nuevo\"}\r\n          \"A\u00f1adir nueva categoria\"]]]]]]))\r\n\r\n(defn render-productos []\r\n  (let [texto (clojure.string/lower-case @producto-busqueda)\r\n        categoria (clojure.string/lower-case @categoria-seleccionada)\r\n        productos-filtradas (->> @list-productos\r\n                                 (filter #(clojure.string/includes?\r\n                                           (clojure.string/lower-case (:nombre %))\r\n                                           texto))\r\n                                 (filter #(or (= categoria \"todas\")\r\n                                              (= (clojure.string/lower-case (:nombre_categoria %))\r\n                                                 categoria))))]\r\n    [:div.col-12\r\n     [:div.form-group.mb-3\r\n      [:h3 {:for \"filtro-categoria\"} \"Filtrar por categor\u00eda:\"]\r\n      [:select.form-control\r\n       {:id \"filtro-categoria\"\r\n        :value @categoria-seleccionada\r\n        :on-change #(reset! categoria-seleccionada (-> % .-target .-value))}\r\n       [:option {:value \"todas\"} \"Todas las categor\u00edas\"]\r\n       (for [{:keys [id nombre]} @categorias]\r\n         ^{:key id}\r\n         [:option {:value nombre} nombre])]]\r\n     [:h3 \"Lista de productos\"]\r\n     [:input.form-control.mb-3\r\n      {:type \"text\"\r\n       :placeholder \"Buscar producto por nombre...\"\r\n       :value @producto-busqueda\r\n       :on-change #(reset! producto-busqueda (-> % .-target .-value))}]\r\n     [:table {:class \"table table-striped\"}\r\n      [:thead\r\n       [:tr\r\n        [:th {:class \"id\"} \"ID\"] [:th \"Nombre\"] [:th.d-none.d-lg-table-cell \"Descripcion\"] [:th.d-none.d-sm-table-cell \"Precio\"]\r\n        [:th.d-none.d-lg-table-cell \"Categor\u00eda\"] [:th.d-none.d-lg-table-cell \"Tipo de plato\"] [:th \"Tipo de porci\u00f3n\"]\r\n        [:th \"Editar\"] [:th \"Activar/Desactivar\"]]]\r\n      [:tbody\r\n       (for [{:keys [id nombre description precio nombre_categoria tipo_plato tipo_porcion activo]} productos-filtradas]\r\n         ^{:key id}\r\n         [:tr {:class (if activo \"table-success\" \"table-danger\")}\r\n          [:td {:class \"id\"} id] [:td nombre] [:td.d-none.d-lg-table-cell description] [:td.d-none.d-sm-table-cell (str precio \" \u20ac\")]\r\n          [:td.d-none.d-lg-table-cell nombre_categoria] [:td.d-none.d-lg-table-cell tipo_plato] [:td tipo_porcion]\r\n          [:td {:class \"tdButton\"}\r\n           [:button\r\n            {:on-click #(do\r\n                          (set! (.-hash js/location) (str \"/editar/producto/\" id)))}\r\n            \"Editar\"]]\r\n          [:td {:class \"tdButton\"} [:button\r\n                                    {:on-click #(activo-producto id)}\r\n                                    \"\u2714\ufe0f/\u274c\"]]])\r\n       [:tr\r\n        [:td\r\n         [:button\r\n          {:on-click\r\n           #(do\r\n              (set! (.-hash js/location) \"/nuevo/producto\"))\r\n           :class \"nuevo\"}\r\n          \"A\u00f1adir nuevo producto\"]]]]]]))\r\n\r\n(defn login []\r\n  (POST \"/api/login\"\r\n    {:params {:nombre @usuario\r\n              :contrasenia @contrasenia}\r\n     :format :json\r\n     :response-format :json\r\n     :keywords? true\r\n     :with-credentials? true\r\n     :handler #(do\r\n                 ;; Se limpia cualquier estado anterior\r\n                 (reset! auth-token nil)\r\n                 (reset! logged-in? true)\r\n                 (reset! datos-usuario {:nombre (:nombre %) :rol (:rol %)})\r\n                 (js/localStorage.setItem \"id\" (:id %))\r\n                 ;; Verifica el rol desde el backend\r\n                 (GET \"/api/admin\"\r\n                   {:with-credentials? true\r\n                    :handler (fn [resp]\r\n                               (js/console.log \"Verificado como admin\" resp))\r\n                    :error-handler (fn [err]\r\n                                     (js/console.log \"No eres admin\" err))}))\r\n\r\n     :error-handler #(do\r\n                       (println \"Error en la solicitud: \" %)\r\n                       (js/alert \"Credenciales incorrectas.\")\r\n                       (reset! loading? false))}))\r\n\r\n(defn login-form []\r\n  [:div.row {:class \"administracion\"}\r\n   [:div {:class \"entrada\"}\r\n    [:div.col-12\r\n     [:p \"Nombre de usuario: \"\r\n      [:input {:type \"text\"\r\n               :placeholder \"Ingrese su nombre de usuario\"\r\n               :value @usuario\r\n               :on-change #(reset! usuario (-> % .-target .-value))}]]\r\n     [:p \"Contrase\u00f1a: \"\r\n      [:input {:type \"password\"\r\n               :placeholder \"Ingrese su contrase\u00f1a\"\r\n               :value @contrasenia\r\n               :on-change #(reset! contrasenia (-> % .-target .-value))}]]]\r\n    [:div.row {:class \"rowButton\"}\r\n     [:div.col-12\r\n      [:button {:on-click #(do\r\n                             (login)\r\n                             (.reload js/location true))} \"Entrar\"]]]]])\r\n\r\n(defn logout []\r\n  (POST \"/api/logout\"\r\n    {:with-credentials? true\r\n     :handler (fn [_]\r\n                (reset! logged-in? false)\r\n                (reset! datos-usuario {:nombre nil :rol nil})\r\n                (js/localStorage.removeItem \"id\"))\r\n     :error-handler (fn [e]\r\n                      (js/console.log \"Error cerrando sesi\u00f3n\" e))}))\r\n\r\n(defn admin-panel []\r\n  (r/with-let [_ (do\r\n                   (reset! mostrar-productos? false)\r\n                   (reset! mostrar-categorias? false))]\r\n    (cond\r\n      (not @sesion-verificada?)\r\n      [:div \"Cargando sesi\u00f3n...\"]\r\n      (nil? @datos-usuario)\r\n      [:div.row {:class \"panel\"}\r\n       [:div.col-12 {:class \"panelBotones\"}\r\n        [:h2 \"Aviso importante!!!\"]\r\n        [:p \"No est\u00e1s logeado, debes de cerrar sesi\u00f3n y logearte correctamente.\"]\r\n        [:button {:on-click #(do\r\n                               (logout)\r\n                               (.reload js/location true))} \"Cerrar sesi\u00f3n\"]]]\r\n      (not @logged-in?)\r\n      [:div \"Acceso denegado.\"]\r\n      :else\r\n      (let [usuario (:rol @datos-usuario)]\r\n        (if (not= usuario \"admin\")\r\n          (do\r\n            (js/alert \"Acceso denegado. Solo los administradores pueden acceder a este panel.\")\r\n            [:div \"Acceso denegado.\"])\r\n          ;; Si el usuario es admin, muestra el panel de administraci\u00f3n\r\n          [:div.row {:class \"panel\"}\r\n           [:div.col-12 {:class \"panelBotones\"}\r\n            [:h2 (str \"Bienvenido/a, \" (:nombre @datos-usuario) \"!\")]\r\n            [:p (str \"Tienes permisos, \" usuario)]\r\n            [:p \"Tienes acceso al panel de administraci\u00f3n.\"]\r\n            [:button {:on-click #(do\r\n                                   (logout)\r\n                                   (.reload js/location true))} \"Cerrar sesi\u00f3n\"]\r\n            (when (= usuario \"admin\")\r\n              [:div {:class \"botonesAdmin\"}\r\n               [:p \"Eres administrador. Puedes editar el contenido.\"]\r\n               [:button {:on-click #(do\r\n                                      (reset! mostrar-productos? true)\r\n                                      (reset! mostrar-categorias? false)\r\n                                      (fetch-list-productos))} \"Mostrar productos\"]\r\n               [:button {:on-click #(do\r\n                                      (reset! mostrar-categorias? true)\r\n                                      (reset! mostrar-productos? false)\r\n                                      (fetch-list-categorias))} \"Mostrar categor\u00edas\"]\r\n               [:button {:on-click #(set! (.-hash js/location) \"#/imagenes\")} \"Mostrar fotograf\u00edas\"]])\r\n            (when @mostrar-productos? [render-productos])\r\n            (when @mostrar-categorias? [render-categorias])]])))))\r\n\r\n(defn page []\r\n  (cond\r\n    (not @sesion-verificada?) [:p {:class \"administracion\"} \"Verificando sesi\u00f3n...\"]\r\n    @logged-in? [admin-panel]\r\n    :else [login-form]))\r\n\r\n\r\n;; Monta la aplicaci\u00f3n en el DOM\r\n(defn init []\r\n  (verificar-sesion)\r\n  (dom/render [page] (.getElementById js/document \"app\")))\r\n\r\n;; Llamar la funci\u00f3n init para iniciar la aplicaci\u00f3n\r\n(init)\r\n"]}