{"version":3,"sources":["administracion/editar.cljs"],"mappings":"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","names":["administracion.editar/producto","reagent.core.atom","administracion.editar/categoria","administracion.editar/campo-seleccionado","administracion.editar/nuevo-valor","administracion.editar/estado-actualizacion","administracion.editar/get-producto-por-id","id","p1__17960#","cljs.core/deref","cljs.core/some","cljs.core._EQ_","app.db/list-productos","administracion.editar/get-categoria-por-id","p1__17964#","app.db/categorias","administracion.editar/tiene-mas-de-dos-decimales?","valor","vec__17968","cljs.core.nth","_","decimales","clojure.string.split","and__5000__auto__","cljs.core/count","administracion.editar/actualizar-producto","producto","campo","valor-num","usuario-id","js/localStorage.getItem","valor-parseado","G__17977","js/parseFloat","body-extendido","cljs.core/clj->js","cljs.core.assoc","url","opciones","js/JSON.stringify","js/fetch","respuesta","cljs.core/reset!","categoria","cljs.core.swap_BANG_","cljs.core/assoc","cljs.core.keyword","e","administracion.editar/actualizar-categoria","body","p1__18015#","administracion.editar/render-edicion-producto","or__5002__auto__","cljs.core.not_EQ_","p1__18020#","p1__18022#","p1__18025#","p1__18028#","p1__18030#","p1__18033#","G__18062","fexpr__18061","iter__5480__auto__","s__18084","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5478__auto__","size__5479__auto__","b__18086","cljs.core/chunk-buffer","i__18085","map__18096","cljs.core/-nth","cljs.core/--destructure-map","cljs.core.get","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__18083","cljs.core/chunk-rest","map__18102","cljs.core/first","cljs.core/cons","cljs.core/rest","nombre","js/isNaN","js/alert","p1__18135#","administracion.editar/render-edicion-categoria","p1__18136#","administracion.editar/alergenos","administracion.editar/columnas-alergenos","vec__18152","vals","mitad","cljs.core/quot","col1","col2","cljs.core/split-at","s__18156","b__18158","i__18157","vec__18161","iter__18155","vec__18171","k","label","s__18181","b__18183","i__18182","vec__18192","iter__18180","vec__18202","administracion.editar/page","app.state/rol-admin?","params","cljs.core.get_in","app.state/current-route","tipo","js/parseInt","with-let18212","reagent.ratom/with-let-values","temp__5808__auto__","reagent.ratom/*ratom-context*","c__12240__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init18213","cljs.core/not","res18214","with-let18216","init18217","res18218","G__18223","js/Error","js/location","cljs.core/chunk-first"],"sourcesContent":["(ns administracion.editar\r\n  (:require [reagent.core :as r]\r\n            [reagent.dom :as dom]\r\n            [app.state :as state]\r\n            [app.state :refer [current-route]]\r\n            [app.db :refer [list-productos categorias]]))\r\n\r\n(def producto (r/atom {}))\r\n(def categoria (r/atom {}))\r\n(def campo-seleccionado (r/atom nil))\r\n(def nuevo-valor (r/atom \"\"))\r\n\r\n(def estado-actualizacion (r/atom nil))\r\n\r\n(defn get-producto-por-id [id]\r\n  (some #(when (= (:id %) id) %) @list-productos))\r\n\r\n(defn get-categoria-por-id [id]\r\n  (some #(when (= (:id %) id) %) @categorias))\r\n\r\n(defn tiene-mas-de-dos-decimales? [valor]\r\n  (let [[_ decimales] (clojure.string/split valor #\"\\.\")]\r\n    (and decimales (> (count decimales) 2))))\r\n\r\n(defn actualizar-producto [producto campo valor valor-num]\r\n  (let [id (:id @producto)\r\n        usuario-id (js/localStorage.getItem \"id\")\r\n        valor-parseado (case campo\r\n                         (\"contiene_gluten\" \"contiene_crustaceos\" \"contiene_huevos\" \"contiene_pescado\"\r\n                                            \"contiene_cacahuetes\" \"contiene_soja\" \"contiene_lacteos\" \"contiene_frutos_de_cascara\"\r\n                                            \"contiene_apio\" \"contiene_mostaza\" \"contiene_granos_de_sesamo\" \"contiene_sulfitos\" \"contiene_moluscos\" \"contiene_altramuces\") (= valor \"true\")\r\n                         (\"precio\" \"categoria_id\") (js/parseFloat valor)\r\n                         valor)\r\n        body-extendido (clj->js (assoc {} campo valor-parseado \"_method\" \"PUT\" \"usuario_id\" usuario-id))\r\n        url (str \"/api/productos/\" id)\r\n        opciones #js {:method \"POST\"\r\n                      :headers #js {\"Content-Type\" \"application/json\"}\r\n                      :body (js/JSON.stringify body-extendido)}]\r\n    (-> (js/fetch url opciones)\r\n        (.then (fn [respuesta]\r\n                 (if (.-ok respuesta)\r\n                   (do\r\n                     (reset! estado-actualizacion (str \"Campo \" campo \" actualizado correctamente.\"))\r\n                     (if (= campo \"categoria_id\")\r\n                       (let [categoria (get-categoria-por-id valor-parseado)]\r\n                         (swap! producto assoc\r\n                                :categoria_id valor-parseado\r\n                                :nombre_categoria (:nombre categoria)))\r\n                       (swap! producto assoc (keyword campo) valor-parseado)))\r\n                   (reset! estado-actualizacion \"Error del servidor al actualizar campo.\"))))\r\n        (.catch (fn [e]\r\n                  (reset! estado-actualizacion \"Error del servidor al actualizar campo.\"))))))\r\n\r\n(defn actualizar-categoria [categoria campo valor]\r\n  (let [id (:id @categoria)\r\n        usuario-id (js/localStorage.getItem \"id\")\r\n        body (clj->js {\"usuario_id\" usuario-id\r\n                       campo valor})\r\n        url (str \"/api/categoria/\" id)\r\n        opciones #js {:method \"PUT\"\r\n                      :headers #js {\"Content-Type\" \"application/json\"}\r\n                      :body (js/JSON.stringify body)}]\r\n    (-> (js/fetch url opciones)\r\n        (.then (fn [respuesta]\r\n                 (if (.-ok respuesta)\r\n                   (do\r\n                     ;; Actualiza los datos localmente en la UI\r\n                     (swap! categoria assoc (keyword campo) valor)\r\n                     (reset! estado-actualizacion (str \"Campo \" campo \" actualizado correctamente.\")))\r\n                   (reset! estado-actualizacion \"Error del servidor al actualizar campo.\"))))\r\n        (.catch (fn [e]\r\n                  (reset! estado-actualizacion \"Error de red al actualizar.\"))))))\r\n\r\n\r\n\r\n(defn render-edicion-producto [producto]\r\n  [:div\r\n   [:h3 \"Selecciona el campo que quieres modificar:\"]\r\n   [:select {:value (or @campo-seleccionado \"\")\r\n             :on-change #(reset! campo-seleccionado (-> % .-target .-value))}\r\n    [:option {:value \"\"} \"-- Selecciona un campo --\"]\r\n    [:option {:value \"nombre\"} \"Nombre\"]\r\n    [:option {:value \"description\"} \"Descripci\u00f3n\"]\r\n    [:option {:value \"precio\"} \"Precio\"]\r\n    [:option {:value \"categoria_id\"} \"Categor\u00eda\"]\r\n    [:option {:value \"tipo_plato\"} \"Tipo de plato\"]\r\n    [:option {:value \"tipo_porcion\"} \"Tipo de porci\u00f3n\"]\r\n    [:option {:value \"\"} \"-- Alergenos --\"]\r\n    [:option {:value \"contiene_gluten\"} \"Contiene Gluten\"]\r\n    [:option {:value \"contiene_crustaceos\"} \"Crustaceos\"]\r\n    [:option {:value \"contiene_huevos\"} \"Huevos\"]\r\n    [:option {:value \"contiene_pescado\"} \"Pescados\"]\r\n    [:option {:value \"contiene_cacahuetes\"} \"Cacahuetes\"]\r\n    [:option {:value \"contiene_soja\"} \"Soja\"]\r\n    [:option {:value \"contiene_lacteos\"} \"L\u00e1cteos\"]\r\n    [:option {:value \"contiene_frutos_de_cascara\"} \"Frutos de cascara\"]\r\n    [:option {:value \"contiene_apio\"} \"Apio\"]\r\n    [:option {:value \"contiene_mostaza\"} \"Mostaza\"]\r\n    [:option {:value \"contiene_granos_de_sesamo\"} \"Granos de sesamo\"]\r\n    [:option {:value \"contiene_sulfitos\"} \"Di\u00f3xido de azufre y sulfitos\"]\r\n    [:option {:value \"contiene_moluscos\"} \"Moluscos\"]\r\n    [:option {:value \"contiene_altramuces\"} \"Altramuces\"]]\r\n\r\n   (when (not= @campo-seleccionado \"\")\r\n     [:div {:style {:margin-top \"15px\"}}\r\n      [:label (str \"Nuevo valor para el campo seleccionado: \")]\r\n      (cond\r\n        ;; Booleans\r\n        (#{\"contiene_gluten\" \"contiene_crustaceos\" \"contiene_huevos\" \"contiene_pescado\" \"contiene_cacahuetes\" \"contiene_soja\" \"contiene_lacteos\" \"contiene_frutos_de_cascara\"\r\n           \"contiene_apio\" \"contiene_mostaza\" \"contiene_granos_de_sesamo\" \"contiene_sulfitos\" \"contiene_moluscos\" \"contiene_altramuces\"} @campo-seleccionado)\r\n        [:select {:value (or @nuevo-valor \"\")\r\n                  :on-change #(reset! nuevo-valor (-> % .-target .-value))}\r\n         [:option {:value \"\"} \"-- Selecciona una opci\u00f3n --\"]\r\n         [:option {:value \"true\"} \"S\u00ed\"]\r\n         [:option {:value \"false\"} \"No\"]]\r\n\r\n        ;; Tipo de plato con opciones espec\u00edficas\r\n        (= @campo-seleccionado \"tipo_porcion\")\r\n        [:select {:value (or @nuevo-valor \"\")\r\n                  :on-change #(reset! nuevo-valor (-> % .-target .-value))}\r\n         [:option {:value \"\"} \"-- Selecciona un tipo de porcion --\"]\r\n         [:option {:value \"Media raci\u00f3n\"} \"Media raci\u00f3n\"]\r\n         [:option {:value \"Raci\u00f3n completa\"} \"Raci\u00f3n completa\"]\r\n         [:option {:value \"Por unidad\"} \"Por unidad\"]]\r\n\r\n        (= @campo-seleccionado \"tipo_plato\")\r\n        [:select {:value (or @nuevo-valor \"\")\r\n                  :on-change #(reset! nuevo-valor (-> % .-target .-value))}\r\n         [:option {:value \"\"} \"-- Selecciona un tipo de plato --\"]\r\n         [:option {:value \"Tapa\"} \"Tapa\"]\r\n         [:option {:value \"Al centro\"} \"Al centro\"]\r\n         [:option {:value \"Principal\"} \"Principal\"]\r\n         [:option {:value \"Postres\"} \"Postres\"]]\r\n\r\n        ;; Categor\u00eda (muestra ID y nombre)\r\n        (= @campo-seleccionado \"categoria_id\")\r\n        [:select {:value (or @nuevo-valor \"\")\r\n                  :on-change #(reset! nuevo-valor (-> % .-target .-value))}\r\n         [:option {:value \"\"} \"-- Selecciona una categor\u00eda --\"]\r\n         (for [{:keys [id nombre]} @categorias]\r\n           ^{:key id} [:option {:value id} (str id \" - \" nombre)])]\r\n\r\n        (= @campo-seleccionado \"precio\")\r\n        [:input {:type \"number\"\r\n                 :step \"0.01\"\r\n                 :min \"0\"\r\n                 :value @nuevo-valor\r\n                 :placeholder (str (get @producto (keyword @campo-seleccionado)))\r\n                 :on-change #(reset! nuevo-valor (-> % .-target .-value))}]\r\n\r\n        ;; Resto de campos usan input libre\r\n        :else\r\n        [:input {:type \"text\"\r\n                 :value @nuevo-valor\r\n                 :placeholder (str (get @producto (keyword @campo-seleccionado)))\r\n                 :on-change #(reset! nuevo-valor (-> % .-target .-value))}])\r\n      [:br]\r\n      [:button\r\n       {:on-click #(cond\r\n                     (= @campo-seleccionado \"precio\")\r\n                     (let [valor-num (js/parseFloat @nuevo-valor)]\r\n                       (cond\r\n                         (or (js/isNaN valor-num) (< valor-num 0))\r\n                         (js/alert \"El precio debe ser un n\u00famero mayor o igual que 0\")\r\n                         (tiene-mas-de-dos-decimales? @nuevo-valor)\r\n                         (js/alert \"El precio solo puede tener hasta dos decimales\")\r\n                         :else\r\n                         (do\r\n                           (actualizar-producto producto @campo-seleccionado @nuevo-valor valor-num)\r\n                           (reset! nuevo-valor \"\")\r\n                           (js/alert \"Producto actualizado, dale al boton de 'Mostrar productos' para actualizar el listado.\"))))\r\n                     :else\r\n                     (do\r\n                       (actualizar-producto producto @campo-seleccionado @nuevo-valor nil)\r\n                       (reset! nuevo-valor \"\")\r\n                       (js/alert \"Producto actualizado, dale al boton de 'Mostrar productos' para actualizar el listado.\")))}\r\n       \"Actualizar campo\"]])])\r\n\r\n\r\n(defn render-edicion-categoria [id categoria]\r\n  [:div\r\n   [:h3 \"Selecciona el campo que quieres modificar:\"]\r\n   [:select {:value (or @campo-seleccionado \"\")\r\n             :on-change #(reset! campo-seleccionado (-> % .-target .-value))}\r\n    [:option {:value \"\"} \"-- Selecciona un campo --\"]\r\n    [:option {:value \"nombre\"} \"Nombre\"]\r\n    [:option {:value \"descripcion\"} \"Descripci\u00f3n\"]]\r\n\r\n   (when (not= @campo-seleccionado \"\")\r\n     [:div {:style {:margin-top \"15px\"}}\r\n      [:label (str \"Nuevo valor para el campo seleccionado: \")]\r\n      [:input {:type \"text\"\r\n               :value @nuevo-valor\r\n               :placeholder (str (get @categoria (keyword @campo-seleccionado)))\r\n               :on-change #(reset! nuevo-valor (-> % .-target .-value))}]\r\n      [:br]\r\n      [:button {:on-click #(do\r\n                             (actualizar-categoria categoria @campo-seleccionado @nuevo-valor)\r\n                             (reset! nuevo-valor \"\")\r\n                             (js/alert \"Categoria actualizado, dale al boton de 'Mostrar categorias' para actualizar el listado.\"))}\r\n       \"Actualizar campo\"]])])\r\n\r\n(def alergenos\r\n  [[:contiene_gluten               \"Gluten\"]\r\n   [:contiene_crustaceos           \"Crust\u00e1ceos\"]\r\n   [:contiene_huevos               \"Huevos\"]\r\n   [:contiene_pescado              \"Pescado\"]\r\n   [:contiene_cacahuetes           \"Cacahuetes\"]\r\n   [:contiene_soja                 \"Soja\"]\r\n   [:contiene_lacteos              \"L\u00e1cteos\"]\r\n   [:contiene_frutos_de_cascara    \"Frutos de c\u00e1scara\"]\r\n   [:contiene_apio                 \"Apio\"]\r\n   [:contiene_mostaza              \"Mostaza\"]\r\n   [:contiene_granos_de_sesamo     \"S\u00e9samo\"]\r\n   [:contiene_sulfitos             \"Sulfitos\"]\r\n   [:contiene_moluscos             \"Moluscos\"]\r\n   [:contiene_altramuces           \"Altramuces\"]])\r\n\r\n(defn columnas-alergenos [producto]\r\n  (let [vals       @producto\r\n        mitad      (quot (count alergenos) 2)\r\n        [col1 col2] (split-at mitad alergenos)]\r\n    [:div.row\r\n     [:div.col-6\r\n      (for [[k label] col1]\r\n        ^{:key k}\r\n        [:p\r\n         [:strong (str label \": \")]\r\n         (if (get vals k)\r\n           [:span.text-success \"\u2714\ufe0f\"]\r\n           [:span.text-danger  \"\u274c\"])])]\r\n     [:div.col-6\r\n      (for [[k label] col2]\r\n        ^{:key k}\r\n        [:p\r\n         [:strong (str label \": \")]\r\n         (if (get vals k)\r\n           [:span.text-success \"\u2714\ufe0f\"]\r\n           [:span.text-danger  \"\u274c\"])])]]))\r\n\r\n\r\n(defn page []\r\n  (if (state/rol-admin?)\r\n    (let [params (get-in @current-route [:parameters :path])\r\n          tipo (:tipo params)\r\n          id (js/parseInt (:id params))]\r\n      (r/with-let [_ (reset! producto (get-producto-por-id id))]\r\n        (r/with-let [_ (reset! categoria (get-categoria-por-id id))]\r\n          (case tipo\r\n            \"producto\"\r\n            (if @producto\r\n              [:div.row {:class \"divEditar\"}\r\n               [:div.col-12 {:class \"volverAtras\"}\r\n                [:button\r\n                 {:on-click #(set! (.-hash js/location) \"#/administracion\")}\r\n                 \"Volver al panel de Administraci\u00f3n\"]]\r\n               [:div.col-12.col-md-6 {:class \"divDatos\"}\r\n                [:h1 \"Datos del producto seleccionado:\"]\r\n                [:p [:strong \"ID: \"] (:id @producto)]\r\n                [:p [:strong \"Nombre: \"] (:nombre @producto)]\r\n                [:p [:strong \"Descripci\u00f3n: \"] (:description @producto)]\r\n                [:p [:strong \"Precio: \"] (str (:precio @producto) \" \u20ac\")]\r\n                [:p [:strong \"Categor\u00eda: \"] (:nombre_categoria @producto)]\r\n                [:p [:strong \"Tipo de plato: \"] (:tipo_plato @producto)]\r\n                [:p [:strong \"Tipo de porci\u00f3n: \"] (:tipo_porcion @producto)]\r\n                [:h3 [:strong \"Al\u00e9rgenos informativos: \"]]\r\n                [columnas-alergenos producto]]\r\n               [:div.col-12.col-md-6 {:class \"divActualizar\"}\r\n                [render-edicion-producto producto]]]\r\n              [:div {:class \"divEditar\"} \"Producto no encontrado\"])\r\n\r\n            \"categoria\"\r\n            (if @categoria\r\n              [:div.row {:class \"divEditar\"}\r\n               [:div.col-12 {:class \"volverAtras\"}\r\n                [:button\r\n                 {:on-click #(set! (.-hash js/location) \"#/administracion\")}\r\n                 \"Volver al panel de Administraci\u00f3n\"]]\r\n               [:div.col-12.col-md-6 {:class \"divDatos\"}\r\n                [:h1 \"Editar categor\u00eda:\"]\r\n                [:p [:strong \"ID: \"] (:id @categoria)]\r\n                [:p [:strong \"Nombre: \"] (:nombre @categoria)]\r\n                [:p [:strong \"Descripci\u00f3n: \"] (:descripcion @categoria)]]\r\n               [:div.col-12.col-md-6 {:class \"divActualizar\"}\r\n                [render-edicion-categoria id categoria]]]\r\n              [:div {:class \"divEditar\"} \"Producto no encontrado\"])))))\r\n    [:div.alert.alert-danger\r\n     [:h4 \"\u26a0\ufe0f Acceso denegado\"]\r\n     [:p \"Para acceder a esta seccion, debes logearte y acceder desde su boton determinado.\"]\r\n     [:button\r\n      {:on-click #(set! (.-hash js/location) \"#/administracion\")}\r\n      \"LOGIN\"]]))\r\n\r\n\r\n\r\n"]}