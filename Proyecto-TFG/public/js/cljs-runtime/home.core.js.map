{"version":3,"sources":["home/core.cljs"],"mappings":"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","names":["home.core/selected-image","reagent.core.atom","home.core/imagenes-carrusel","cljs.core/deref","imagenes","app.db/imagenes","cljs.core/empty?","carousel-id","cljs.core.doall","cljs.core.map_indexed","p__13293","map__13294","cljs.core/--destructure-map","cljs.core.get","i","id","or__5002__auto__","cljs.core._EQ_","p__13295","map__13296","descripcion","imagen_base64","mime_type","home.core/mostrar-imagenes-todas","iter__5480__auto__","s__13298","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5478__auto__","size__5479__auto__","cljs.core/count","b__13300","cljs.core/chunk-buffer","i__13299","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__13297","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","idx","cljs.core.range","map__13301","map__13302","cljs.core.nth","base64-src","cljs.core/reset!","home.core/page","reagent.core.create_class","js/console.log","app.db/cargar-imagenes","home.core/init","reagent.dom.render","js/document","cljs.core/chunk-first"],"sourcesContent":["(ns home.core\r\n  (:require [reagent.core :as r]\r\n            [reagent.dom :as dom]\r\n            [cljs-http.client :as http]\r\n            [app.db :as db]))\r\n\r\n(def selected-image (r/atom nil))\r\n\r\n(defn imagenes-carrusel []\r\n  (let [imagenes @db/imagenes]\r\n    (if (empty? imagenes)\r\n      [:div \"No se encontraron im\u00e1genes.\"]\r\n      (let [carousel-id \"carouselExampleIndicators\"]\r\n        [:div.carousel.slide.container  {:id carousel-id}\r\n         ;; Indicadores de slide (los puntos)\r\n         [:div.carousel-indicators\r\n          (doall\r\n           (map-indexed\r\n            (fn [i {:keys [id]}]\r\n              [:button {:key (str \"indicador-\" (or id i)) \r\n                        :type \"button\"\r\n                        :data-bs-target (str \"#\" carousel-id)\r\n                        :data-bs-slide-to i\r\n                        :class (when (= i 0) \"active\")\r\n                        :aria-current (when (= i 0) \"true\")\r\n                        :aria-label (str \"Slide \" (inc i))}])\r\n            imagenes))]\r\n         ;; Contenido del carrusel\r\n         [:div.carousel-inner\r\n          (doall\r\n           (map-indexed\r\n            (fn [i {:keys [id descripcion imagen_base64 mime_type]}]\r\n              [:div.carousel-item {:key (str \"item-\" (or id i))\r\n                                   :class (when (= i 0) \"active\")}\r\n               [:img {:src (str \"data:\" mime_type \";base64,\" imagen_base64)\r\n                      :alt descripcion\r\n                      :class \"d-block mx-auto\"}]])\r\n            imagenes))]\r\n\r\n         ;; Bot\u00f3n \"Anterior\"\r\n         [:button.carousel-control-prev\r\n          {:type \"button\"\r\n           :class \"button\"\r\n           :data-bs-target (str \"#\" carousel-id)\r\n           :data-bs-slide \"prev\"}\r\n          [:span.carousel-control-prev-icon {:aria-hidden \"true\"}]\r\n          [:span.visually-hidden \"Previous\"]]\r\n         ;; Bot\u00f3n \"Siguiente\"\r\n         [:button.carousel-control-next\r\n          {:type \"button\"\r\n           :class \"button\"\r\n           :data-bs-target (str \"#\" carousel-id)\r\n           :data-bs-slide \"next\"}\r\n          [:span.carousel-control-next-icon {:aria-hidden \"true\"}]\r\n          [:span.visually-hidden \"Next\"]]]))))\r\n\r\n\r\n(defn mostrar-imagenes-todas []\r\n  (let [imagenes @db/imagenes]\r\n    (if (empty? imagenes)\r\n      [:div \"No se encontraron im\u00e1genes.\"]\r\n      [:div\r\n       ;; Galer\u00eda de im\u00e1genes\r\n       [:div.row {:class \"containerImg\"}\r\n        (for [idx (range (count imagenes))]\r\n          (let [{:keys [id descripcion imagen_base64 mime_type]} (nth imagenes idx)\r\n                base64-src (str \"data:\" mime_type \";base64,\" imagen_base64)]\r\n            ^{:key (str id \"-\" idx)}  ;; Usa id + \u00edndice para asegurar unicidad\r\n            [:div.col-12.col-md-5.conjuntoImagenes\r\n             {:on-click #(reset! selected-image {:src base64-src :alt descripcion})}\r\n             [:img {:src base64-src :alt descripcion}]]))]\r\n\r\n       ;; Modal\r\n       (when @selected-image\r\n         [:div.modal-container.active\r\n          [:div.modal-content\r\n           [:img {:src (:src @selected-image)\r\n                  :alt (:alt @selected-image)}]\r\n           [:button.close-btn {:on-click #(reset! selected-image nil)} \"X\"]]])])))\r\n\r\n;; Funcion page para estructurar la pagina\r\n(defn page []\r\n  (r/create-class\r\n   {:component-did-mount\r\n    (fn []\r\n      (js/console.log \"Componente montado. Llamando a cargar-imagenes...\")\r\n      (db/cargar-imagenes))\r\n    :reagent-render\r\n    (fn []\r\n      [:div.row\r\n       [:div.col-12 {:class \"container\"}\r\n        [:h3 \"Galer\u00eda de Im\u00e1genes\"]\r\n        [imagenes-carrusel]\r\n        [mostrar-imagenes-todas]]])}))\r\n\r\n;; Inicializa la app\r\n(defn init []\r\n  (dom/render [page] (.getElementById js/document \"app\")))\r\n(init)\r\n"]}