{
"version":3,
"file":"module$node_modules$crypto_js$sha1.js",
"lineCount":49,
"mappings":"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",
"sources":["node_modules/crypto-js/sha1.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$crypto_js$sha1\"] = function(global,require,module,exports) {\n;(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));\n};"],
"names":["shadow$provide","global","require","module","exports","root","factory","define","amd","CryptoJS","C_lib","lib","WordArray","Hasher","W","SHA1","algo","extend","_doReset","_hash","init","_doProcessBlock","M","offset","H","words","a","b","c","d","e","i","n","t","_doFinalize","data","_data","dataWords","nBitsTotal","_nDataBytes","nBitsLeft","sigBytes","Math","floor","length","_process","clone","call","_createHelper","HmacSHA1","_createHmacHelper"]
}
