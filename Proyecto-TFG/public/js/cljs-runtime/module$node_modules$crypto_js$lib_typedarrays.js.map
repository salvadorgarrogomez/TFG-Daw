{
"version":3,
"file":"module$node_modules$crypto_js$lib_typedarrays.js",
"lineCount":27,
"mappings":"AAAAA,cAAA,CAAA,6CAAA,GAAkE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AACxG,WAAS,CAACC,IAAD,EAAOC,OAAP,CAAgB;AACH,YAAvB,KAAI,MAAOF,QAAX,GAECD,MAAOC,CAAAA,OAFR,GAEkBA,OAFlB,GAE4BE,OAAA,CAAQJ,OAAA,CAAQ,oCAAR,CAAR,CAF5B,GAI2B,UAAtB,KAAI,MAAOK,OAAX,IAAoCA,MAAOC,CAAAA,GAA3C,GAEJD,MAAA,CAAO,CAAC,QAAD,CAAP,EAAmBD,OAAnB,CAFI,GAMJA,OAAA,CAAQD,IAAKI,CAAAA,QAAb,CAVD;AAD0B,GAAzB,CAAA,CAaA,IAbA,EAaM,QAAS,CAACA,QAAD,CAAW;AAE1B,aAAS,EAAG;AAET,UAA0B,UAA1B,IAAI,MAAOC,YAAX,CAAA;AAOA,YAAIC,YAFIF,QACMG,CAAAA,GACQD,CAAAA,SAAtB,EAGIE,YAAYF,SAAUG,CAAAA,IAH1B;AA6CQC,SAvCMJ,SAAUG,CAAAA,IAuChBC,GAvCuBC,QAAS,CAACC,UAAD,CAAa;AAE7CA,oBAAJ,YAA0BP,WAA1B,KACIO,UADJ,GACiB,IAAIC,UAAJ,CAAeD,UAAf,CADjB;AAKA,cACIA,UADJ,YAC0BE,SAD1B,IAEkC,WAFlC,KAEK,MAAOC,kBAFZ,IAEiDH,UAFjD,YAEuEG,iBAFvE,IAGIH,UAHJ,YAG0BI,UAH1B,IAIIJ,UAJJ,YAI0BK,WAJ1B,IAKIL,UALJ,YAK0BM,UAL1B,IAMIN,UANJ,YAM0BO,WAN1B,IAOIP,UAPJ,YAO0BQ,YAP1B,IAQIR,UARJ,YAQ0BS,YAR1B;AAUIT,sBAAA,GAAa,IAAIC,UAAJ,CAAeD,UAAWU,CAAAA,MAA1B,EAAkCV,UAAWW,CAAAA,UAA7C,EAAyDX,UAAWY,CAAAA,UAApE,CAAb;AAVJ;AAcA,cAAIZ,UAAJ,YAA0BC,UAA1B,CAAsC;AAMlC,iBAJA,IAAIY,uBAAuBb,UAAWY,CAAAA,UAAtC,EAGIE,QAAQ,EAHZ,EAISC,IAAI,CAAb,EAAgBA,CAAhB,GAAoBF,oBAApB,EAA0CE,CAAA,EAA1C;AACID,mBAAA,CAAMC,CAAN,KAAY,CAAZ,CAAA,IAAkBf,UAAA,CAAWe,CAAX,CAAlB,IAAoC,EAApC,GAA0CA,CAA1C,GAA8C,CAA9C,GAAmD,CAAnD;AADJ;AAKAnB,qBAAUoB,CAAAA,IAAV,CAAe,IAAf,EAAqBF,KAArB,EAA4BD,oBAA5B,CAAA;AAXkC,WAAtC;AAcIjB,qBAAUqB,CAAAA,KAAV,CAAgB,IAAhB,EAAsBC,SAAtB,CAAA;AAdJ;AArBiD,SAuC7CpB,EAAAA,SAAR,GAAoBJ,SAApB;AApDA;AAFS,KAAZ,CAAA,EAAD;AA0DA,WAAOF,QAASG,CAAAA,GAAID,CAAAA,SAApB;AA5D2B,GAb1B,CAAD;AADyG,CAA1G;;",
"sources":["node_modules/crypto-js/lib-typedarrays.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$crypto_js$lib_typedarrays\"] = function(global,require,module,exports) {\n;(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));\n};"],
"names":["shadow$provide","global","require","module","exports","root","factory","define","amd","CryptoJS","ArrayBuffer","WordArray","lib","superInit","init","prototype","WordArray.init","typedArray","Uint8Array","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","buffer","byteOffset","byteLength","typedArrayByteLength","words","i","call","apply","arguments"]
}
