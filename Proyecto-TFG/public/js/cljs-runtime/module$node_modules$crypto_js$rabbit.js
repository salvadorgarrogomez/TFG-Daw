shadow$provide.module$node_modules$crypto_js$rabbit = function(global, require, module, exports) {
  (function(root, factory, undef) {
    "object" === typeof exports ? module.exports = exports = factory(require("module$node_modules$crypto_js$core"), require("module$node_modules$crypto_js$enc_base64"), require("module$node_modules$crypto_js$md5"), require("module$node_modules$crypto_js$evpkdf"), require("module$node_modules$crypto_js$cipher_core")) : "function" === typeof define && define.amd ? define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], factory) : factory(root.CryptoJS);
  })(this, function(CryptoJS) {
    (function() {
      function nextState() {
        for (var X = this._X, C = this._C, i = 0; 8 > i; i++) {
          C_[i] = C[i];
        }
        C[0] = C[0] + 1295307597 + this._b | 0;
        C[1] = C[1] + 3545052371 + (C[0] >>> 0 < C_[0] >>> 0 ? 1 : 0) | 0;
        C[2] = C[2] + 886263092 + (C[1] >>> 0 < C_[1] >>> 0 ? 1 : 0) | 0;
        C[3] = C[3] + 1295307597 + (C[2] >>> 0 < C_[2] >>> 0 ? 1 : 0) | 0;
        C[4] = C[4] + 3545052371 + (C[3] >>> 0 < C_[3] >>> 0 ? 1 : 0) | 0;
        C[5] = C[5] + 886263092 + (C[4] >>> 0 < C_[4] >>> 0 ? 1 : 0) | 0;
        C[6] = C[6] + 1295307597 + (C[5] >>> 0 < C_[5] >>> 0 ? 1 : 0) | 0;
        C[7] = C[7] + 3545052371 + (C[6] >>> 0 < C_[6] >>> 0 ? 1 : 0) | 0;
        this._b = C[7] >>> 0 < C_[7] >>> 0 ? 1 : 0;
        for (i = 0; 8 > i; i++) {
          var gx = X[i] + C[i], ga = gx & 65535, gb = gx >>> 16;
          G[i] = ((ga * ga >>> 17) + ga * gb >>> 15) + gb * gb ^ ((gx & 4294901760) * gx | 0) + ((gx & 65535) * gx | 0);
        }
        X[0] = G[0] + (G[7] << 16 | G[7] >>> 16) + (G[6] << 16 | G[6] >>> 16) | 0;
        X[1] = G[1] + (G[0] << 8 | G[0] >>> 24) + G[7] | 0;
        X[2] = G[2] + (G[1] << 16 | G[1] >>> 16) + (G[0] << 16 | G[0] >>> 16) | 0;
        X[3] = G[3] + (G[2] << 8 | G[2] >>> 24) + G[1] | 0;
        X[4] = G[4] + (G[3] << 16 | G[3] >>> 16) + (G[2] << 16 | G[2] >>> 16) | 0;
        X[5] = G[5] + (G[4] << 8 | G[4] >>> 24) + G[3] | 0;
        X[6] = G[6] + (G[5] << 16 | G[5] >>> 16) + (G[4] << 16 | G[4] >>> 16) | 0;
        X[7] = G[7] + (G[6] << 8 | G[6] >>> 24) + G[5] | 0;
      }
      var StreamCipher = CryptoJS.lib.StreamCipher, S = [], C_ = [], G = [], Rabbit = CryptoJS.algo.Rabbit = StreamCipher.extend({_doReset:function() {
        for (var K = this._key.words, iv = this.cfg.iv, i = 0; 4 > i; i++) {
          K[i] = (K[i] << 8 | K[i] >>> 24) & 16711935 | (K[i] << 24 | K[i] >>> 8) & 4278255360;
        }
        var X = this._X = [K[0], K[3] << 16 | K[2] >>> 16, K[1], K[0] << 16 | K[3] >>> 16, K[2], K[1] << 16 | K[0] >>> 16, K[3], K[2] << 16 | K[1] >>> 16];
        K = this._C = [K[2] << 16 | K[2] >>> 16, K[0] & 4294901760 | K[1] & 65535, K[3] << 16 | K[3] >>> 16, K[1] & 4294901760 | K[2] & 65535, K[0] << 16 | K[0] >>> 16, K[2] & 4294901760 | K[3] & 65535, K[1] << 16 | K[1] >>> 16, K[3] & 4294901760 | K[0] & 65535];
        for (i = this._b = 0; 4 > i; i++) {
          nextState.call(this);
        }
        for (i = 0; 8 > i; i++) {
          K[i] ^= X[i + 4 & 7];
        }
        if (iv) {
          i = iv.words;
          iv = i[0];
          i = i[1];
          iv = (iv << 8 | iv >>> 24) & 16711935 | (iv << 24 | iv >>> 8) & 4278255360;
          i = (i << 8 | i >>> 24) & 16711935 | (i << 24 | i >>> 8) & 4278255360;
          X = iv >>> 16 | i & 4294901760;
          var i3 = i << 16 | iv & 65535;
          K[0] ^= iv;
          K[1] ^= X;
          K[2] ^= i;
          K[3] ^= i3;
          K[4] ^= iv;
          K[5] ^= X;
          K[6] ^= i;
          K[7] ^= i3;
          for (i = 0; 4 > i; i++) {
            nextState.call(this);
          }
        }
      }, _doProcessBlock:function(M, offset) {
        var X = this._X;
        nextState.call(this);
        S[0] = X[0] ^ X[5] >>> 16 ^ X[3] << 16;
        S[1] = X[2] ^ X[7] >>> 16 ^ X[5] << 16;
        S[2] = X[4] ^ X[1] >>> 16 ^ X[7] << 16;
        S[3] = X[6] ^ X[3] >>> 16 ^ X[1] << 16;
        for (X = 0; 4 > X; X++) {
          S[X] = (S[X] << 8 | S[X] >>> 24) & 16711935 | (S[X] << 24 | S[X] >>> 8) & 4278255360, M[offset + X] ^= S[X];
        }
      }, blockSize:4, ivSize:2});
      CryptoJS.Rabbit = StreamCipher._createHelper(Rabbit);
    })();
    return CryptoJS.Rabbit;
  });
};

//# sourceMappingURL=module$node_modules$crypto_js$rabbit.js.map
