{"version":3,"sources":["o2w/api/data.cljs"],"mappings":"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","names":["o2w.api.data/remote-data*","reagent.core.atom","o2w.api.data/component-id","c","map__12666","cljs.core/--destructure-map","cljs.core.get","id","reagent.core/argv","or__5002__auto__","reagent.impl.component/component-name","o2w.api.data/get-data","k","cljs.core/deref","cljs.core.get_in","o2w.api.data/set-data","value","cljs.core.swap_BANG_","cljs.core/assoc-in","o2w.api.data/cancel-timeout","temp__5804__auto__","timeout","js/clearTimeout","o2w.api.data/save-params","argv","cljs.core/select-keys","o2w.api.data/params-changed?","temp__5802__auto__","old","cljs.core.not_EQ_","p__12676","map__12677","o2w.api.data/load-data!","atom","endpoint","params","refresh","loading?","error","interceptor","ok","base-url","headers","params-interceptor","args","cljs.core/identity","request","reagent.core/cursor","set-timeout","js/setTimeout","request-params","G__12678","p1__12674#","p1__12675#","cljs.core/reset!","fexpr__12679","o2w.api.impl/config","cljs.core.assoc","cljs.core.merge","o2w.api.impl.req","p__12680","map__12681","o2w.api.data/load-remote-data","cache?","reset?","cljs.core/not","o2w.api.data/cancel-load-data","ajax.core/abort","p__12687","map__12688","o2w.api.data/source","reagent.core.create_class","this","new-argv","cljs.core/last"],"sourcesContent":["(ns o2w.api.data\n  (:require [reagent.core :as r]\n            [reagent.impl.component :refer [component-name]]\n            [o2w.api.impl :as impl]\n            [ajax.core :as ajax]))\n\n(def remote-data* (r/atom {}))\n\n(defn component-id [c]\n  (let [{:keys [id]} (r/argv c)]\n    (or id (component-name c))))\n\n(defn get-data [c k] (get-in @remote-data* [(component-id c) k]))\n(defn set-data [c k value] (swap! remote-data* assoc-in [(component-id c) k] value))\n\n(defn cancel-timeout [c]\n  (when-let [timeout (get-data c :timeout)]\n    (js/clearTimeout timeout)))\n\n(defn save-params [c argv]\n  (swap! remote-data* assoc-in [(component-id c) :argv] (select-keys argv [:params :endpoint])))\n\n(defn params-changed? [c argv]\n  (if-let [old (get-data c :argv)]\n    (not= old (select-keys argv [:params :endpoint]))\n    true))\n\n(defn load-data!\n  [c atom {:keys [endpoint params refresh loading? error interceptor ok base-url headers\n                  params-interceptor]\n           :as   args\n           :or   {interceptor identity}}]\n\n  (let [request        (r/cursor remote-data* [(component-id c) :request])\n        set-timeout    (fn [] (when refresh\n                               (cancel-timeout c)\n                               (set-data c :timeout (js/setTimeout #(load-data! c atom args) (* 1000 refresh)))))\n        request-params (cond-> {:params  (if params-interceptor (params-interceptor params) params)\n                                :request request\n                                :error   #(do\n                                            (set-timeout)\n                                            (when loading? (reset! loading? false))\n                                            (if error (error % atom) ((:error @impl/config) %)))\n                                :ok      #(do\n                                            (set-timeout)\n                                            (reset! atom (interceptor %))\n                                            (when ok (ok % atom))\n                                            (when loading? (reset! loading? false)))}\n                         params-interceptor (assoc :interceptor identity)\n                         base-url           (merge {:base-url base-url})\n                         headers            (merge {:headers headers}))]\n\n    (impl/req endpoint request-params)))\n\n(defn load-remote-data [c atom {:keys [cache? reset? loading?]\n                                :as   args\n                                :or   {cache? true}}]\n  (when (or (not cache?) (not @atom) (params-changed? c args))\n    (when reset? (reset! atom nil))\n    (when loading? (reset! loading? true))\n    (load-data! c atom args)\n    (save-params c args)))\n\n(defn cancel-load-data [c]\n  (cancel-timeout c)\n  (when-let [request (get-data c :request)]\n    (ajax/abort request)))\n\n(defn source [atom {:keys [id] :as argv}]\n  (r/create-class {:displayName                  (or id \"remote-data\")\n                   :component-did-mount          (fn [this] (load-remote-data this atom argv))\n                   :component-will-receive-props (fn [this new-argv] (load-remote-data this atom (last new-argv)))\n                   :reagent-render               (fn [atom params])\n                   :component-will-unmount       (fn [this] (cancel-load-data this))}))\n"],"x_google_ignoreList":[0]}