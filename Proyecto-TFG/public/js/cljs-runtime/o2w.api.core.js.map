{"version":3,"sources":["o2w/api/core.cljs"],"mappings":";AAOA,AAAKA,mBAAIC;AACT,AAAKC,oBAAKD;AACV,AAAKE,sBAAOC;AACZ,mBAAA,nBAAMC,8CAAKC,SAASC;AAApB,AAA0B,QAACP,iDAAAA,gEAAAA,jBAAIM,6CAAAA,pCAASC,6CAAAA;;AACxC,oBAAA,pBAAMC,gDAAMF,SAASC;AAArB,AAA2B,IAAAE,WAAKH;IAALI,WAAc,uGAAA,2CAAA,uDAAA,zMAACC,qQAAsBJ;AAArC,AAAA,wGAAAE,SAAAC,wCAAAD,SAAAC,1JAACV,iDAAAA,oEAAAA;;AAC5B,uBAAA,vBAAMY,qDAAQN,SAASC;AAAvB,AAA6B,IAAAM,WAAKP;IAALQ,WAAc,uGAAA,2CAAA,uDAAA,zMAACH,2QAAwBJ;AAAvC,AAAA,wGAAAM,SAAAC,wCAAAD,SAAAC,1JAACd,iDAAAA,oEAAAA;;AAC9B,mBAAA,nBAAMe,8CAAKT,SAASC;AAApB,AAA0B,IAAAS,WAAKV;IAALW,WAAc,uGAAA,2CAAA,uDAAA,zMAACN,oQAAqBJ;AAApC,AAAA,wGAAAS,SAAAC,wCAAAD,SAAAC,1JAACjB,iDAAAA,oEAAAA;;AAC3B,qBAAA,rBAAMkB,kDAAOZ,SAASC;AAAtB,AAA4B,IAAAY,WAAKb;IAALc,WAAc,uGAAA,2CAAA,uDAAA,zMAACT,uQAAuBJ;AAAtC,AAAA,wGAAAY,SAAAC,wCAAAD,SAAAC,1JAACpB,iDAAAA,oEAAAA;;AAE7B,AAAKqB,8BAAeC;AACpB,AAAKC,oCAAgBC;AACrB,AAAKC,sCAAkBC;AAEvB,yBAAA,zBAAMC,0DAAWC;AAAjB,AACE,OAACC,mDAAMC,oBAAYC,gBAAMH;;AAK3B,AAAKI,6BAAc,uEAAA,vEAACC,gDAAQC;AAE5B,4BAAA,5BAAMC,gEAAcC;AAApB,AACE,oDAAA,7CAACC,gFAAQ,AAACC,+CAAOC,iBAAOH;;AAE1B,AAAKI,oBAAKC;AACV,AAAKC,6BAASC;AACd,AAAKC,2BAAOC","names":["o2w.api.core/req","o2w.api.impl/req","o2w.api.core/call","o2w.api.core/source","o2w.api.data/source","o2w.api.core/get","endpoint","args","o2w.api.core/post","G__12735","G__12736","cljs.core.merge","o2w.api.core/delete","G__12737","G__12738","o2w.api.core/put","G__12739","G__12740","o2w.api.core/patch","G__12741","G__12742","o2w.api.core/get-auth-token","o2w.api.impl/get-token","o2w.api.core/set-auth-token!","o2w.api.impl/set-token","o2w.api.core/clear-auth-token!","o2w.api.impl/clear-token","o2w.api.core/configure","new-config","cljs.core.swap_BANG_","o2w.api.impl/config","cljs.core/merge","o2w.api.core/params-to-str","cljs.core.partial","ajax.url/params-to-str","o2w.api.core/params-clean","params","cljs.core.into","cljs.core.filter","cljs.core/second","o2w.api.core/atom","o2w.api.atom/remote-atom","o2w.api.core/refresh!","o2w.api.atom/refresh!","o2w.api.core/clean!","o2w.api.atom/clean!"],"sourcesContent":["(ns o2w.api.core\n  (:refer-clojure :exclude [get atom])\n  (:require [o2w.api.impl :as impl]\n            [o2w.api.atom]\n            [ajax.url :as url]\n            [o2w.api.data :as data]))\n\n(def req impl/req)\n(def call impl/req)\n(def source data/source)\n(defn get [endpoint args] (req endpoint args))\n(defn post [endpoint args] (req endpoint (merge {:method :post} args)))\n(defn delete [endpoint args] (req endpoint (merge {:method :delete} args)))\n(defn put [endpoint args] (req endpoint (merge {:method :put} args)))\n(defn patch [endpoint args] (req endpoint (merge {:method :patch} args)))\n\n(def get-auth-token impl/get-token)\n(def set-auth-token! impl/set-token)\n(def clear-auth-token! impl/clear-token)\n\n(defn configure [new-config]\n  (swap! impl/config merge new-config))\n\n;; (defn << [path & [args]] (rf/subscribe [:api/subscribe path args]))\n;; (defn >> [path value] (rf/dispatch [:api/assoc-in path value]))\n;; (defn <<! [path & [args]] (rf/dispatch [:api/fetch path args]))\n(def params-to-str (partial url/params-to-str :java))\n\n(defn params-clean [params]\n  (into {} (filter second params)))\n\n(def atom o2w.api.atom/remote-atom)\n(def refresh! o2w.api.atom/refresh!)\n(def clean! o2w.api.atom/clean!)\n"],"x_google_ignoreList":[0]}