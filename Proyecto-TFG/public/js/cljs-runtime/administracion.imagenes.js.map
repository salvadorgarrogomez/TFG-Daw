{"version":3,"sources":["administracion/imagenes.cljs"],"mappings":"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","names":["js/administracion","js/administracion.imagenes","js/administracion.imagenes.imagen","administracion.imagenes/imagen","reagent.core.atom","administracion.imagenes/handle-file-change","event","file","cljs.core/first","and__5000__auto__","cljs.core/re-matches","cljs.core/reset!","administracion.imagenes/subir-imagen","usuario-id","js/localStorage","cljs.core/deref","cljs.core/empty?","form-data","js/FormData","cljs_http.client.post","response","js/alert","app.db/cargar-imagenes","administracion.imagenes/eliminar-imagen","id","js/confirm","cljs_http.client.delete$","_","administracion.imagenes/mostrar-imagenes-todas","imagenes","app.db/imagenes","imagen-seleccionada","iter__5480__auto__","s__15401","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5478__auto__","size__5479__auto__","cljs.core/count","b__15403","cljs.core/chunk-buffer","i__15402","map__15419","cljs.core/-nth","cljs.core/--destructure-map","cljs.core.get","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__15400","cljs.core/chunk-rest","map__15433","cljs.core/cons","cljs.core/rest","descripcion","imagen_base64","mime_type","js/location","administracion.imagenes/formulario-subida","administracion.imagenes/page","app.state/rol-admin?","reagent.core.create_class","js/console.log","administracion.imagenes/init","reagent.dom.render","js/document","cljs.core/chunk-first"],"sourcesContent":["(ns administracion.imagenes\r\n  (:require [reagent.core :as r]\r\n            [reagent.dom :as dom]\r\n            [cljs-http.client :as http]\r\n            [app.state :as state]\r\n            [app.db :as db]))\r\n\r\n(defonce imagen (r/atom nil)) ;; \u00c1tomo para almacenar la imagen seleccionada\r\n\r\n;; Funci\u00f3n para manejar el cambio de archivo\r\n(defn handle-file-change [event]\r\n  (let [file (first (.-files (.-target event)))]\r\n    (when (and file (<= (.-size file) 2048000) (re-matches #\".*\\.(jpg|jpeg|png|gif|svg)$\" (.-name file)))\r\n      (reset! imagen [file]))))\r\n\r\n;; Funci\u00f3n para subir la imagen\r\n(defn subir-imagen []\r\n  (let [usuario-id (.getItem js/localStorage \"id\")]\r\n    (if (not (empty? @imagen))\r\n      (let [form-data (js/FormData.)]\r\n        (.append form-data \"imagen\" (first @imagen)) ;; Agrega la imagen al formulario\r\n        (.append form-data \"usuario_id\" usuario-id)\r\n        (http/post \"/api/subir-imagen\"\r\n                   {:body form-data\r\n                    :response-format :json\r\n                    :on-success (fn [response]\r\n                                  (js/alert \"Imagen subida con \u00e9xito\")\r\n                                  (db/cargar-imagenes))\r\n                    :on-failure (fn [response]\r\n                                  (js/alert \"Error al subir la imagen\"))})))))\r\n\r\n(defn eliminar-imagen [id]\r\n  (when (js/confirm \"\u00bfEst\u00e1s seguro de que quieres eliminar esta imagen?\")\r\n    (http/delete (str \"/api/imagen/eliminar/\" id)\r\n                 {:response-format :json\r\n                  :on-success (fn [_]\r\n                                (js/alert \"Imagen eliminada\")\r\n                                (db/cargar-imagenes))\r\n                  :on-failure (fn [_]\r\n                                (js/alert \"Error al eliminar la imagen\"))})))\r\n\r\n\r\n(defn mostrar-imagenes-todas []\r\n  (let [imagenes @db/imagenes   ;; Obtenci\u00f3n de las im\u00e1genes desde el atom\r\n        imagen-seleccionada (r/atom nil)] ;; Atom para la imagen seleccionada\r\n    (if (empty? imagenes)\r\n      [:div \"No se encontraron im\u00e1genes.\"]\r\n       [:div.row {:class \"adminImagenes\"}\r\n        (for [{:keys [id descripcion imagen_base64 mime_type]} imagenes]\r\n          ^{:key id}\r\n          [:div.col-12.col-md-3 {:class \"conjuntoImagenesAdmin\"}\r\n           [:img {:src (str \"data:\" mime_type \";base64,\" imagen_base64)\r\n                  :alt descripcion\r\n                  :style {:cursor \"pointer\"}\r\n                  :on-click #(do\r\n                               (eliminar-imagen id)\r\n                               (.reload js/location true))}]])])))\r\n\r\n;; Formulario para subir imagenes a la base de datos\r\n;; En este caso, solo permite subir imagenes de 1 en 1\r\n(defn formulario-subida []\r\n  [:div {:class \"formulario\"}\r\n   [:h3 \"Subir Imagen\"\r\n    [:p \"(solo se puede subir de 1 en 1)\"]]\r\n   [:input {:type \"file\"\r\n            :on-change handle-file-change\r\n            :class \"inputImagen\"}]\r\n   [:button {:on-click #(if (empty? @imagen)\r\n                          (js/alert \"Debes seleccionar una imagen.\")\r\n                          (do\r\n                            (subir-imagen)\r\n                            (.reload js/location true)))}\r\n    \"Subir Imagen\"]])\r\n\r\n\r\n;; Funcion page para estructurar la pagina\r\n(defn page []\r\n  (if (state/rol-admin?)\r\n    (r/create-class\r\n     {:component-did-mount\r\n      (fn []\r\n        (js/console.log \"Componente montado. Llamando a cargar-imagenes...\")\r\n        (db/cargar-imagenes))\r\n      :reagent-render\r\n      (fn []\r\n        [:div.row {:class \"divPanelImagenes\"}\r\n         [:div.col-12 {:class \"volverAtras\"}\r\n          [:button\r\n           {:on-click #(set! (.-hash js/location) \"#/administracion\")}\r\n           \"Volver al panel de Administraci\u00f3n\"]]\r\n         [:div.row {:class \"adminImagenes\"}\r\n          [:div.col.12\r\n           [:h1 \"Directorio de im\u00e1genes:\"]\r\n           [:div.col.12 {:class \"formImagenes\"}\r\n            [formulario-subida]\r\n            [mostrar-imagenes-todas]]]]])})\r\n    ;; Mostrar mensaje si el acceso no est\u00e1 permitido\r\n    [:div.alert.alert-danger\r\n     [:h4 \"\u26a0\ufe0f Acceso denegado\"]\r\n     [:p \"Para acceder a esta seccion, debes logearte y acceder desde su boton determinado.\"]\r\n     [:button\r\n      {:on-click #(set! (.-hash js/location) \"#/administracion\")}\r\n      \"LOGIN\"]]))\r\n\r\n\r\n;; Inicializa la app\r\n(defn init []\r\n  (dom/render [page] (.getElementById js/document \"app\")))\r\n(init)\r\n"]}