{"version":3,"sources":["administracion/imagenes.cljs"],"mappings":"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","names":["js/administracion","js/administracion.imagenes","js/administracion.imagenes.imagen","administracion.imagenes/imagen","reagent.core.atom","administracion.imagenes/handle-file-change","event","file","cljs.core/first","and__5000__auto__","cljs.core/re-matches","cljs.core/reset!","administracion.imagenes/subir-imagen","cljs.core/deref","cljs.core/empty?","form-data","js/FormData","cljs_http.client.post","response","js/alert","app.db/cargar-imagenes","administracion.imagenes/mostrar-imagenes-todas","imagenes","app.db/imagenes","imagen-seleccionada","iter__5480__auto__","s__42348","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5478__auto__","size__5479__auto__","cljs.core/count","b__42350","cljs.core/chunk-buffer","i__42349","map__42361","cljs.core/-nth","cljs.core/--destructure-map","cljs.core.get","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__42347","cljs.core/chunk-rest","map__42365","cljs.core/cons","cljs.core/rest","id","descripcion","imagen_base64","mime_type","administracion.imagenes/formulario-subida","administracion.imagenes/page","app.state/acceso-imagenes?","reagent.core.create_class","js/console.log","administracion.imagenes/init","reagent.dom.render","js/document","cljs.core/chunk-first"],"sourcesContent":["(ns administracion.imagenes\r\n  (:require [reagent.core :as r]\r\n            [reagent.dom :as dom]\r\n            [cljs-http.client :as http]\r\n            [app.state :as state]\r\n            [app.db :as db]))\r\n\r\n(defonce imagen (r/atom nil)) ;; \u00c1tomo para almacenar la imagen seleccionada\r\n\r\n;; Funci\u00f3n para manejar el cambio de archivo\r\n(defn handle-file-change [event]\r\n  (let [file (first (.-files (.-target event)))]\r\n    (when (and file (<= (.-size file) 2048000) (re-matches #\".*\\.(jpg|jpeg|png|gif|svg)$\" (.-name file)))\r\n      (reset! imagen [file]))))\r\n\r\n;; Funci\u00f3n para subir la imagen\r\n(defn subir-imagen []\r\n  (if (not (empty? @imagen))\r\n    (let [form-data (js/FormData.)]\r\n      (.append form-data \"imagen\" (first @imagen)) ;; Agrega la imagen al formulario\r\n      (http/post \"/api/subir-imagen\"\r\n                 {:body form-data\r\n                  :response-format :json\r\n                  :on-success (fn [response]\r\n                                (js/alert \"Imagen subida con \u00e9xito\")\r\n                                (db/cargar-imagenes))\r\n                  :on-failure (fn [response]\r\n                                (js/alert \"Error al subir la imagen\"))}))))\r\n\r\n(defn mostrar-imagenes-todas []\r\n  (let [imagenes @db/imagenes   ;; Obtenci\u00f3n de las im\u00e1genes desde el atom\r\n        imagen-seleccionada (r/atom nil)] ;; Atom para la imagen seleccionada\r\n    (if (empty? imagenes)\r\n      [:div \"No se encontraron im\u00e1genes.\"]\r\n      [:div\r\n       [:div.row\r\n        (for [{:keys [id descripcion imagen_base64 mime_type]} imagenes]\r\n          ^{:key id}\r\n          [:div.col-12.col-md-3 {:class \"conjuntoImagenes\"}\r\n           [:img {:src (str \"data:\" mime_type \";base64,\" imagen_base64)\r\n                  :alt descripcion}]])]])))\r\n\r\n;; Formulario para subir imagenes a la base de datos\r\n;; En este caso, solo permite subir imagenes de 1 en 1\r\n(defn formulario-subida []\r\n  [:div\r\n   [:h2 \"Subir Imagen\"]\r\n   [:input {:type \"file\"\r\n            :on-change handle-file-change}]\r\n   [:button {:on-click #(do\r\n                          (subir-imagen))} \"Subir Imagen\"]])\r\n\r\n;; Funcion page para estructurar la pagina\r\n(defn page []\r\n  (if @state/acceso-imagenes?\r\n    (r/create-class\r\n     {:component-did-mount\r\n      (fn []\r\n        (js/console.log \"Componente montado. Llamando a cargar-imagenes...\")\r\n        (db/cargar-imagenes))\r\n      :reagent-render\r\n      (fn []\r\n        [:div.row\r\n         [:div.col-12 {:class \"adminImagenes\"}\r\n          [:h3 \"Directorio de im\u00e1genes:\"]\r\n          [formulario-subida]\r\n          [mostrar-imagenes-todas]]])})\r\n    ;; Mostrar mensaje si el acceso no est\u00e1 permitido\r\n    [:div.alert.alert-danger\r\n     [:h4 \"\u26a0\ufe0f Acceso denegado\"]\r\n     [:p \"Para acceder a esta seccion, debes logearte y acceder desde su boton determinado.\"]]))\r\n\r\n\r\n;; Inicializa la app\r\n(defn init []\r\n  (dom/render [page] (.getElementById js/document \"app\")))\r\n(init)\r\n"]}