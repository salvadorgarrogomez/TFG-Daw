{
"version":3,
"file":"module$node_modules$scheduler$cjs$scheduler_development.js",
"lineCount":279,
"mappings":"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",
"sources":["node_modules/scheduler/cjs/scheduler.development.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$scheduler$cjs$scheduler_development\"] = function(global,require,module,exports) {\n/** @license React v0.20.2\n * scheduler.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar enableSchedulerDebugging = false;\nvar enableProfiling = false;\n\nvar requestHostCallback;\nvar requestHostTimeout;\nvar cancelHostTimeout;\nvar requestPaint;\nvar hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\n\nif (hasPerformanceNow) {\n  var localPerformance = performance;\n\n  exports.unstable_now = function () {\n    return localPerformance.now();\n  };\n} else {\n  var localDate = Date;\n  var initialTime = localDate.now();\n\n  exports.unstable_now = function () {\n    return localDate.now() - initialTime;\n  };\n}\n\nif ( // If Scheduler runs in a non-DOM environment, it falls back to a naive\n// implementation using setTimeout.\ntypeof window === 'undefined' || // Check if MessageChannel is supported, too.\ntypeof MessageChannel !== 'function') {\n  // If this accidentally gets imported in a non-browser environment, e.g. JavaScriptCore,\n  // fallback to a naive implementation.\n  var _callback = null;\n  var _timeoutID = null;\n\n  var _flushCallback = function () {\n    if (_callback !== null) {\n      try {\n        var currentTime = exports.unstable_now();\n        var hasRemainingTime = true;\n\n        _callback(hasRemainingTime, currentTime);\n\n        _callback = null;\n      } catch (e) {\n        setTimeout(_flushCallback, 0);\n        throw e;\n      }\n    }\n  };\n\n  requestHostCallback = function (cb) {\n    if (_callback !== null) {\n      // Protect against re-entrancy.\n      setTimeout(requestHostCallback, 0, cb);\n    } else {\n      _callback = cb;\n      setTimeout(_flushCallback, 0);\n    }\n  };\n\n  requestHostTimeout = function (cb, ms) {\n    _timeoutID = setTimeout(cb, ms);\n  };\n\n  cancelHostTimeout = function () {\n    clearTimeout(_timeoutID);\n  };\n\n  exports.unstable_shouldYield = function () {\n    return false;\n  };\n\n  requestPaint = exports.unstable_forceFrameRate = function () {};\n} else {\n  // Capture local references to native APIs, in case a polyfill overrides them.\n  var _setTimeout = window.setTimeout;\n  var _clearTimeout = window.clearTimeout;\n\n  if (typeof console !== 'undefined') {\n    // TODO: Scheduler no longer requires these methods to be polyfilled. But\n    // maybe we want to continue warning if they don't exist, to preserve the\n    // option to rely on it in the future?\n    var requestAnimationFrame = window.requestAnimationFrame;\n    var cancelAnimationFrame = window.cancelAnimationFrame;\n\n    if (typeof requestAnimationFrame !== 'function') {\n      // Using console['error'] to evade Babel and ESLint\n      console['error'](\"This browser doesn't support requestAnimationFrame. \" + 'Make sure that you load a ' + 'polyfill in older browsers. https://reactjs.org/link/react-polyfills');\n    }\n\n    if (typeof cancelAnimationFrame !== 'function') {\n      // Using console['error'] to evade Babel and ESLint\n      console['error'](\"This browser doesn't support cancelAnimationFrame. \" + 'Make sure that you load a ' + 'polyfill in older browsers. https://reactjs.org/link/react-polyfills');\n    }\n  }\n\n  var isMessageLoopRunning = false;\n  var scheduledHostCallback = null;\n  var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main\n  // thread, like user events. By default, it yields multiple times per frame.\n  // It does not attempt to align with frame boundaries, since most tasks don't\n  // need to be frame aligned; for those that do, use requestAnimationFrame.\n\n  var yieldInterval = 5;\n  var deadline = 0; // TODO: Make this configurable\n\n  {\n    // `isInputPending` is not available. Since we have no way of knowing if\n    // there's pending input, always yield at the end of the frame.\n    exports.unstable_shouldYield = function () {\n      return exports.unstable_now() >= deadline;\n    }; // Since we yield every frame regardless, `requestPaint` has no effect.\n\n\n    requestPaint = function () {};\n  }\n\n  exports.unstable_forceFrameRate = function (fps) {\n    if (fps < 0 || fps > 125) {\n      // Using console['error'] to evade Babel and ESLint\n      console['error']('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing frame rates higher than 125 fps is not supported');\n      return;\n    }\n\n    if (fps > 0) {\n      yieldInterval = Math.floor(1000 / fps);\n    } else {\n      // reset the framerate\n      yieldInterval = 5;\n    }\n  };\n\n  var performWorkUntilDeadline = function () {\n    if (scheduledHostCallback !== null) {\n      var currentTime = exports.unstable_now(); // Yield after `yieldInterval` ms, regardless of where we are in the vsync\n      // cycle. This means there's always time remaining at the beginning of\n      // the message event.\n\n      deadline = currentTime + yieldInterval;\n      var hasTimeRemaining = true;\n\n      try {\n        var hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);\n\n        if (!hasMoreWork) {\n          isMessageLoopRunning = false;\n          scheduledHostCallback = null;\n        } else {\n          // If there's more work, schedule the next message event at the end\n          // of the preceding one.\n          port.postMessage(null);\n        }\n      } catch (error) {\n        // If a scheduler task throws, exit the current browser task so the\n        // error can be observed.\n        port.postMessage(null);\n        throw error;\n      }\n    } else {\n      isMessageLoopRunning = false;\n    } // Yielding to the browser will give it a chance to paint, so we can\n  };\n\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n\n  requestHostCallback = function (callback) {\n    scheduledHostCallback = callback;\n\n    if (!isMessageLoopRunning) {\n      isMessageLoopRunning = true;\n      port.postMessage(null);\n    }\n  };\n\n  requestHostTimeout = function (callback, ms) {\n    taskTimeoutID = _setTimeout(function () {\n      callback(exports.unstable_now());\n    }, ms);\n  };\n\n  cancelHostTimeout = function () {\n    _clearTimeout(taskTimeoutID);\n\n    taskTimeoutID = -1;\n  };\n}\n\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  siftUp(heap, node, index);\n}\nfunction peek(heap) {\n  var first = heap[0];\n  return first === undefined ? null : first;\n}\nfunction pop(heap) {\n  var first = heap[0];\n\n  if (first !== undefined) {\n    var last = heap.pop();\n\n    if (last !== first) {\n      heap[0] = last;\n      siftDown(heap, last, 0);\n    }\n\n    return first;\n  } else {\n    return null;\n  }\n}\n\nfunction siftUp(heap, node, i) {\n  var index = i;\n\n  while (true) {\n    var parentIndex = index - 1 >>> 1;\n    var parent = heap[parentIndex];\n\n    if (parent !== undefined && compare(parent, node) > 0) {\n      // The parent is larger. Swap positions.\n      heap[parentIndex] = node;\n      heap[index] = parent;\n      index = parentIndex;\n    } else {\n      // The parent is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction siftDown(heap, node, i) {\n  var index = i;\n  var length = heap.length;\n\n  while (index < length) {\n    var leftIndex = (index + 1) * 2 - 1;\n    var left = heap[leftIndex];\n    var rightIndex = leftIndex + 1;\n    var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.\n\n    if (left !== undefined && compare(left, node) < 0) {\n      if (right !== undefined && compare(right, left) < 0) {\n        heap[index] = right;\n        heap[rightIndex] = node;\n        index = rightIndex;\n      } else {\n        heap[index] = left;\n        heap[leftIndex] = node;\n        index = leftIndex;\n      }\n    } else if (right !== undefined && compare(right, node) < 0) {\n      heap[index] = right;\n      heap[rightIndex] = node;\n      index = rightIndex;\n    } else {\n      // Neither child is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction compare(a, b) {\n  // Compare sort index first, then task id.\n  var diff = a.sortIndex - b.sortIndex;\n  return diff !== 0 ? diff : a.id - b.id;\n}\n\n// TODO: Use symbols?\nvar ImmediatePriority = 1;\nvar UserBlockingPriority = 2;\nvar NormalPriority = 3;\nvar LowPriority = 4;\nvar IdlePriority = 5;\n\nfunction markTaskErrored(task, ms) {\n}\n\n/* eslint-disable no-var */\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\n\nvar maxSigned31BitInt = 1073741823; // Times out immediately\n\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out\n\nvar USER_BLOCKING_PRIORITY_TIMEOUT = 250;\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\nvar LOW_PRIORITY_TIMEOUT = 10000; // Never times out\n\nvar IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap\n\nvar taskQueue = [];\nvar timerQueue = []; // Incrementing id counter. Used to maintain insertion order.\n\nvar taskIdCounter = 1; // Pausing the scheduler is useful for debugging.\nvar currentTask = null;\nvar currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrancy.\n\nvar isPerformingWork = false;\nvar isHostCallbackScheduled = false;\nvar isHostTimeoutScheduled = false;\n\nfunction advanceTimers(currentTime) {\n  // Check for tasks that are no longer delayed and add them to the queue.\n  var timer = peek(timerQueue);\n\n  while (timer !== null) {\n    if (timer.callback === null) {\n      // Timer was cancelled.\n      pop(timerQueue);\n    } else if (timer.startTime <= currentTime) {\n      // Timer fired. Transfer to the task queue.\n      pop(timerQueue);\n      timer.sortIndex = timer.expirationTime;\n      push(taskQueue, timer);\n    } else {\n      // Remaining timers are pending.\n      return;\n    }\n\n    timer = peek(timerQueue);\n  }\n}\n\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = false;\n  advanceTimers(currentTime);\n\n  if (!isHostCallbackScheduled) {\n    if (peek(taskQueue) !== null) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    } else {\n      var firstTimer = peek(timerQueue);\n\n      if (firstTimer !== null) {\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n      }\n    }\n  }\n}\n\nfunction flushWork(hasTimeRemaining, initialTime) {\n\n\n  isHostCallbackScheduled = false;\n\n  if (isHostTimeoutScheduled) {\n    // We scheduled a timeout but it's no longer needed. Cancel it.\n    isHostTimeoutScheduled = false;\n    cancelHostTimeout();\n  }\n\n  isPerformingWork = true;\n  var previousPriorityLevel = currentPriorityLevel;\n\n  try {\n    if (enableProfiling) {\n      try {\n        return workLoop(hasTimeRemaining, initialTime);\n      } catch (error) {\n        if (currentTask !== null) {\n          var currentTime = exports.unstable_now();\n          markTaskErrored(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n\n        throw error;\n      }\n    } else {\n      // No catch in prod code path.\n      return workLoop(hasTimeRemaining, initialTime);\n    }\n  } finally {\n    currentTask = null;\n    currentPriorityLevel = previousPriorityLevel;\n    isPerformingWork = false;\n  }\n}\n\nfunction workLoop(hasTimeRemaining, initialTime) {\n  var currentTime = initialTime;\n  advanceTimers(currentTime);\n  currentTask = peek(taskQueue);\n\n  while (currentTask !== null && !(enableSchedulerDebugging )) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || exports.unstable_shouldYield())) {\n      // This currentTask hasn't expired, and we've reached the deadline.\n      break;\n    }\n\n    var callback = currentTask.callback;\n\n    if (typeof callback === 'function') {\n      currentTask.callback = null;\n      currentPriorityLevel = currentTask.priorityLevel;\n      var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n\n      var continuationCallback = callback(didUserCallbackTimeout);\n      currentTime = exports.unstable_now();\n\n      if (typeof continuationCallback === 'function') {\n        currentTask.callback = continuationCallback;\n      } else {\n\n        if (currentTask === peek(taskQueue)) {\n          pop(taskQueue);\n        }\n      }\n\n      advanceTimers(currentTime);\n    } else {\n      pop(taskQueue);\n    }\n\n    currentTask = peek(taskQueue);\n  } // Return whether there's additional work\n\n\n  if (currentTask !== null) {\n    return true;\n  } else {\n    var firstTimer = peek(timerQueue);\n\n    if (firstTimer !== null) {\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n\n    return false;\n  }\n}\n\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n    case LowPriority:\n    case IdlePriority:\n      break;\n\n    default:\n      priorityLevel = NormalPriority;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_next(eventHandler) {\n  var priorityLevel;\n\n  switch (currentPriorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel;\n      break;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_wrapCallback(callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    // This is a fork of runWithPriority, inlined for performance.\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n}\n\nfunction unstable_scheduleCallback(priorityLevel, callback, options) {\n  var currentTime = exports.unstable_now();\n  var startTime;\n\n  if (typeof options === 'object' && options !== null) {\n    var delay = options.delay;\n\n    if (typeof delay === 'number' && delay > 0) {\n      startTime = currentTime + delay;\n    } else {\n      startTime = currentTime;\n    }\n  } else {\n    startTime = currentTime;\n  }\n\n  var timeout;\n\n  switch (priorityLevel) {\n    case ImmediatePriority:\n      timeout = IMMEDIATE_PRIORITY_TIMEOUT;\n      break;\n\n    case UserBlockingPriority:\n      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\n      break;\n\n    case IdlePriority:\n      timeout = IDLE_PRIORITY_TIMEOUT;\n      break;\n\n    case LowPriority:\n      timeout = LOW_PRIORITY_TIMEOUT;\n      break;\n\n    case NormalPriority:\n    default:\n      timeout = NORMAL_PRIORITY_TIMEOUT;\n      break;\n  }\n\n  var expirationTime = startTime + timeout;\n  var newTask = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: startTime,\n    expirationTime: expirationTime,\n    sortIndex: -1\n  };\n\n  if (startTime > currentTime) {\n    // This is a delayed task.\n    newTask.sortIndex = startTime;\n    push(timerQueue, newTask);\n\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n      // All tasks are delayed, and this is the task with the earliest delay.\n      if (isHostTimeoutScheduled) {\n        // Cancel an existing timeout.\n        cancelHostTimeout();\n      } else {\n        isHostTimeoutScheduled = true;\n      } // Schedule a timeout.\n\n\n      requestHostTimeout(handleTimeout, startTime - currentTime);\n    }\n  } else {\n    newTask.sortIndex = expirationTime;\n    push(taskQueue, newTask);\n    // wait until the next time we yield.\n\n\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    }\n  }\n\n  return newTask;\n}\n\nfunction unstable_pauseExecution() {\n}\n\nfunction unstable_continueExecution() {\n\n  if (!isHostCallbackScheduled && !isPerformingWork) {\n    isHostCallbackScheduled = true;\n    requestHostCallback(flushWork);\n  }\n}\n\nfunction unstable_getFirstCallbackNode() {\n  return peek(taskQueue);\n}\n\nfunction unstable_cancelCallback(task) {\n  // remove from the queue because you can't remove arbitrary nodes from an\n  // array based heap, only the first one.)\n\n\n  task.callback = null;\n}\n\nfunction unstable_getCurrentPriorityLevel() {\n  return currentPriorityLevel;\n}\n\nvar unstable_requestPaint = requestPaint;\nvar unstable_Profiling =  null;\n\nexports.unstable_IdlePriority = IdlePriority;\nexports.unstable_ImmediatePriority = ImmediatePriority;\nexports.unstable_LowPriority = LowPriority;\nexports.unstable_NormalPriority = NormalPriority;\nexports.unstable_Profiling = unstable_Profiling;\nexports.unstable_UserBlockingPriority = UserBlockingPriority;\nexports.unstable_cancelCallback = unstable_cancelCallback;\nexports.unstable_continueExecution = unstable_continueExecution;\nexports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;\nexports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;\nexports.unstable_next = unstable_next;\nexports.unstable_pauseExecution = unstable_pauseExecution;\nexports.unstable_requestPaint = unstable_requestPaint;\nexports.unstable_runWithPriority = unstable_runWithPriority;\nexports.unstable_scheduleCallback = unstable_scheduleCallback;\nexports.unstable_wrapCallback = unstable_wrapCallback;\n  })();\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","push","heap","node","index","length","parentIndex","parent","undefined","compare","peek","first","pop","last","i","leftIndex","left","rightIndex","right","a","b","diff","sortIndex","id","advanceTimers","currentTime","timer","timerQueue","callback","startTime","expirationTime","taskQueue","handleTimeout","isHostTimeoutScheduled","isHostCallbackScheduled","requestHostCallback","flushWork","firstTimer","requestHostTimeout","hasTimeRemaining","initialTime","cancelHostTimeout","isPerformingWork","previousPriorityLevel","currentPriorityLevel","currentTask","unstable_shouldYield","priorityLevel","continuationCallback","unstable_now","performance","now","localPerformance","exports.unstable_now","localDate","Date","window","MessageChannel","_callback","_timeoutID","_flushCallback","hasRemainingTime","e","setTimeout","cb","ms","clearTimeout","exports.unstable_shouldYield","requestPaint","unstable_forceFrameRate","exports.unstable_forceFrameRate","_setTimeout","_clearTimeout","console","cancelAnimationFrame","requestAnimationFrame","isMessageLoopRunning","scheduledHostCallback","taskTimeoutID","yieldInterval","deadline","fps","Math","floor","channel","port","port2","port1","onmessage","performWorkUntilDeadline","hasMoreWork","postMessage","error","taskIdCounter","NormalPriority","unstable_IdlePriority","IdlePriority","unstable_ImmediatePriority","ImmediatePriority","unstable_LowPriority","LowPriority","unstable_NormalPriority","unstable_Profiling","unstable_UserBlockingPriority","UserBlockingPriority","unstable_cancelCallback","task","unstable_continueExecution","unstable_getCurrentPriorityLevel","unstable_getFirstCallbackNode","unstable_next","eventHandler","unstable_pauseExecution","unstable_requestPaint","unstable_runWithPriority","unstable_scheduleCallback","options","delay","timeout","IMMEDIATE_PRIORITY_TIMEOUT","USER_BLOCKING_PRIORITY_TIMEOUT","maxSigned31BitInt","LOW_PRIORITY_TIMEOUT","NORMAL_PRIORITY_TIMEOUT","newTask","unstable_wrapCallback","parentPriorityLevel","apply","arguments"]
}
