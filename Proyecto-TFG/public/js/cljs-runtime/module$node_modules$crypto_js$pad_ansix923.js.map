{
"version":3,
"file":"module$node_modules$crypto_js$pad_ansix923.js",
"lineCount":19,
"mappings":"AAAAA,cAAA,CAAA,0CAAA,GAA+D,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AACrG,WAAS,CAACC,IAAD,EAAOC,OAAP,EAAgBC,KAAhB,CAAuB;AACV,YAAvB,KAAI,MAAOH,QAAX,GAECD,MAAOC,CAAAA,OAFR,GAEkBA,OAFlB,GAE4BE,OAAA,CAAQJ,OAAA,CAAQ,oCAAR,CAAR,EAA2BA,OAAA,CAAQ,2CAAR,CAA3B,CAF5B,GAI2B,UAAtB,KAAI,MAAOM,OAAX,IAAoCA,MAAOC,CAAAA,GAA3C,GAEJD,MAAA,CAAO,CAAC,QAAD,EAAW,eAAX,CAAP,EAAoCF,OAApC,CAFI,GAMJA,OAAA,CAAQD,IAAKK,CAAAA,QAAb,CAVD;AADiC,GAAhC,CAAA,CAaA,IAbA,EAaM,QAAS,CAACA,QAAD,CAAW;AAK3BA,YAASC,CAAAA,GAAIC,CAAAA,QAAb,GAAwB,CACpBD,IAAKA,QAAS,CAACE,IAAD,EAAOC,SAAP,CAAkB;AAE5B,UAAIC,eAAeF,IAAKG,CAAAA,QAAxB;AACqBF,eAAjBG,IAA6B,CAA7BA;AAGgBA,eAAhBC,IAAiCH,YAAjCG,GAAgDD,SAAhDC;AAGAC,kBAAAA,GAAcJ,YAAdI,GAA6BD,SAA7BC,GAA6C,CAA7CA;AAGJN,UAAKO,CAAAA,KAAL,EAAA;AACAP,UAAKQ,CAAAA,KAAL,CAAWF,YAAX,KAA2B,CAA3B,CAAA,IAAiCD,SAAjC,IAAmD,EAAnD,GAAyDC,YAAzD,GAAuE,CAAvE,GAA4E,CAA5E;AACAN,UAAKG,CAAAA,QAAL,IAAiBE,SAAjB;AAd4B,KADZ,EAkBpBI,MAAOA,QAAS,CAACT,IAAD,CAAO;AAKnBA,UAAKG,CAAAA,QAAL,IAHoBH,IAAKQ,CAAAA,KAAL,CAAYR,IAAKG,CAAAA,QAAjB,GAA4B,CAA5B,KAAmC,CAAnC,CAGpB,GAH4D,GAG5D;AALmB,KAlBH,CAAxB;AA4BA,WAAON,QAASC,CAAAA,GAAIY,CAAAA,QAApB;AAjC2B,GAb1B,CAAD;AADsG,CAAvG;;",
"sources":["node_modules/crypto-js/pad-ansix923.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$crypto_js$pad_ansix923\"] = function(global,require,module,exports) {\n;(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ANSI X.923 padding strategy.\n\t */\n\tCryptoJS.pad.AnsiX923 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcuts\n\t        var dataSigBytes = data.sigBytes;\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\n\t        // Compute last byte position\n\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n\t        data.sigBytes += nPaddingBytes;\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Ansix923;\n\n}));\n};"],
"names":["shadow$provide","global","require","module","exports","root","factory","undef","define","amd","CryptoJS","pad","AnsiX923","data","blockSize","dataSigBytes","sigBytes","blockSizeBytes","nPaddingBytes","lastBytePos","clamp","words","unpad","Ansix923"]
}
