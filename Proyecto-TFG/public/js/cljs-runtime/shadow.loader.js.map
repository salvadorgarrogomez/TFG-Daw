{
"version":3,
"file":"shadow.loader.js",
"lineCount":122,
"mappings":"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",
"sources":["shadow/loader.js"],
"sourcesContent":["goog.module(\"shadow.loader\");\ngoog.module.declareLegacyNamespace();\n\nconst GMM = goog.require(\"goog.module.ModuleManager\");\nconst GML = goog.require(\"goog.module.ModuleLoader\");\n\nconst GO = goog.require(\"goog.object\");\nconst GHUC = goog.require(\"goog.html.uncheckedconversions\");\nconst GSC = goog.require(\"goog.string.Const\");\n\n/** @define {boolean} */\nconst TEST = goog.define(\"shadow.loader.TEST\", false);\n\n// this is written in JS so it doesn't depend on cljs.core\n\nconst ml = new GML();\nml.setSourceUrlInjection(true);\n\nconst mm = GMM.getInstance();\nmm.setLoader(ml);\n\nlet initCalled = false;\n\nfunction ensureInitWasCalled () {\n  if (!initCalled) {\n    throw new Error(\n      \"shadow.loader API was called before shadow.loader.init!\\n\" +\n        \"You are probably calling module loader too early before shadow-cljs got fully initialized.\"\n    );\n  }\n};\n\nfunction init (uriPrefix) {\n  if (TEST) return;\n\n  if (initCalled) {\n    throw new Error(\n      \"shadow.loader.init was already called! If you are calling it manually set :module-loader-init false in your config.\"\n    );\n  }\n\n  if (goog.global.shadow$modules) {\n    mm.setAllModuleInfo(goog.global.shadow$modules[\"infos\"]);\n\n    var uris = goog.global.shadow$modules[\"uris\"];\n\n    // this is absurd. the uris are generated by the compiler. should be trusted already.\n    // I would really like to know how Google integrates this data into their builds\n    var trustReason = GSC.from(\"generated by compiler\");\n\n    GO.getKeys(uris).forEach(function (key) {\n      var module_uris = uris[key];\n      if (module_uris.length == 0) {\n        // default module is added without uris since it will always be loaded\n        // when this is called\n        mm.getModuleInfo(key).setLoaded();\n      } else {\n        var trusted_uris = [];\n        module_uris.forEach(function (module_uri) {\n          var trusted =\n            GHUC.trustedResourceUrlFromStringKnownToSatisfyTypeContract(\n              trustReason,\n              uriPrefix + module_uri\n            );\n          trusted_uris.push(trusted);\n        });\n        mm.getModuleInfo(key).setTrustedUris(trusted_uris);\n      }\n    });\n\n    initCalled = true;\n  }\n};\n\nfunction getModuleManager() {\n  return mm;\n};\n\nfunction getModuleLoader() {\n  return ml;\n};\n\n// allow calling (shadow.loader/load :with-a-keyword)\nfunction string_id(id) {\n  var result = id.toString();\n  if (result.charAt(0) == \":\") {\n    result = result.substring(1);\n  }\n  return result;\n};\n\nfunction set_load_start(id) {\n  mm.beforeLoadModuleCode(id);\n};\n\n// FIXME: id no longer required, just keeping it in case someone ends up using old closure lib\nfunction set_loaded (id) {\n  mm.setLoaded(id);\n};\n\n// ignored. only for cljs.loader compat\nfunction set_loaded_BANG_ () {};\n\nfunction loaded_QMARK_(id) {\n  if (TEST) {\n    return true;\n  }\n\n  return mm.getModuleInfo(string_id(id)).isLoaded();\n};\n\nfunction with_module(\n  moduleId,\n  fn,\n  opt_handler,\n  opt_noLoad,\n  opt_userInitiated,\n  opt_preferSynchronous\n) {\n  ensureInitWasCalled();\n  return mm.execOnLoad(\n    string_id(moduleId),\n    fn,\n    opt_handler,\n    opt_noLoad,\n    opt_userInitiated,\n    opt_preferSynchronous\n  );\n};\n\nfunction load (id, cb) {\n  if (TEST) {\n    var result = goog.async.Deferred.succeed();\n    if (cb) {\n      result = result.then(cb);\n    }\n    return result;\n  }\n\n  ensureInitWasCalled();\n  id = string_id(id);\n  if (cb) {\n    mm.execOnLoad(id, cb);\n  }\n  return mm.load(id);\n};\n\nfunction load_multiple(ids, opt_userInitiated) {\n  if (TEST) {\n    var result = {};\n    for (const id of ids) {\n      result[id] = goog.async.Deferred.succeed();\n    }\n    return result;\n  }\n  ensureInitWasCalled();\n  return mm.loadMultiple(ids, opt_userInitiated);\n};\n\nfunction prefetch (id) {\n  if (TEST) return;\n\n  ensureInitWasCalled();\n  mm.prefetchModule(string_id(id));\n};\n\nfunction preload (id) {\n  if (TEST) return;\n\n  ensureInitWasCalled();\n  return mm.preloadModule(string_id(id));\n};\n\nexports = {\n    preload,\n    prefetch,\n    load_multiple,\n    load,\n    with_module,\n    loaded_QMARK_,\n    set_loaded_BANG_,\n    set_loaded,\n    set_load_start,\n    getModuleLoader,\n    getModuleManager,\n    init\n};"],
"names":["ensureInitWasCalled","initCalled","Error","init","uriPrefix","TEST","goog","global","shadow$modules","mm","setAllModuleInfo","uris","trustReason","GSC","from","GO","getKeys","forEach","key","module_uris","length","getModuleInfo","setLoaded","trusted_uris","module_uri","trusted","GHUC","trustedResourceUrlFromStringKnownToSatisfyTypeContract","push","setTrustedUris","getModuleManager","getModuleLoader","ml","string_id","id","result","toString","charAt","substring","set_load_start","beforeLoadModuleCode","set_loaded","set_loaded_BANG_","loaded_QMARK_","isLoaded","with_module","moduleId","fn","opt_handler","opt_noLoad","opt_userInitiated","opt_preferSynchronous","execOnLoad","load","cb","async","Deferred","succeed","then","load_multiple","ids","loadMultiple","prefetch","prefetchModule","preload","preloadModule","module","declareLegacyNamespace","GMM","require","GML","define","setSourceUrlInjection","getInstance","setLoader","exports"]
}
