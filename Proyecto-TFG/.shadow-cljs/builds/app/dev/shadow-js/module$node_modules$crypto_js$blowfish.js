["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/crypto-js/blowfish.js"],"~:js","shadow$provide.module$node_modules$crypto_js$blowfish = function(global, require, module, exports) {\n  (function(root, factory, undef) {\n    \"object\" === typeof exports ? module.exports = exports = factory(require(\"module$node_modules$crypto_js$core\"), require(\"module$node_modules$crypto_js$enc_base64\"), require(\"module$node_modules$crypto_js$md5\"), require(\"module$node_modules$crypto_js$evpkdf\"), require(\"module$node_modules$crypto_js$cipher_core\")) : \"function\" === typeof define && define.amd ? define([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory) : factory(root.CryptoJS);\n  })(this, function(CryptoJS) {\n    (function() {\n      function F(ctx, x) {\n        let y = ctx.sbox[0][x >> 24 & 255] + ctx.sbox[1][x >> 16 & 255];\n        y ^= ctx.sbox[2][x >> 8 & 255];\n        return y += ctx.sbox[3][x & 255];\n      }\n      function BlowFish_Encrypt(ctx, left, right) {\n        let temp;\n        for (let i = 0; 16 > i; ++i) {\n          left ^= ctx.pbox[i], right ^= F(ctx, left), temp = left, left = right, right = temp;\n        }\n        temp = left;\n        left = right;\n        right = temp ^ ctx.pbox[16];\n        left ^= ctx.pbox[17];\n        return {left, right};\n      }\n      var BlockCipher = CryptoJS.lib.BlockCipher;\n      const ORIG_P = [608135816, 2242054355, 320440878, 57701188, 2752067618, 698298832, 137296536, 3964562569, 1160258022, 953160567, 3193202383, 887688300, 3232508343, 3380367581, 1065670069, 3041331479, 2450970073, 2306472731], ORIG_S = [[3509652390, 2564797868, 805139163, 3491422135, 3101798381, 1780907670, 3128725573, 4046225305, 614570311, 3012652279, 134345442, 2240740374, 1667834072, 1901547113, 2757295779, 4103290238, 227898511, 1921955416, 1904987480, 2182433518, 2069144605, 3260701109, \n      2620446009, 720527379, 3318853667, 677414384, 3393288472, 3101374703, 2390351024, 1614419982, 1822297739, 2954791486, 3608508353, 3174124327, 2024746970, 1432378464, 3864339955, 2857741204, 1464375394, 1676153920, 1439316330, 715854006, 3033291828, 289532110, 2706671279, 2087905683, 3018724369, 1668267050, 732546397, 1947742710, 3462151702, 2609353502, 2950085171, 1814351708, 2050118529, 680887927, 999245976, 1800124847, 3300911131, 1713906067, 1641548236, 4213287313, 1216130144, 1575780402, \n      4018429277, 3917837745, 3693486850, 3949271944, 596196993, 3549867205, 258830323, 2213823033, 772490370, 2760122372, 1774776394, 2652871518, 566650946, 4142492826, 1728879713, 2882767088, 1783734482, 3629395816, 2517608232, 2874225571, 1861159788, 326777828, 3124490320, 2130389656, 2716951837, 967770486, 1724537150, 2185432712, 2364442137, 1164943284, 2105845187, 998989502, 3765401048, 2244026483, 1075463327, 1455516326, 1322494562, 910128902, 469688178, 1117454909, 936433444, 3490320968, 3675253459, \n      1240580251, 122909385, 2157517691, 634681816, 4142456567, 3825094682, 3061402683, 2540495037, 79693498, 3249098678, 1084186820, 1583128258, 426386531, 1761308591, 1047286709, 322548459, 995290223, 1845252383, 2603652396, 3431023940, 2942221577, 3202600964, 3727903485, 1712269319, 422464435, 3234572375, 1170764815, 3523960633, 3117677531, 1434042557, 442511882, 3600875718, 1076654713, 1738483198, 4213154764, 2393238008, 3677496056, 1014306527, 4251020053, 793779912, 2902807211, 842905082, 4246964064, \n      1395751752, 1040244610, 2656851899, 3396308128, 445077038, 3742853595, 3577915638, 679411651, 2892444358, 2354009459, 1767581616, 3150600392, 3791627101, 3102740896, 284835224, 4246832056, 1258075500, 768725851, 2589189241, 3069724005, 3532540348, 1274779536, 3789419226, 2764799539, 1660621633, 3471099624, 4011903706, 913787905, 3497959166, 737222580, 2514213453, 2928710040, 3937242737, 1804850592, 3499020752, 2949064160, 2386320175, 2390070455, 2415321851, 4061277028, 2290661394, 2416832540, \n      1336762016, 1754252060, 3520065937, 3014181293, 791618072, 3188594551, 3933548030, 2332172193, 3852520463, 3043980520, 413987798, 3465142937, 3030929376, 4245938359, 2093235073, 3534596313, 375366246, 2157278981, 2479649556, 555357303, 3870105701, 2008414854, 3344188149, 4221384143, 3956125452, 2067696032, 3594591187, 2921233993, 2428461, 544322398, 577241275, 1471733935, 610547355, 4027169054, 1432588573, 1507829418, 2025931657, 3646575487, 545086370, 48609733, 2200306550, 1653985193, 298326376, \n      1316178497, 3007786442, 2064951626, 458293330, 2589141269, 3591329599, 3164325604, 727753846, 2179363840, 146436021, 1461446943, 4069977195, 705550613, 3059967265, 3887724982, 4281599278, 3313849956, 1404054877, 2845806497, 146425753, 1854211946], [1266315497, 3048417604, 3681880366, 3289982499, 290971E4, 1235738493, 2632868024, 2414719590, 3970600049, 1771706367, 1449415276, 3266420449, 422970021, 1963543593, 2690192192, 3826793022, 1062508698, 1531092325, 1804592342, 2583117782, 2714934279, \n      4024971509, 1294809318, 4028980673, 1289560198, 2221992742, 1669523910, 35572830, 157838143, 1052438473, 1016535060, 1802137761, 1753167236, 1386275462, 3080475397, 2857371447, 1040679964, 2145300060, 2390574316, 1461121720, 2956646967, 4031777805, 4028374788, 33600511, 2920084762, 1018524850, 629373528, 3691585981, 3515945977, 2091462646, 2486323059, 586499841, 988145025, 935516892, 3367335476, 2599673255, 2839830854, 265290510, 3972581182, 2759138881, 3795373465, 1005194799, 847297441, 406762289, \n      1314163512, 1332590856, 1866599683, 4127851711, 750260880, 613907577, 1450815602, 3165620655, 3734664991, 3650291728, 3012275730, 3704569646, 1427272223, 778793252, 1343938022, 2676280711, 2052605720, 1946737175, 3164576444, 3914038668, 3967478842, 3682934266, 1661551462, 3294938066, 4011595847, 840292616, 3712170807, 616741398, 312560963, 711312465, 1351876610, 322626781, 1910503582, 271666773, 2175563734, 1594956187, 70604529, 3617834859, 1007753275, 1495573769, 4069517037, 2549218298, 2663038764, \n      504708206, 2263041392, 3941167025, 2249088522, 1514023603, 1998579484, 1312622330, 694541497, 2582060303, 2151582166, 1382467621, 776784248, 2618340202, 3323268794, 2497899128, 2784771155, 503983604, 4076293799, 907881277, 423175695, 432175456, 1378068232, 4145222326, 3954048622, 3938656102, 3820766613, 2793130115, 2977904593, 26017576, 3274890735, 3194772133, 1700274565, 1756076034, 4006520079, 3677328699, 720338349, 1533947780, 354530856, 688349552, 3973924725, 1637815568, 332179504, 3949051286, \n      53804574, 2852348879, 3044236432, 1282449977, 3583942155, 3416972820, 4006381244, 1617046695, 2628476075, 3002303598, 1686838959, 431878346, 2686675385, 1700445008, 1080580658, 1009431731, 832498133, 3223435511, 2605976345, 2271191193, 2516031870, 1648197032, 4164389018, 2548247927, 300782431, 375919233, 238389289, 3353747414, 2531188641, 2019080857, 1475708069, 455242339, 2609103871, 448939670, 3451063019, 1395535956, 2413381860, 1841049896, 1491858159, 885456874, 4264095073, 4001119347, 1565136089, \n      3898914787, 1108368660, 540939232, 1173283510, 2745871338, 3681308437, 4207628240, 3343053890, 4016749493, 1699691293, 1103962373, 3625875870, 2256883143, 3830138730, 1031889488, 3479347698, 1535977030, 4236805024, 3251091107, 2132092099, 1774941330, 1199868427, 1452454533, 157007616, 2904115357, 342012276, 595725824, 1480756522, 206960106, 497939518, 591360097, 863170706, 2375253569, 3596610801, 1814182875, 2094937945, 3421402208, 1082520231, 3463918190, 2785509508, 435703966, 3908032597, \n      1641649973, 2842273706, 3305899714, 1510255612, 2148256476, 2655287854, 3276092548, 4258621189, 236887753, 3681803219, 274041037, 1734335097, 3815195456, 3317970021, 1899903192, 1026095262, 4050517792, 356393447, 2410691914, 3873677099, 3682840055], [3913112168, 2491498743, 4132185628, 2489919796, 1091903735, 1979897079, 3170134830, 3567386728, 3557303409, 857797738, 1136121015, 1342202287, 507115054, 2535736646, 337727348, 3213592640, 1301675037, 2528481711, 1895095763, 1721773893, 3216771564, \n      62756741, 2142006736, 835421444, 2531993523, 1442658625, 3659876326, 2882144922, 676362277, 1392781812, 170690266, 3921047035, 1759253602, 3611846912, 1745797284, 664899054, 1329594018, 3901205900, 3045908486, 2062866102, 2865634940, 3543621612, 3464012697, 1080764994, 553557557, 3656615353, 3996768171, 991055499, 499776247, 1265440854, 648242737, 3940784050, 980351604, 3713745714, 1749149687, 3396870395, 4211799374, 3640570775, 1161844396, 3125318951, 1431517754, 545492359, 4268468663, 3499529547, \n      1437099964, 2702547544, 3433638243, 2581715763, 2787789398, 1060185593, 1593081372, 2418618748, 4260947970, 69676912, 2159744348, 86519011, 2512459080, 3838209314, 1220612927, 3339683548, 133810670, 1090789135, 1078426020, 1569222167, 845107691, 3583754449, 4072456591, 1091646820, 628848692, 1613405280, 3757631651, 526609435, 236106946, 48312990, 2942717905, 3402727701, 1797494240, 859738849, 992217954, 4005476642, 2243076622, 3870952857, 3732016268, 765654824, 3490871365, 2511836413, 1685915746, \n      3888969200, 1414112111, 2273134842, 3281911079, 4080962846, 172450625, 2569994100, 980381355, 4109958455, 2819808352, 2716589560, 2568741196, 3681446669, 3329971472, 1835478071, 660984891, 3704678404, 4045999559, 3422617507, 3040415634, 1762651403, 1719377915, 3470491036, 2693910283, 3642056355, 3138596744, 1364962596, 2073328063, 1983633131, 926494387, 3423689081, 2150032023, 4096667949, 1749200295, 3328846651, 309677260, 2016342300, 1779581495, 3079819751, 111262694, 1274766160, 443224088, \n      298511866, 1025883608, 3806446537, 1145181785, 168956806, 3641502830, 3584813610, 1689216846, 3666258015, 3200248200, 1692713982, 2646376535, 4042768518, 1618508792, 1610833997, 3523052358, 4130873264, 2001055236, 3610705100, 2202168115, 4028541809, 2961195399, 1006657119, 2006996926, 3186142756, 1430667929, 3210227297, 1314452623, 4074634658, 4101304120, 2273951170, 1399257539, 3367210612, 3027628629, 1190975929, 2062231137, 2333990788, 2221543033, 2438960610, 1181637006, 548689776, 2362791313, \n      3372408396, 3104550113, 3145860560, 296247880, 1970579870, 3078560182, 3769228297, 1714227617, 3291629107, 3898220290, 166772364, 1251581989, 493813264, 448347421, 195405023, 2709975567, 677966185, 3703036547, 1463355134, 2715995803, 1338867538, 1343315457, 2802222074, 2684532164, 233230375, 2599980071, 2000651841, 3277868038, 1638401717, 4028070440, 3237316320, 6314154, 819756386, 300326615, 590932579, 1405279636, 3267499572, 3150704214, 2428286686, 3959192993, 3461946742, 1862657033, 1266418056, \n      963775037, 2089974820, 2263052895, 1917689273, 448879540, 3550394620, 3981727096, 150775221, 3627908307, 1303187396, 508620638, 2975983352, 2726630617, 1817252668, 1876281319, 1457606340, 908771278, 3720792119, 3617206836, 2455994898, 1729034894, 1080033504], [976866871, 3556439503, 2881648439, 1522871579, 1555064734, 1336096578, 3548522304, 2579274686, 3574697629, 3205460757, 3593280638, 3338716283, 3079412587, 564236357, 2993598910, 1781952180, 1464380207, 3163844217, 3332601554, 1699332808, \n      1393555694, 1183702653, 3581086237, 1288719814, 691649499, 2847557200, 2895455976, 3193889540, 2717570544, 1781354906, 1676643554, 2592534050, 3230253752, 1126444790, 2770207658, 2633158820, 2210423226, 2615765581, 2414155088, 3127139286, 673620729, 2805611233, 1269405062, 4015350505, 3341807571, 4149409754, 1057255273, 2012875353, 2162469141, 2276492801, 2601117357, 993977747, 3918593370, 2654263191, 753973209, 36408145, 2530585658, 25011837, 3520020182, 2088578344, 530523599, 2918365339, \n      1524020338, 1518925132, 3760827505, 3759777254, 1202760957, 3985898139, 3906192525, 674977740, 4174734889, 2031300136, 2019492241, 3983892565, 4153806404, 3822280332, 352677332, 2297720250, 60907813, 90501309, 3286998549, 1016092578, 2535922412, 2839152426, 457141659, 509813237, 4120667899, 652014361, 1966332200, 2975202805, 55981186, 2327461051, 676427537, 3255491064, 2882294119, 3433927263, 1307055953, 942726286, 933058658, 2468411793, 3933900994, 4215176142, 1361170020, 2001714738, 2830558078, \n      3274259782, 1222529897, 1679025792, 2729314320, 3714953764, 1770335741, 151462246, 3013232138, 1682292957, 1483529935, 471910574, 1539241949, 458788160, 3436315007, 1807016891, 3718408830, 978976581, 1043663428, 3165965781, 1927990952, 4200891579, 2372276910, 3208408903, 3533431907, 1412390302, 2931980059, 4132332400, 1947078029, 3881505623, 4168226417, 2941484381, 1077988104, 1320477388, 886195818, 18198404, 3786409E3, 2509781533, 112762804, 3463356488, 1866414978, 891333506, 18488651, 661792760, \n      1628790961, 3885187036, 3141171499, 876946877, 2693282273, 1372485963, 791857591, 2686433993, 3759982718, 3167212022, 3472953795, 2716379847, 445679433, 3561995674, 3504004811, 3574258232, 54117162, 3331405415, 2381918588, 3769707343, 4154350007, 1140177722, 4074052095, 668550556, 3214352940, 367459370, 261225585, 2610173221, 4209349473, 3468074219, 3265815641, 314222801, 3066103646, 3808782860, 282218597, 3406013506, 3773591054, 379116347, 1285071038, 846784868, 2669647154, 3771962079, 3550491691, \n      2305946142, 453669953, 1268987020, 3317592352, 3279303384, 3744833421, 2610507566, 3859509063, 266596637, 3847019092, 517658769, 3462560207, 3443424879, 370717030, 4247526661, 2224018117, 4143653529, 4112773975, 2788324899, 2477274417, 1456262402, 2901442914, 1517677493, 1846949527, 2295493580, 3734397586, 2176403920, 1280348187, 1908823572, 3871786941, 846861322, 1172426758, 3287448474, 3383383037, 1655181056, 3139813346, 901632758, 1897031941, 2986607138, 3066810236, 3447102507, 1393639104, \n      373351379, 950779232, 625454576, 3124240540, 4148612726, 2007998917, 544563296, 2244738638, 2330496472, 2058025392, 1291430526, 424198748, 50039436, 29584100, 3605783033, 2429876329, 2791104160, 1057563949, 3255363231, 3075367218, 3463963227, 1469046755, 985887462]];\n      var BLOWFISH_CTX = {pbox:[], sbox:[]}, Blowfish = CryptoJS.algo.Blowfish = BlockCipher.extend({_doReset:function() {\n        if (this._keyPriorReset !== this._key) {\n          var key = this._keyPriorReset = this._key, key$jscomp$0 = key.words;\n          key = key.sigBytes / 4;\n          for (var Row = 0; 4 > Row; Row++) {\n            BLOWFISH_CTX.sbox[Row] = [];\n            for (var Col = 0; 256 > Col; Col++) {\n              BLOWFISH_CTX.sbox[Row][Col] = ORIG_S[Row][Col];\n            }\n          }\n          Row = 0;\n          for (Col = 0; 18 > Col; Col++) {\n            BLOWFISH_CTX.pbox[Col] = ORIG_P[Col] ^ key$jscomp$0[Row], Row++, Row >= key && (Row = 0);\n          }\n          key = key$jscomp$0 = 0;\n          for (Row = 0; 18 > Row; Row += 2) {\n            key = BlowFish_Encrypt(BLOWFISH_CTX, key$jscomp$0, key), key$jscomp$0 = key.left, key = key.right, BLOWFISH_CTX.pbox[Row] = key$jscomp$0, BLOWFISH_CTX.pbox[Row + 1] = key;\n          }\n          for (Row = 0; 4 > Row; Row++) {\n            for (Col = 0; 256 > Col; Col += 2) {\n              key = BlowFish_Encrypt(BLOWFISH_CTX, key$jscomp$0, key), key$jscomp$0 = key.left, key = key.right, BLOWFISH_CTX.sbox[Row][Col] = key$jscomp$0, BLOWFISH_CTX.sbox[Row][Col + 1] = key;\n            }\n          }\n        }\n      }, encryptBlock:function(M, offset) {\n        var res = BlowFish_Encrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);\n        M[offset] = res.left;\n        M[offset + 1] = res.right;\n      }, decryptBlock:function(M, offset) {\n        let Xl = M[offset], Xr = M[offset + 1], temp;\n        for (let i = 17; 1 < i; --i) {\n          Xl ^= BLOWFISH_CTX.pbox[i], Xr ^= F(BLOWFISH_CTX, Xl), temp = Xl, Xl = Xr, Xr = temp;\n        }\n        temp = Xl;\n        Xl = Xr;\n        Xr = temp ^ BLOWFISH_CTX.pbox[1];\n        Xl ^= BLOWFISH_CTX.pbox[0];\n        M[offset] = Xl;\n        M[offset + 1] = Xr;\n      }, blockSize:2, keySize:4, ivSize:2});\n      CryptoJS.Blowfish = BlockCipher._createHelper(Blowfish);\n    })();\n    return CryptoJS.Blowfish;\n  });\n};\n","~:source","shadow$provide[\"module$node_modules$crypto_js$blowfish\"] = function(global,require,module,exports) {\n;(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    const N = 16;\n\n\t    //Origin pbox and sbox, derived from PI\n\t    const ORIG_P = [\n\t        0x243F6A88, 0x85A308D3, 0x13198A2E, 0x03707344,\n\t        0xA4093822, 0x299F31D0, 0x082EFA98, 0xEC4E6C89,\n\t        0x452821E6, 0x38D01377, 0xBE5466CF, 0x34E90C6C,\n\t        0xC0AC29B7, 0xC97C50DD, 0x3F84D5B5, 0xB5470917,\n\t        0x9216D5D9, 0x8979FB1B\n\t    ];\n\n\t    const ORIG_S = [\n\t        [   0xD1310BA6, 0x98DFB5AC, 0x2FFD72DB, 0xD01ADFB7,\n\t            0xB8E1AFED, 0x6A267E96, 0xBA7C9045, 0xF12C7F99,\n\t            0x24A19947, 0xB3916CF7, 0x0801F2E2, 0x858EFC16,\n\t            0x636920D8, 0x71574E69, 0xA458FEA3, 0xF4933D7E,\n\t            0x0D95748F, 0x728EB658, 0x718BCD58, 0x82154AEE,\n\t            0x7B54A41D, 0xC25A59B5, 0x9C30D539, 0x2AF26013,\n\t            0xC5D1B023, 0x286085F0, 0xCA417918, 0xB8DB38EF,\n\t            0x8E79DCB0, 0x603A180E, 0x6C9E0E8B, 0xB01E8A3E,\n\t            0xD71577C1, 0xBD314B27, 0x78AF2FDA, 0x55605C60,\n\t            0xE65525F3, 0xAA55AB94, 0x57489862, 0x63E81440,\n\t            0x55CA396A, 0x2AAB10B6, 0xB4CC5C34, 0x1141E8CE,\n\t            0xA15486AF, 0x7C72E993, 0xB3EE1411, 0x636FBC2A,\n\t            0x2BA9C55D, 0x741831F6, 0xCE5C3E16, 0x9B87931E,\n\t            0xAFD6BA33, 0x6C24CF5C, 0x7A325381, 0x28958677,\n\t            0x3B8F4898, 0x6B4BB9AF, 0xC4BFE81B, 0x66282193,\n\t            0x61D809CC, 0xFB21A991, 0x487CAC60, 0x5DEC8032,\n\t            0xEF845D5D, 0xE98575B1, 0xDC262302, 0xEB651B88,\n\t            0x23893E81, 0xD396ACC5, 0x0F6D6FF3, 0x83F44239,\n\t            0x2E0B4482, 0xA4842004, 0x69C8F04A, 0x9E1F9B5E,\n\t            0x21C66842, 0xF6E96C9A, 0x670C9C61, 0xABD388F0,\n\t            0x6A51A0D2, 0xD8542F68, 0x960FA728, 0xAB5133A3,\n\t            0x6EEF0B6C, 0x137A3BE4, 0xBA3BF050, 0x7EFB2A98,\n\t            0xA1F1651D, 0x39AF0176, 0x66CA593E, 0x82430E88,\n\t            0x8CEE8619, 0x456F9FB4, 0x7D84A5C3, 0x3B8B5EBE,\n\t            0xE06F75D8, 0x85C12073, 0x401A449F, 0x56C16AA6,\n\t            0x4ED3AA62, 0x363F7706, 0x1BFEDF72, 0x429B023D,\n\t            0x37D0D724, 0xD00A1248, 0xDB0FEAD3, 0x49F1C09B,\n\t            0x075372C9, 0x80991B7B, 0x25D479D8, 0xF6E8DEF7,\n\t            0xE3FE501A, 0xB6794C3B, 0x976CE0BD, 0x04C006BA,\n\t            0xC1A94FB6, 0x409F60C4, 0x5E5C9EC2, 0x196A2463,\n\t            0x68FB6FAF, 0x3E6C53B5, 0x1339B2EB, 0x3B52EC6F,\n\t            0x6DFC511F, 0x9B30952C, 0xCC814544, 0xAF5EBD09,\n\t            0xBEE3D004, 0xDE334AFD, 0x660F2807, 0x192E4BB3,\n\t            0xC0CBA857, 0x45C8740F, 0xD20B5F39, 0xB9D3FBDB,\n\t            0x5579C0BD, 0x1A60320A, 0xD6A100C6, 0x402C7279,\n\t            0x679F25FE, 0xFB1FA3CC, 0x8EA5E9F8, 0xDB3222F8,\n\t            0x3C7516DF, 0xFD616B15, 0x2F501EC8, 0xAD0552AB,\n\t            0x323DB5FA, 0xFD238760, 0x53317B48, 0x3E00DF82,\n\t            0x9E5C57BB, 0xCA6F8CA0, 0x1A87562E, 0xDF1769DB,\n\t            0xD542A8F6, 0x287EFFC3, 0xAC6732C6, 0x8C4F5573,\n\t            0x695B27B0, 0xBBCA58C8, 0xE1FFA35D, 0xB8F011A0,\n\t            0x10FA3D98, 0xFD2183B8, 0x4AFCB56C, 0x2DD1D35B,\n\t            0x9A53E479, 0xB6F84565, 0xD28E49BC, 0x4BFB9790,\n\t            0xE1DDF2DA, 0xA4CB7E33, 0x62FB1341, 0xCEE4C6E8,\n\t            0xEF20CADA, 0x36774C01, 0xD07E9EFE, 0x2BF11FB4,\n\t            0x95DBDA4D, 0xAE909198, 0xEAAD8E71, 0x6B93D5A0,\n\t            0xD08ED1D0, 0xAFC725E0, 0x8E3C5B2F, 0x8E7594B7,\n\t            0x8FF6E2FB, 0xF2122B64, 0x8888B812, 0x900DF01C,\n\t            0x4FAD5EA0, 0x688FC31C, 0xD1CFF191, 0xB3A8C1AD,\n\t            0x2F2F2218, 0xBE0E1777, 0xEA752DFE, 0x8B021FA1,\n\t            0xE5A0CC0F, 0xB56F74E8, 0x18ACF3D6, 0xCE89E299,\n\t            0xB4A84FE0, 0xFD13E0B7, 0x7CC43B81, 0xD2ADA8D9,\n\t            0x165FA266, 0x80957705, 0x93CC7314, 0x211A1477,\n\t            0xE6AD2065, 0x77B5FA86, 0xC75442F5, 0xFB9D35CF,\n\t            0xEBCDAF0C, 0x7B3E89A0, 0xD6411BD3, 0xAE1E7E49,\n\t            0x00250E2D, 0x2071B35E, 0x226800BB, 0x57B8E0AF,\n\t            0x2464369B, 0xF009B91E, 0x5563911D, 0x59DFA6AA,\n\t            0x78C14389, 0xD95A537F, 0x207D5BA2, 0x02E5B9C5,\n\t            0x83260376, 0x6295CFA9, 0x11C81968, 0x4E734A41,\n\t            0xB3472DCA, 0x7B14A94A, 0x1B510052, 0x9A532915,\n\t            0xD60F573F, 0xBC9BC6E4, 0x2B60A476, 0x81E67400,\n\t            0x08BA6FB5, 0x571BE91F, 0xF296EC6B, 0x2A0DD915,\n\t            0xB6636521, 0xE7B9F9B6, 0xFF34052E, 0xC5855664,\n\t            0x53B02D5D, 0xA99F8FA1, 0x08BA4799, 0x6E85076A   ],\n\t        [   0x4B7A70E9, 0xB5B32944, 0xDB75092E, 0xC4192623,\n\t            0xAD6EA6B0, 0x49A7DF7D, 0x9CEE60B8, 0x8FEDB266,\n\t            0xECAA8C71, 0x699A17FF, 0x5664526C, 0xC2B19EE1,\n\t            0x193602A5, 0x75094C29, 0xA0591340, 0xE4183A3E,\n\t            0x3F54989A, 0x5B429D65, 0x6B8FE4D6, 0x99F73FD6,\n\t            0xA1D29C07, 0xEFE830F5, 0x4D2D38E6, 0xF0255DC1,\n\t            0x4CDD2086, 0x8470EB26, 0x6382E9C6, 0x021ECC5E,\n\t            0x09686B3F, 0x3EBAEFC9, 0x3C971814, 0x6B6A70A1,\n\t            0x687F3584, 0x52A0E286, 0xB79C5305, 0xAA500737,\n\t            0x3E07841C, 0x7FDEAE5C, 0x8E7D44EC, 0x5716F2B8,\n\t            0xB03ADA37, 0xF0500C0D, 0xF01C1F04, 0x0200B3FF,\n\t            0xAE0CF51A, 0x3CB574B2, 0x25837A58, 0xDC0921BD,\n\t            0xD19113F9, 0x7CA92FF6, 0x94324773, 0x22F54701,\n\t            0x3AE5E581, 0x37C2DADC, 0xC8B57634, 0x9AF3DDA7,\n\t            0xA9446146, 0x0FD0030E, 0xECC8C73E, 0xA4751E41,\n\t            0xE238CD99, 0x3BEA0E2F, 0x3280BBA1, 0x183EB331,\n\t            0x4E548B38, 0x4F6DB908, 0x6F420D03, 0xF60A04BF,\n\t            0x2CB81290, 0x24977C79, 0x5679B072, 0xBCAF89AF,\n\t            0xDE9A771F, 0xD9930810, 0xB38BAE12, 0xDCCF3F2E,\n\t            0x5512721F, 0x2E6B7124, 0x501ADDE6, 0x9F84CD87,\n\t            0x7A584718, 0x7408DA17, 0xBC9F9ABC, 0xE94B7D8C,\n\t            0xEC7AEC3A, 0xDB851DFA, 0x63094366, 0xC464C3D2,\n\t            0xEF1C1847, 0x3215D908, 0xDD433B37, 0x24C2BA16,\n\t            0x12A14D43, 0x2A65C451, 0x50940002, 0x133AE4DD,\n\t            0x71DFF89E, 0x10314E55, 0x81AC77D6, 0x5F11199B,\n\t            0x043556F1, 0xD7A3C76B, 0x3C11183B, 0x5924A509,\n\t            0xF28FE6ED, 0x97F1FBFA, 0x9EBABF2C, 0x1E153C6E,\n\t            0x86E34570, 0xEAE96FB1, 0x860E5E0A, 0x5A3E2AB3,\n\t            0x771FE71C, 0x4E3D06FA, 0x2965DCB9, 0x99E71D0F,\n\t            0x803E89D6, 0x5266C825, 0x2E4CC978, 0x9C10B36A,\n\t            0xC6150EBA, 0x94E2EA78, 0xA5FC3C53, 0x1E0A2DF4,\n\t            0xF2F74EA7, 0x361D2B3D, 0x1939260F, 0x19C27960,\n\t            0x5223A708, 0xF71312B6, 0xEBADFE6E, 0xEAC31F66,\n\t            0xE3BC4595, 0xA67BC883, 0xB17F37D1, 0x018CFF28,\n\t            0xC332DDEF, 0xBE6C5AA5, 0x65582185, 0x68AB9802,\n\t            0xEECEA50F, 0xDB2F953B, 0x2AEF7DAD, 0x5B6E2F84,\n\t            0x1521B628, 0x29076170, 0xECDD4775, 0x619F1510,\n\t            0x13CCA830, 0xEB61BD96, 0x0334FE1E, 0xAA0363CF,\n\t            0xB5735C90, 0x4C70A239, 0xD59E9E0B, 0xCBAADE14,\n\t            0xEECC86BC, 0x60622CA7, 0x9CAB5CAB, 0xB2F3846E,\n\t            0x648B1EAF, 0x19BDF0CA, 0xA02369B9, 0x655ABB50,\n\t            0x40685A32, 0x3C2AB4B3, 0x319EE9D5, 0xC021B8F7,\n\t            0x9B540B19, 0x875FA099, 0x95F7997E, 0x623D7DA8,\n\t            0xF837889A, 0x97E32D77, 0x11ED935F, 0x16681281,\n\t            0x0E358829, 0xC7E61FD6, 0x96DEDFA1, 0x7858BA99,\n\t            0x57F584A5, 0x1B227263, 0x9B83C3FF, 0x1AC24696,\n\t            0xCDB30AEB, 0x532E3054, 0x8FD948E4, 0x6DBC3128,\n\t            0x58EBF2EF, 0x34C6FFEA, 0xFE28ED61, 0xEE7C3C73,\n\t            0x5D4A14D9, 0xE864B7E3, 0x42105D14, 0x203E13E0,\n\t            0x45EEE2B6, 0xA3AAABEA, 0xDB6C4F15, 0xFACB4FD0,\n\t            0xC742F442, 0xEF6ABBB5, 0x654F3B1D, 0x41CD2105,\n\t            0xD81E799E, 0x86854DC7, 0xE44B476A, 0x3D816250,\n\t            0xCF62A1F2, 0x5B8D2646, 0xFC8883A0, 0xC1C7B6A3,\n\t            0x7F1524C3, 0x69CB7492, 0x47848A0B, 0x5692B285,\n\t            0x095BBF00, 0xAD19489D, 0x1462B174, 0x23820E00,\n\t            0x58428D2A, 0x0C55F5EA, 0x1DADF43E, 0x233F7061,\n\t            0x3372F092, 0x8D937E41, 0xD65FECF1, 0x6C223BDB,\n\t            0x7CDE3759, 0xCBEE7460, 0x4085F2A7, 0xCE77326E,\n\t            0xA6078084, 0x19F8509E, 0xE8EFD855, 0x61D99735,\n\t            0xA969A7AA, 0xC50C06C2, 0x5A04ABFC, 0x800BCADC,\n\t            0x9E447A2E, 0xC3453484, 0xFDD56705, 0x0E1E9EC9,\n\t            0xDB73DBD3, 0x105588CD, 0x675FDA79, 0xE3674340,\n\t            0xC5C43465, 0x713E38D8, 0x3D28F89E, 0xF16DFF20,\n\t            0x153E21E7, 0x8FB03D4A, 0xE6E39F2B, 0xDB83ADF7   ],\n\t        [   0xE93D5A68, 0x948140F7, 0xF64C261C, 0x94692934,\n\t            0x411520F7, 0x7602D4F7, 0xBCF46B2E, 0xD4A20068,\n\t            0xD4082471, 0x3320F46A, 0x43B7D4B7, 0x500061AF,\n\t            0x1E39F62E, 0x97244546, 0x14214F74, 0xBF8B8840,\n\t            0x4D95FC1D, 0x96B591AF, 0x70F4DDD3, 0x66A02F45,\n\t            0xBFBC09EC, 0x03BD9785, 0x7FAC6DD0, 0x31CB8504,\n\t            0x96EB27B3, 0x55FD3941, 0xDA2547E6, 0xABCA0A9A,\n\t            0x28507825, 0x530429F4, 0x0A2C86DA, 0xE9B66DFB,\n\t            0x68DC1462, 0xD7486900, 0x680EC0A4, 0x27A18DEE,\n\t            0x4F3FFEA2, 0xE887AD8C, 0xB58CE006, 0x7AF4D6B6,\n\t            0xAACE1E7C, 0xD3375FEC, 0xCE78A399, 0x406B2A42,\n\t            0x20FE9E35, 0xD9F385B9, 0xEE39D7AB, 0x3B124E8B,\n\t            0x1DC9FAF7, 0x4B6D1856, 0x26A36631, 0xEAE397B2,\n\t            0x3A6EFA74, 0xDD5B4332, 0x6841E7F7, 0xCA7820FB,\n\t            0xFB0AF54E, 0xD8FEB397, 0x454056AC, 0xBA489527,\n\t            0x55533A3A, 0x20838D87, 0xFE6BA9B7, 0xD096954B,\n\t            0x55A867BC, 0xA1159A58, 0xCCA92963, 0x99E1DB33,\n\t            0xA62A4A56, 0x3F3125F9, 0x5EF47E1C, 0x9029317C,\n\t            0xFDF8E802, 0x04272F70, 0x80BB155C, 0x05282CE3,\n\t            0x95C11548, 0xE4C66D22, 0x48C1133F, 0xC70F86DC,\n\t            0x07F9C9EE, 0x41041F0F, 0x404779A4, 0x5D886E17,\n\t            0x325F51EB, 0xD59BC0D1, 0xF2BCC18F, 0x41113564,\n\t            0x257B7834, 0x602A9C60, 0xDFF8E8A3, 0x1F636C1B,\n\t            0x0E12B4C2, 0x02E1329E, 0xAF664FD1, 0xCAD18115,\n\t            0x6B2395E0, 0x333E92E1, 0x3B240B62, 0xEEBEB922,\n\t            0x85B2A20E, 0xE6BA0D99, 0xDE720C8C, 0x2DA2F728,\n\t            0xD0127845, 0x95B794FD, 0x647D0862, 0xE7CCF5F0,\n\t            0x5449A36F, 0x877D48FA, 0xC39DFD27, 0xF33E8D1E,\n\t            0x0A476341, 0x992EFF74, 0x3A6F6EAB, 0xF4F8FD37,\n\t            0xA812DC60, 0xA1EBDDF8, 0x991BE14C, 0xDB6E6B0D,\n\t            0xC67B5510, 0x6D672C37, 0x2765D43B, 0xDCD0E804,\n\t            0xF1290DC7, 0xCC00FFA3, 0xB5390F92, 0x690FED0B,\n\t            0x667B9FFB, 0xCEDB7D9C, 0xA091CF0B, 0xD9155EA3,\n\t            0xBB132F88, 0x515BAD24, 0x7B9479BF, 0x763BD6EB,\n\t            0x37392EB3, 0xCC115979, 0x8026E297, 0xF42E312D,\n\t            0x6842ADA7, 0xC66A2B3B, 0x12754CCC, 0x782EF11C,\n\t            0x6A124237, 0xB79251E7, 0x06A1BBE6, 0x4BFB6350,\n\t            0x1A6B1018, 0x11CAEDFA, 0x3D25BDD8, 0xE2E1C3C9,\n\t            0x44421659, 0x0A121386, 0xD90CEC6E, 0xD5ABEA2A,\n\t            0x64AF674E, 0xDA86A85F, 0xBEBFE988, 0x64E4C3FE,\n\t            0x9DBC8057, 0xF0F7C086, 0x60787BF8, 0x6003604D,\n\t            0xD1FD8346, 0xF6381FB0, 0x7745AE04, 0xD736FCCC,\n\t            0x83426B33, 0xF01EAB71, 0xB0804187, 0x3C005E5F,\n\t            0x77A057BE, 0xBDE8AE24, 0x55464299, 0xBF582E61,\n\t            0x4E58F48F, 0xF2DDFDA2, 0xF474EF38, 0x8789BDC2,\n\t            0x5366F9C3, 0xC8B38E74, 0xB475F255, 0x46FCD9B9,\n\t            0x7AEB2661, 0x8B1DDF84, 0x846A0E79, 0x915F95E2,\n\t            0x466E598E, 0x20B45770, 0x8CD55591, 0xC902DE4C,\n\t            0xB90BACE1, 0xBB8205D0, 0x11A86248, 0x7574A99E,\n\t            0xB77F19B6, 0xE0A9DC09, 0x662D09A1, 0xC4324633,\n\t            0xE85A1F02, 0x09F0BE8C, 0x4A99A025, 0x1D6EFE10,\n\t            0x1AB93D1D, 0x0BA5A4DF, 0xA186F20F, 0x2868F169,\n\t            0xDCB7DA83, 0x573906FE, 0xA1E2CE9B, 0x4FCD7F52,\n\t            0x50115E01, 0xA70683FA, 0xA002B5C4, 0x0DE6D027,\n\t            0x9AF88C27, 0x773F8641, 0xC3604C06, 0x61A806B5,\n\t            0xF0177A28, 0xC0F586E0, 0x006058AA, 0x30DC7D62,\n\t            0x11E69ED7, 0x2338EA63, 0x53C2DD94, 0xC2C21634,\n\t            0xBBCBEE56, 0x90BCB6DE, 0xEBFC7DA1, 0xCE591D76,\n\t            0x6F05E409, 0x4B7C0188, 0x39720A3D, 0x7C927C24,\n\t            0x86E3725F, 0x724D9DB9, 0x1AC15BB4, 0xD39EB8FC,\n\t            0xED545578, 0x08FCA5B5, 0xD83D7CD3, 0x4DAD0FC4,\n\t            0x1E50EF5E, 0xB161E6F8, 0xA28514D9, 0x6C51133C,\n\t            0x6FD5C7E7, 0x56E14EC4, 0x362ABFCE, 0xDDC6C837,\n\t            0xD79A3234, 0x92638212, 0x670EFA8E, 0x406000E0  ],\n\t        [   0x3A39CE37, 0xD3FAF5CF, 0xABC27737, 0x5AC52D1B,\n\t            0x5CB0679E, 0x4FA33742, 0xD3822740, 0x99BC9BBE,\n\t            0xD5118E9D, 0xBF0F7315, 0xD62D1C7E, 0xC700C47B,\n\t            0xB78C1B6B, 0x21A19045, 0xB26EB1BE, 0x6A366EB4,\n\t            0x5748AB2F, 0xBC946E79, 0xC6A376D2, 0x6549C2C8,\n\t            0x530FF8EE, 0x468DDE7D, 0xD5730A1D, 0x4CD04DC6,\n\t            0x2939BBDB, 0xA9BA4650, 0xAC9526E8, 0xBE5EE304,\n\t            0xA1FAD5F0, 0x6A2D519A, 0x63EF8CE2, 0x9A86EE22,\n\t            0xC089C2B8, 0x43242EF6, 0xA51E03AA, 0x9CF2D0A4,\n\t            0x83C061BA, 0x9BE96A4D, 0x8FE51550, 0xBA645BD6,\n\t            0x2826A2F9, 0xA73A3AE1, 0x4BA99586, 0xEF5562E9,\n\t            0xC72FEFD3, 0xF752F7DA, 0x3F046F69, 0x77FA0A59,\n\t            0x80E4A915, 0x87B08601, 0x9B09E6AD, 0x3B3EE593,\n\t            0xE990FD5A, 0x9E34D797, 0x2CF0B7D9, 0x022B8B51,\n\t            0x96D5AC3A, 0x017DA67D, 0xD1CF3ED6, 0x7C7D2D28,\n\t            0x1F9F25CF, 0xADF2B89B, 0x5AD6B472, 0x5A88F54C,\n\t            0xE029AC71, 0xE019A5E6, 0x47B0ACFD, 0xED93FA9B,\n\t            0xE8D3C48D, 0x283B57CC, 0xF8D56629, 0x79132E28,\n\t            0x785F0191, 0xED756055, 0xF7960E44, 0xE3D35E8C,\n\t            0x15056DD4, 0x88F46DBA, 0x03A16125, 0x0564F0BD,\n\t            0xC3EB9E15, 0x3C9057A2, 0x97271AEC, 0xA93A072A,\n\t            0x1B3F6D9B, 0x1E6321F5, 0xF59C66FB, 0x26DCF319,\n\t            0x7533D928, 0xB155FDF5, 0x03563482, 0x8ABA3CBB,\n\t            0x28517711, 0xC20AD9F8, 0xABCC5167, 0xCCAD925F,\n\t            0x4DE81751, 0x3830DC8E, 0x379D5862, 0x9320F991,\n\t            0xEA7A90C2, 0xFB3E7BCE, 0x5121CE64, 0x774FBE32,\n\t            0xA8B6E37E, 0xC3293D46, 0x48DE5369, 0x6413E680,\n\t            0xA2AE0810, 0xDD6DB224, 0x69852DFD, 0x09072166,\n\t            0xB39A460A, 0x6445C0DD, 0x586CDECF, 0x1C20C8AE,\n\t            0x5BBEF7DD, 0x1B588D40, 0xCCD2017F, 0x6BB4E3BB,\n\t            0xDDA26A7E, 0x3A59FF45, 0x3E350A44, 0xBCB4CDD5,\n\t            0x72EACEA8, 0xFA6484BB, 0x8D6612AE, 0xBF3C6F47,\n\t            0xD29BE463, 0x542F5D9E, 0xAEC2771B, 0xF64E6370,\n\t            0x740E0D8D, 0xE75B1357, 0xF8721671, 0xAF537D5D,\n\t            0x4040CB08, 0x4EB4E2CC, 0x34D2466A, 0x0115AF84,\n\t            0xE1B00428, 0x95983A1D, 0x06B89FB4, 0xCE6EA048,\n\t            0x6F3F3B82, 0x3520AB82, 0x011A1D4B, 0x277227F8,\n\t            0x611560B1, 0xE7933FDC, 0xBB3A792B, 0x344525BD,\n\t            0xA08839E1, 0x51CE794B, 0x2F32C9B7, 0xA01FBAC9,\n\t            0xE01CC87E, 0xBCC7D1F6, 0xCF0111C3, 0xA1E8AAC7,\n\t            0x1A908749, 0xD44FBD9A, 0xD0DADECB, 0xD50ADA38,\n\t            0x0339C32A, 0xC6913667, 0x8DF9317C, 0xE0B12B4F,\n\t            0xF79E59B7, 0x43F5BB3A, 0xF2D519FF, 0x27D9459C,\n\t            0xBF97222C, 0x15E6FC2A, 0x0F91FC71, 0x9B941525,\n\t            0xFAE59361, 0xCEB69CEB, 0xC2A86459, 0x12BAA8D1,\n\t            0xB6C1075E, 0xE3056A0C, 0x10D25065, 0xCB03A442,\n\t            0xE0EC6E0E, 0x1698DB3B, 0x4C98A0BE, 0x3278E964,\n\t            0x9F1F9532, 0xE0D392DF, 0xD3A0342B, 0x8971F21E,\n\t            0x1B0A7441, 0x4BA3348C, 0xC5BE7120, 0xC37632D8,\n\t            0xDF359F8D, 0x9B992F2E, 0xE60B6F47, 0x0FE3F11D,\n\t            0xE54CDA54, 0x1EDAD891, 0xCE6279CF, 0xCD3E7E6F,\n\t            0x1618B166, 0xFD2C1D05, 0x848FD2C5, 0xF6FB2299,\n\t            0xF523F357, 0xA6327623, 0x93A83531, 0x56CCCD02,\n\t            0xACF08162, 0x5A75EBB5, 0x6E163697, 0x88D273CC,\n\t            0xDE966292, 0x81B949D0, 0x4C50901B, 0x71C65614,\n\t            0xE6C6C7BD, 0x327A140A, 0x45E1D006, 0xC3F27B9A,\n\t            0xC9AA53FD, 0x62A80F00, 0xBB25BFE2, 0x35BDD2F6,\n\t            0x71126905, 0xB2040222, 0xB6CBCF7C, 0xCD769C2B,\n\t            0x53113EC0, 0x1640E3D3, 0x38ABBD60, 0x2547ADF0,\n\t            0xBA38209C, 0xF746CE76, 0x77AFA1C5, 0x20756060,\n\t            0x85CBFE4E, 0x8AE88DD8, 0x7AAAF9B0, 0x4CF9AA7E,\n\t            0x1948C25C, 0x02FB8A8C, 0x01C36AE4, 0xD6EBE1F9,\n\t            0x90D4F869, 0xA65CDEA0, 0x3F09252D, 0xC208E69F,\n\t            0xB74E6132, 0xCE77E25B, 0x578FDFE3, 0x3AC372E6  ]\n\t    ];\n\n\t    var BLOWFISH_CTX = {\n\t        pbox: [],\n\t        sbox: []\n\t    }\n\n\t    function F(ctx, x){\n\t        let a = (x >> 24) & 0xFF;\n\t        let b = (x >> 16) & 0xFF;\n\t        let c = (x >> 8) & 0xFF;\n\t        let d = x & 0xFF;\n\n\t        let y = ctx.sbox[0][a] + ctx.sbox[1][b];\n\t        y = y ^ ctx.sbox[2][c];\n\t        y = y + ctx.sbox[3][d];\n\n\t        return y;\n\t    }\n\n\t    function BlowFish_Encrypt(ctx, left, right){\n\t        let Xl = left;\n\t        let Xr = right;\n\t        let temp;\n\n\t        for(let i = 0; i < N; ++i){\n\t            Xl = Xl ^ ctx.pbox[i];\n\t            Xr = F(ctx, Xl) ^ Xr;\n\n\t            temp = Xl;\n\t            Xl = Xr;\n\t            Xr = temp;\n\t        }\n\n\t        temp = Xl;\n\t        Xl = Xr;\n\t        Xr = temp;\n\n\t        Xr = Xr ^ ctx.pbox[N];\n\t        Xl = Xl ^ ctx.pbox[N + 1];\n\n\t        return {left: Xl, right: Xr};\n\t    }\n\n\t    function BlowFish_Decrypt(ctx, left, right){\n\t        let Xl = left;\n\t        let Xr = right;\n\t        let temp;\n\n\t        for(let i = N + 1; i > 1; --i){\n\t            Xl = Xl ^ ctx.pbox[i];\n\t            Xr = F(ctx, Xl) ^ Xr;\n\n\t            temp = Xl;\n\t            Xl = Xr;\n\t            Xr = temp;\n\t        }\n\n\t        temp = Xl;\n\t        Xl = Xr;\n\t        Xr = temp;\n\n\t        Xr = Xr ^ ctx.pbox[1];\n\t        Xl = Xl ^ ctx.pbox[0];\n\n\t        return {left: Xl, right: Xr};\n\t    }\n\n\t    /**\n\t     * Initialization ctx's pbox and sbox.\n\t     *\n\t     * @param {Object} ctx The object has pbox and sbox.\n\t     * @param {Array} key An array of 32-bit words.\n\t     * @param {int} keysize The length of the key.\n\t     *\n\t     * @example\n\t     *\n\t     *     BlowFishInit(BLOWFISH_CTX, key, 128/32);\n\t     */\n\t    function BlowFishInit(ctx, key, keysize)\n\t    {\n\t        for(let Row = 0; Row < 4; Row++)\n\t        {\n\t            ctx.sbox[Row] = [];\n\t            for(let Col = 0; Col < 256; Col++)\n\t            {\n\t                ctx.sbox[Row][Col] = ORIG_S[Row][Col];\n\t            }\n\t        }\n\n\t        let keyIndex = 0;\n\t        for(let index = 0; index < N + 2; index++)\n\t        {\n\t            ctx.pbox[index] = ORIG_P[index] ^ key[keyIndex];\n\t            keyIndex++;\n\t            if(keyIndex >= keysize)\n\t            {\n\t                keyIndex = 0;\n\t            }\n\t        }\n\n\t        let Data1 = 0;\n\t        let Data2 = 0;\n\t        let res = 0;\n\t        for(let i = 0; i < N + 2; i += 2)\n\t        {\n\t            res = BlowFish_Encrypt(ctx, Data1, Data2);\n\t            Data1 = res.left;\n\t            Data2 = res.right;\n\t            ctx.pbox[i] = Data1;\n\t            ctx.pbox[i + 1] = Data2;\n\t        }\n\n\t        for(let i = 0; i < 4; i++)\n\t        {\n\t            for(let j = 0; j < 256; j += 2)\n\t            {\n\t                res = BlowFish_Encrypt(ctx, Data1, Data2);\n\t                Data1 = res.left;\n\t                Data2 = res.right;\n\t                ctx.sbox[i][j] = Data1;\n\t                ctx.sbox[i][j + 1] = Data2;\n\t            }\n\t        }\n\n\t        return true;\n\t    }\n\n\t    /**\n\t     * Blowfish block cipher algorithm.\n\t     */\n\t    var Blowfish = C_algo.Blowfish = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            //Initialization pbox and sbox\n\t            BlowFishInit(BLOWFISH_CTX, keyWords, keySize);\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            var res = BlowFish_Encrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);\n\t            M[offset] = res.left;\n\t            M[offset + 1] = res.right;\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            var res = BlowFish_Decrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);\n\t            M[offset] = res.left;\n\t            M[offset + 1] = res.right;\n\t        },\n\n\t        blockSize: 64/32,\n\n\t        keySize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Blowfish.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Blowfish.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Blowfish = BlockCipher._createHelper(Blowfish);\n\t}());\n\n\n\treturn CryptoJS.Blowfish;\n\n}));\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$crypto_js$core","~$shadow.js","~$module$node_modules$crypto_js$md5","~$module$node_modules$crypto_js$cipher_core","~$module$node_modules$crypto_js$evpkdf","~$module$node_modules$crypto_js$enc_base64"]],"~:properties",["^5",["keySize","right","Blowfish","decryptBlock","sbox","_keyPriorReset","ivSize","blockSize","encryptBlock","_doReset","pbox","left"]],"~:compiled-at",1745068084592,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$crypto_js$blowfish.js\",\n\"lineCount\":93,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/crypto-js/blowfish.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$crypto_js$blowfish\\\"] = function(global,require,module,exports) {\\n;(function (root, factory, undef) {\\n\\tif (typeof exports === \\\"object\\\") {\\n\\t\\t// CommonJS\\n\\t\\tmodule.exports = exports = factory(require(\\\"./core\\\"), require(\\\"./enc-base64\\\"), require(\\\"./md5\\\"), require(\\\"./evpkdf\\\"), require(\\\"./cipher-core\\\"));\\n\\t}\\n\\telse if (typeof define === \\\"function\\\" && define.amd) {\\n\\t\\t// AMD\\n\\t\\tdefine([\\\"./core\\\", \\\"./enc-base64\\\", \\\"./md5\\\", \\\"./evpkdf\\\", \\\"./cipher-core\\\"], factory);\\n\\t}\\n\\telse {\\n\\t\\t// Global (browser)\\n\\t\\tfactory(root.CryptoJS);\\n\\t}\\n}(this, function (CryptoJS) {\\n\\n\\t(function () {\\n\\t    // Shortcuts\\n\\t    var C = CryptoJS;\\n\\t    var C_lib = C.lib;\\n\\t    var BlockCipher = C_lib.BlockCipher;\\n\\t    var C_algo = C.algo;\\n\\n\\t    const N = 16;\\n\\n\\t    //Origin pbox and sbox, derived from PI\\n\\t    const ORIG_P = [\\n\\t        0x243F6A88, 0x85A308D3, 0x13198A2E, 0x03707344,\\n\\t        0xA4093822, 0x299F31D0, 0x082EFA98, 0xEC4E6C89,\\n\\t        0x452821E6, 0x38D01377, 0xBE5466CF, 0x34E90C6C,\\n\\t        0xC0AC29B7, 0xC97C50DD, 0x3F84D5B5, 0xB5470917,\\n\\t        0x9216D5D9, 0x8979FB1B\\n\\t    ];\\n\\n\\t    const ORIG_S = [\\n\\t        [   0xD1310BA6, 0x98DFB5AC, 0x2FFD72DB, 0xD01ADFB7,\\n\\t            0xB8E1AFED, 0x6A267E96, 0xBA7C9045, 0xF12C7F99,\\n\\t            0x24A19947, 0xB3916CF7, 0x0801F2E2, 0x858EFC16,\\n\\t            0x636920D8, 0x71574E69, 0xA458FEA3, 0xF4933D7E,\\n\\t            0x0D95748F, 0x728EB658, 0x718BCD58, 0x82154AEE,\\n\\t            0x7B54A41D, 0xC25A59B5, 0x9C30D539, 0x2AF26013,\\n\\t            0xC5D1B023, 0x286085F0, 0xCA417918, 0xB8DB38EF,\\n\\t            0x8E79DCB0, 0x603A180E, 0x6C9E0E8B, 0xB01E8A3E,\\n\\t            0xD71577C1, 0xBD314B27, 0x78AF2FDA, 0x55605C60,\\n\\t            0xE65525F3, 0xAA55AB94, 0x57489862, 0x63E81440,\\n\\t            0x55CA396A, 0x2AAB10B6, 0xB4CC5C34, 0x1141E8CE,\\n\\t            0xA15486AF, 0x7C72E993, 0xB3EE1411, 0x636FBC2A,\\n\\t            0x2BA9C55D, 0x741831F6, 0xCE5C3E16, 0x9B87931E,\\n\\t            0xAFD6BA33, 0x6C24CF5C, 0x7A325381, 0x28958677,\\n\\t            0x3B8F4898, 0x6B4BB9AF, 0xC4BFE81B, 0x66282193,\\n\\t            0x61D809CC, 0xFB21A991, 0x487CAC60, 0x5DEC8032,\\n\\t            0xEF845D5D, 0xE98575B1, 0xDC262302, 0xEB651B88,\\n\\t            0x23893E81, 0xD396ACC5, 0x0F6D6FF3, 0x83F44239,\\n\\t            0x2E0B4482, 0xA4842004, 0x69C8F04A, 0x9E1F9B5E,\\n\\t            0x21C66842, 0xF6E96C9A, 0x670C9C61, 0xABD388F0,\\n\\t            0x6A51A0D2, 0xD8542F68, 0x960FA728, 0xAB5133A3,\\n\\t            0x6EEF0B6C, 0x137A3BE4, 0xBA3BF050, 0x7EFB2A98,\\n\\t            0xA1F1651D, 0x39AF0176, 0x66CA593E, 0x82430E88,\\n\\t            0x8CEE8619, 0x456F9FB4, 0x7D84A5C3, 0x3B8B5EBE,\\n\\t            0xE06F75D8, 0x85C12073, 0x401A449F, 0x56C16AA6,\\n\\t            0x4ED3AA62, 0x363F7706, 0x1BFEDF72, 0x429B023D,\\n\\t            0x37D0D724, 0xD00A1248, 0xDB0FEAD3, 0x49F1C09B,\\n\\t            0x075372C9, 0x80991B7B, 0x25D479D8, 0xF6E8DEF7,\\n\\t            0xE3FE501A, 0xB6794C3B, 0x976CE0BD, 0x04C006BA,\\n\\t            0xC1A94FB6, 0x409F60C4, 0x5E5C9EC2, 0x196A2463,\\n\\t            0x68FB6FAF, 0x3E6C53B5, 0x1339B2EB, 0x3B52EC6F,\\n\\t            0x6DFC511F, 0x9B30952C, 0xCC814544, 0xAF5EBD09,\\n\\t            0xBEE3D004, 0xDE334AFD, 0x660F2807, 0x192E4BB3,\\n\\t            0xC0CBA857, 0x45C8740F, 0xD20B5F39, 0xB9D3FBDB,\\n\\t            0x5579C0BD, 0x1A60320A, 0xD6A100C6, 0x402C7279,\\n\\t            0x679F25FE, 0xFB1FA3CC, 0x8EA5E9F8, 0xDB3222F8,\\n\\t            0x3C7516DF, 0xFD616B15, 0x2F501EC8, 0xAD0552AB,\\n\\t            0x323DB5FA, 0xFD238760, 0x53317B48, 0x3E00DF82,\\n\\t            0x9E5C57BB, 0xCA6F8CA0, 0x1A87562E, 0xDF1769DB,\\n\\t            0xD542A8F6, 0x287EFFC3, 0xAC6732C6, 0x8C4F5573,\\n\\t            0x695B27B0, 0xBBCA58C8, 0xE1FFA35D, 0xB8F011A0,\\n\\t            0x10FA3D98, 0xFD2183B8, 0x4AFCB56C, 0x2DD1D35B,\\n\\t            0x9A53E479, 0xB6F84565, 0xD28E49BC, 0x4BFB9790,\\n\\t            0xE1DDF2DA, 0xA4CB7E33, 0x62FB1341, 0xCEE4C6E8,\\n\\t            0xEF20CADA, 0x36774C01, 0xD07E9EFE, 0x2BF11FB4,\\n\\t            0x95DBDA4D, 0xAE909198, 0xEAAD8E71, 0x6B93D5A0,\\n\\t            0xD08ED1D0, 0xAFC725E0, 0x8E3C5B2F, 0x8E7594B7,\\n\\t            0x8FF6E2FB, 0xF2122B64, 0x8888B812, 0x900DF01C,\\n\\t            0x4FAD5EA0, 0x688FC31C, 0xD1CFF191, 0xB3A8C1AD,\\n\\t            0x2F2F2218, 0xBE0E1777, 0xEA752DFE, 0x8B021FA1,\\n\\t            0xE5A0CC0F, 0xB56F74E8, 0x18ACF3D6, 0xCE89E299,\\n\\t            0xB4A84FE0, 0xFD13E0B7, 0x7CC43B81, 0xD2ADA8D9,\\n\\t            0x165FA266, 0x80957705, 0x93CC7314, 0x211A1477,\\n\\t            0xE6AD2065, 0x77B5FA86, 0xC75442F5, 0xFB9D35CF,\\n\\t            0xEBCDAF0C, 0x7B3E89A0, 0xD6411BD3, 0xAE1E7E49,\\n\\t            0x00250E2D, 0x2071B35E, 0x226800BB, 0x57B8E0AF,\\n\\t            0x2464369B, 0xF009B91E, 0x5563911D, 0x59DFA6AA,\\n\\t            0x78C14389, 0xD95A537F, 0x207D5BA2, 0x02E5B9C5,\\n\\t            0x83260376, 0x6295CFA9, 0x11C81968, 0x4E734A41,\\n\\t            0xB3472DCA, 0x7B14A94A, 0x1B510052, 0x9A532915,\\n\\t            0xD60F573F, 0xBC9BC6E4, 0x2B60A476, 0x81E67400,\\n\\t            0x08BA6FB5, 0x571BE91F, 0xF296EC6B, 0x2A0DD915,\\n\\t            0xB6636521, 0xE7B9F9B6, 0xFF34052E, 0xC5855664,\\n\\t            0x53B02D5D, 0xA99F8FA1, 0x08BA4799, 0x6E85076A   ],\\n\\t        [   0x4B7A70E9, 0xB5B32944, 0xDB75092E, 0xC4192623,\\n\\t            0xAD6EA6B0, 0x49A7DF7D, 0x9CEE60B8, 0x8FEDB266,\\n\\t            0xECAA8C71, 0x699A17FF, 0x5664526C, 0xC2B19EE1,\\n\\t            0x193602A5, 0x75094C29, 0xA0591340, 0xE4183A3E,\\n\\t            0x3F54989A, 0x5B429D65, 0x6B8FE4D6, 0x99F73FD6,\\n\\t            0xA1D29C07, 0xEFE830F5, 0x4D2D38E6, 0xF0255DC1,\\n\\t            0x4CDD2086, 0x8470EB26, 0x6382E9C6, 0x021ECC5E,\\n\\t            0x09686B3F, 0x3EBAEFC9, 0x3C971814, 0x6B6A70A1,\\n\\t            0x687F3584, 0x52A0E286, 0xB79C5305, 0xAA500737,\\n\\t            0x3E07841C, 0x7FDEAE5C, 0x8E7D44EC, 0x5716F2B8,\\n\\t            0xB03ADA37, 0xF0500C0D, 0xF01C1F04, 0x0200B3FF,\\n\\t            0xAE0CF51A, 0x3CB574B2, 0x25837A58, 0xDC0921BD,\\n\\t            0xD19113F9, 0x7CA92FF6, 0x94324773, 0x22F54701,\\n\\t            0x3AE5E581, 0x37C2DADC, 0xC8B57634, 0x9AF3DDA7,\\n\\t            0xA9446146, 0x0FD0030E, 0xECC8C73E, 0xA4751E41,\\n\\t            0xE238CD99, 0x3BEA0E2F, 0x3280BBA1, 0x183EB331,\\n\\t            0x4E548B38, 0x4F6DB908, 0x6F420D03, 0xF60A04BF,\\n\\t            0x2CB81290, 0x24977C79, 0x5679B072, 0xBCAF89AF,\\n\\t            0xDE9A771F, 0xD9930810, 0xB38BAE12, 0xDCCF3F2E,\\n\\t            0x5512721F, 0x2E6B7124, 0x501ADDE6, 0x9F84CD87,\\n\\t            0x7A584718, 0x7408DA17, 0xBC9F9ABC, 0xE94B7D8C,\\n\\t            0xEC7AEC3A, 0xDB851DFA, 0x63094366, 0xC464C3D2,\\n\\t            0xEF1C1847, 0x3215D908, 0xDD433B37, 0x24C2BA16,\\n\\t            0x12A14D43, 0x2A65C451, 0x50940002, 0x133AE4DD,\\n\\t            0x71DFF89E, 0x10314E55, 0x81AC77D6, 0x5F11199B,\\n\\t            0x043556F1, 0xD7A3C76B, 0x3C11183B, 0x5924A509,\\n\\t            0xF28FE6ED, 0x97F1FBFA, 0x9EBABF2C, 0x1E153C6E,\\n\\t            0x86E34570, 0xEAE96FB1, 0x860E5E0A, 0x5A3E2AB3,\\n\\t            0x771FE71C, 0x4E3D06FA, 0x2965DCB9, 0x99E71D0F,\\n\\t            0x803E89D6, 0x5266C825, 0x2E4CC978, 0x9C10B36A,\\n\\t            0xC6150EBA, 0x94E2EA78, 0xA5FC3C53, 0x1E0A2DF4,\\n\\t            0xF2F74EA7, 0x361D2B3D, 0x1939260F, 0x19C27960,\\n\\t            0x5223A708, 0xF71312B6, 0xEBADFE6E, 0xEAC31F66,\\n\\t            0xE3BC4595, 0xA67BC883, 0xB17F37D1, 0x018CFF28,\\n\\t            0xC332DDEF, 0xBE6C5AA5, 0x65582185, 0x68AB9802,\\n\\t            0xEECEA50F, 0xDB2F953B, 0x2AEF7DAD, 0x5B6E2F84,\\n\\t            0x1521B628, 0x29076170, 0xECDD4775, 0x619F1510,\\n\\t            0x13CCA830, 0xEB61BD96, 0x0334FE1E, 0xAA0363CF,\\n\\t            0xB5735C90, 0x4C70A239, 0xD59E9E0B, 0xCBAADE14,\\n\\t            0xEECC86BC, 0x60622CA7, 0x9CAB5CAB, 0xB2F3846E,\\n\\t            0x648B1EAF, 0x19BDF0CA, 0xA02369B9, 0x655ABB50,\\n\\t            0x40685A32, 0x3C2AB4B3, 0x319EE9D5, 0xC021B8F7,\\n\\t            0x9B540B19, 0x875FA099, 0x95F7997E, 0x623D7DA8,\\n\\t            0xF837889A, 0x97E32D77, 0x11ED935F, 0x16681281,\\n\\t            0x0E358829, 0xC7E61FD6, 0x96DEDFA1, 0x7858BA99,\\n\\t            0x57F584A5, 0x1B227263, 0x9B83C3FF, 0x1AC24696,\\n\\t            0xCDB30AEB, 0x532E3054, 0x8FD948E4, 0x6DBC3128,\\n\\t            0x58EBF2EF, 0x34C6FFEA, 0xFE28ED61, 0xEE7C3C73,\\n\\t            0x5D4A14D9, 0xE864B7E3, 0x42105D14, 0x203E13E0,\\n\\t            0x45EEE2B6, 0xA3AAABEA, 0xDB6C4F15, 0xFACB4FD0,\\n\\t            0xC742F442, 0xEF6ABBB5, 0x654F3B1D, 0x41CD2105,\\n\\t            0xD81E799E, 0x86854DC7, 0xE44B476A, 0x3D816250,\\n\\t            0xCF62A1F2, 0x5B8D2646, 0xFC8883A0, 0xC1C7B6A3,\\n\\t            0x7F1524C3, 0x69CB7492, 0x47848A0B, 0x5692B285,\\n\\t            0x095BBF00, 0xAD19489D, 0x1462B174, 0x23820E00,\\n\\t            0x58428D2A, 0x0C55F5EA, 0x1DADF43E, 0x233F7061,\\n\\t            0x3372F092, 0x8D937E41, 0xD65FECF1, 0x6C223BDB,\\n\\t            0x7CDE3759, 0xCBEE7460, 0x4085F2A7, 0xCE77326E,\\n\\t            0xA6078084, 0x19F8509E, 0xE8EFD855, 0x61D99735,\\n\\t            0xA969A7AA, 0xC50C06C2, 0x5A04ABFC, 0x800BCADC,\\n\\t            0x9E447A2E, 0xC3453484, 0xFDD56705, 0x0E1E9EC9,\\n\\t            0xDB73DBD3, 0x105588CD, 0x675FDA79, 0xE3674340,\\n\\t            0xC5C43465, 0x713E38D8, 0x3D28F89E, 0xF16DFF20,\\n\\t            0x153E21E7, 0x8FB03D4A, 0xE6E39F2B, 0xDB83ADF7   ],\\n\\t        [   0xE93D5A68, 0x948140F7, 0xF64C261C, 0x94692934,\\n\\t            0x411520F7, 0x7602D4F7, 0xBCF46B2E, 0xD4A20068,\\n\\t            0xD4082471, 0x3320F46A, 0x43B7D4B7, 0x500061AF,\\n\\t            0x1E39F62E, 0x97244546, 0x14214F74, 0xBF8B8840,\\n\\t            0x4D95FC1D, 0x96B591AF, 0x70F4DDD3, 0x66A02F45,\\n\\t            0xBFBC09EC, 0x03BD9785, 0x7FAC6DD0, 0x31CB8504,\\n\\t            0x96EB27B3, 0x55FD3941, 0xDA2547E6, 0xABCA0A9A,\\n\\t            0x28507825, 0x530429F4, 0x0A2C86DA, 0xE9B66DFB,\\n\\t            0x68DC1462, 0xD7486900, 0x680EC0A4, 0x27A18DEE,\\n\\t            0x4F3FFEA2, 0xE887AD8C, 0xB58CE006, 0x7AF4D6B6,\\n\\t            0xAACE1E7C, 0xD3375FEC, 0xCE78A399, 0x406B2A42,\\n\\t            0x20FE9E35, 0xD9F385B9, 0xEE39D7AB, 0x3B124E8B,\\n\\t            0x1DC9FAF7, 0x4B6D1856, 0x26A36631, 0xEAE397B2,\\n\\t            0x3A6EFA74, 0xDD5B4332, 0x6841E7F7, 0xCA7820FB,\\n\\t            0xFB0AF54E, 0xD8FEB397, 0x454056AC, 0xBA489527,\\n\\t            0x55533A3A, 0x20838D87, 0xFE6BA9B7, 0xD096954B,\\n\\t            0x55A867BC, 0xA1159A58, 0xCCA92963, 0x99E1DB33,\\n\\t            0xA62A4A56, 0x3F3125F9, 0x5EF47E1C, 0x9029317C,\\n\\t            0xFDF8E802, 0x04272F70, 0x80BB155C, 0x05282CE3,\\n\\t            0x95C11548, 0xE4C66D22, 0x48C1133F, 0xC70F86DC,\\n\\t            0x07F9C9EE, 0x41041F0F, 0x404779A4, 0x5D886E17,\\n\\t            0x325F51EB, 0xD59BC0D1, 0xF2BCC18F, 0x41113564,\\n\\t            0x257B7834, 0x602A9C60, 0xDFF8E8A3, 0x1F636C1B,\\n\\t            0x0E12B4C2, 0x02E1329E, 0xAF664FD1, 0xCAD18115,\\n\\t            0x6B2395E0, 0x333E92E1, 0x3B240B62, 0xEEBEB922,\\n\\t            0x85B2A20E, 0xE6BA0D99, 0xDE720C8C, 0x2DA2F728,\\n\\t            0xD0127845, 0x95B794FD, 0x647D0862, 0xE7CCF5F0,\\n\\t            0x5449A36F, 0x877D48FA, 0xC39DFD27, 0xF33E8D1E,\\n\\t            0x0A476341, 0x992EFF74, 0x3A6F6EAB, 0xF4F8FD37,\\n\\t            0xA812DC60, 0xA1EBDDF8, 0x991BE14C, 0xDB6E6B0D,\\n\\t            0xC67B5510, 0x6D672C37, 0x2765D43B, 0xDCD0E804,\\n\\t            0xF1290DC7, 0xCC00FFA3, 0xB5390F92, 0x690FED0B,\\n\\t            0x667B9FFB, 0xCEDB7D9C, 0xA091CF0B, 0xD9155EA3,\\n\\t            0xBB132F88, 0x515BAD24, 0x7B9479BF, 0x763BD6EB,\\n\\t            0x37392EB3, 0xCC115979, 0x8026E297, 0xF42E312D,\\n\\t            0x6842ADA7, 0xC66A2B3B, 0x12754CCC, 0x782EF11C,\\n\\t            0x6A124237, 0xB79251E7, 0x06A1BBE6, 0x4BFB6350,\\n\\t            0x1A6B1018, 0x11CAEDFA, 0x3D25BDD8, 0xE2E1C3C9,\\n\\t            0x44421659, 0x0A121386, 0xD90CEC6E, 0xD5ABEA2A,\\n\\t            0x64AF674E, 0xDA86A85F, 0xBEBFE988, 0x64E4C3FE,\\n\\t            0x9DBC8057, 0xF0F7C086, 0x60787BF8, 0x6003604D,\\n\\t            0xD1FD8346, 0xF6381FB0, 0x7745AE04, 0xD736FCCC,\\n\\t            0x83426B33, 0xF01EAB71, 0xB0804187, 0x3C005E5F,\\n\\t            0x77A057BE, 0xBDE8AE24, 0x55464299, 0xBF582E61,\\n\\t            0x4E58F48F, 0xF2DDFDA2, 0xF474EF38, 0x8789BDC2,\\n\\t            0x5366F9C3, 0xC8B38E74, 0xB475F255, 0x46FCD9B9,\\n\\t            0x7AEB2661, 0x8B1DDF84, 0x846A0E79, 0x915F95E2,\\n\\t            0x466E598E, 0x20B45770, 0x8CD55591, 0xC902DE4C,\\n\\t            0xB90BACE1, 0xBB8205D0, 0x11A86248, 0x7574A99E,\\n\\t            0xB77F19B6, 0xE0A9DC09, 0x662D09A1, 0xC4324633,\\n\\t            0xE85A1F02, 0x09F0BE8C, 0x4A99A025, 0x1D6EFE10,\\n\\t            0x1AB93D1D, 0x0BA5A4DF, 0xA186F20F, 0x2868F169,\\n\\t            0xDCB7DA83, 0x573906FE, 0xA1E2CE9B, 0x4FCD7F52,\\n\\t            0x50115E01, 0xA70683FA, 0xA002B5C4, 0x0DE6D027,\\n\\t            0x9AF88C27, 0x773F8641, 0xC3604C06, 0x61A806B5,\\n\\t            0xF0177A28, 0xC0F586E0, 0x006058AA, 0x30DC7D62,\\n\\t            0x11E69ED7, 0x2338EA63, 0x53C2DD94, 0xC2C21634,\\n\\t            0xBBCBEE56, 0x90BCB6DE, 0xEBFC7DA1, 0xCE591D76,\\n\\t            0x6F05E409, 0x4B7C0188, 0x39720A3D, 0x7C927C24,\\n\\t            0x86E3725F, 0x724D9DB9, 0x1AC15BB4, 0xD39EB8FC,\\n\\t            0xED545578, 0x08FCA5B5, 0xD83D7CD3, 0x4DAD0FC4,\\n\\t            0x1E50EF5E, 0xB161E6F8, 0xA28514D9, 0x6C51133C,\\n\\t            0x6FD5C7E7, 0x56E14EC4, 0x362ABFCE, 0xDDC6C837,\\n\\t            0xD79A3234, 0x92638212, 0x670EFA8E, 0x406000E0  ],\\n\\t        [   0x3A39CE37, 0xD3FAF5CF, 0xABC27737, 0x5AC52D1B,\\n\\t            0x5CB0679E, 0x4FA33742, 0xD3822740, 0x99BC9BBE,\\n\\t            0xD5118E9D, 0xBF0F7315, 0xD62D1C7E, 0xC700C47B,\\n\\t            0xB78C1B6B, 0x21A19045, 0xB26EB1BE, 0x6A366EB4,\\n\\t            0x5748AB2F, 0xBC946E79, 0xC6A376D2, 0x6549C2C8,\\n\\t            0x530FF8EE, 0x468DDE7D, 0xD5730A1D, 0x4CD04DC6,\\n\\t            0x2939BBDB, 0xA9BA4650, 0xAC9526E8, 0xBE5EE304,\\n\\t            0xA1FAD5F0, 0x6A2D519A, 0x63EF8CE2, 0x9A86EE22,\\n\\t            0xC089C2B8, 0x43242EF6, 0xA51E03AA, 0x9CF2D0A4,\\n\\t            0x83C061BA, 0x9BE96A4D, 0x8FE51550, 0xBA645BD6,\\n\\t            0x2826A2F9, 0xA73A3AE1, 0x4BA99586, 0xEF5562E9,\\n\\t            0xC72FEFD3, 0xF752F7DA, 0x3F046F69, 0x77FA0A59,\\n\\t            0x80E4A915, 0x87B08601, 0x9B09E6AD, 0x3B3EE593,\\n\\t            0xE990FD5A, 0x9E34D797, 0x2CF0B7D9, 0x022B8B51,\\n\\t            0x96D5AC3A, 0x017DA67D, 0xD1CF3ED6, 0x7C7D2D28,\\n\\t            0x1F9F25CF, 0xADF2B89B, 0x5AD6B472, 0x5A88F54C,\\n\\t            0xE029AC71, 0xE019A5E6, 0x47B0ACFD, 0xED93FA9B,\\n\\t            0xE8D3C48D, 0x283B57CC, 0xF8D56629, 0x79132E28,\\n\\t            0x785F0191, 0xED756055, 0xF7960E44, 0xE3D35E8C,\\n\\t            0x15056DD4, 0x88F46DBA, 0x03A16125, 0x0564F0BD,\\n\\t            0xC3EB9E15, 0x3C9057A2, 0x97271AEC, 0xA93A072A,\\n\\t            0x1B3F6D9B, 0x1E6321F5, 0xF59C66FB, 0x26DCF319,\\n\\t            0x7533D928, 0xB155FDF5, 0x03563482, 0x8ABA3CBB,\\n\\t            0x28517711, 0xC20AD9F8, 0xABCC5167, 0xCCAD925F,\\n\\t            0x4DE81751, 0x3830DC8E, 0x379D5862, 0x9320F991,\\n\\t            0xEA7A90C2, 0xFB3E7BCE, 0x5121CE64, 0x774FBE32,\\n\\t            0xA8B6E37E, 0xC3293D46, 0x48DE5369, 0x6413E680,\\n\\t            0xA2AE0810, 0xDD6DB224, 0x69852DFD, 0x09072166,\\n\\t            0xB39A460A, 0x6445C0DD, 0x586CDECF, 0x1C20C8AE,\\n\\t            0x5BBEF7DD, 0x1B588D40, 0xCCD2017F, 0x6BB4E3BB,\\n\\t            0xDDA26A7E, 0x3A59FF45, 0x3E350A44, 0xBCB4CDD5,\\n\\t            0x72EACEA8, 0xFA6484BB, 0x8D6612AE, 0xBF3C6F47,\\n\\t            0xD29BE463, 0x542F5D9E, 0xAEC2771B, 0xF64E6370,\\n\\t            0x740E0D8D, 0xE75B1357, 0xF8721671, 0xAF537D5D,\\n\\t            0x4040CB08, 0x4EB4E2CC, 0x34D2466A, 0x0115AF84,\\n\\t            0xE1B00428, 0x95983A1D, 0x06B89FB4, 0xCE6EA048,\\n\\t            0x6F3F3B82, 0x3520AB82, 0x011A1D4B, 0x277227F8,\\n\\t            0x611560B1, 0xE7933FDC, 0xBB3A792B, 0x344525BD,\\n\\t            0xA08839E1, 0x51CE794B, 0x2F32C9B7, 0xA01FBAC9,\\n\\t            0xE01CC87E, 0xBCC7D1F6, 0xCF0111C3, 0xA1E8AAC7,\\n\\t            0x1A908749, 0xD44FBD9A, 0xD0DADECB, 0xD50ADA38,\\n\\t            0x0339C32A, 0xC6913667, 0x8DF9317C, 0xE0B12B4F,\\n\\t            0xF79E59B7, 0x43F5BB3A, 0xF2D519FF, 0x27D9459C,\\n\\t            0xBF97222C, 0x15E6FC2A, 0x0F91FC71, 0x9B941525,\\n\\t            0xFAE59361, 0xCEB69CEB, 0xC2A86459, 0x12BAA8D1,\\n\\t            0xB6C1075E, 0xE3056A0C, 0x10D25065, 0xCB03A442,\\n\\t            0xE0EC6E0E, 0x1698DB3B, 0x4C98A0BE, 0x3278E964,\\n\\t            0x9F1F9532, 0xE0D392DF, 0xD3A0342B, 0x8971F21E,\\n\\t            0x1B0A7441, 0x4BA3348C, 0xC5BE7120, 0xC37632D8,\\n\\t            0xDF359F8D, 0x9B992F2E, 0xE60B6F47, 0x0FE3F11D,\\n\\t            0xE54CDA54, 0x1EDAD891, 0xCE6279CF, 0xCD3E7E6F,\\n\\t            0x1618B166, 0xFD2C1D05, 0x848FD2C5, 0xF6FB2299,\\n\\t            0xF523F357, 0xA6327623, 0x93A83531, 0x56CCCD02,\\n\\t            0xACF08162, 0x5A75EBB5, 0x6E163697, 0x88D273CC,\\n\\t            0xDE966292, 0x81B949D0, 0x4C50901B, 0x71C65614,\\n\\t            0xE6C6C7BD, 0x327A140A, 0x45E1D006, 0xC3F27B9A,\\n\\t            0xC9AA53FD, 0x62A80F00, 0xBB25BFE2, 0x35BDD2F6,\\n\\t            0x71126905, 0xB2040222, 0xB6CBCF7C, 0xCD769C2B,\\n\\t            0x53113EC0, 0x1640E3D3, 0x38ABBD60, 0x2547ADF0,\\n\\t            0xBA38209C, 0xF746CE76, 0x77AFA1C5, 0x20756060,\\n\\t            0x85CBFE4E, 0x8AE88DD8, 0x7AAAF9B0, 0x4CF9AA7E,\\n\\t            0x1948C25C, 0x02FB8A8C, 0x01C36AE4, 0xD6EBE1F9,\\n\\t            0x90D4F869, 0xA65CDEA0, 0x3F09252D, 0xC208E69F,\\n\\t            0xB74E6132, 0xCE77E25B, 0x578FDFE3, 0x3AC372E6  ]\\n\\t    ];\\n\\n\\t    var BLOWFISH_CTX = {\\n\\t        pbox: [],\\n\\t        sbox: []\\n\\t    }\\n\\n\\t    function F(ctx, x){\\n\\t        let a = (x >> 24) & 0xFF;\\n\\t        let b = (x >> 16) & 0xFF;\\n\\t        let c = (x >> 8) & 0xFF;\\n\\t        let d = x & 0xFF;\\n\\n\\t        let y = ctx.sbox[0][a] + ctx.sbox[1][b];\\n\\t        y = y ^ ctx.sbox[2][c];\\n\\t        y = y + ctx.sbox[3][d];\\n\\n\\t        return y;\\n\\t    }\\n\\n\\t    function BlowFish_Encrypt(ctx, left, right){\\n\\t        let Xl = left;\\n\\t        let Xr = right;\\n\\t        let temp;\\n\\n\\t        for(let i = 0; i < N; ++i){\\n\\t            Xl = Xl ^ ctx.pbox[i];\\n\\t            Xr = F(ctx, Xl) ^ Xr;\\n\\n\\t            temp = Xl;\\n\\t            Xl = Xr;\\n\\t            Xr = temp;\\n\\t        }\\n\\n\\t        temp = Xl;\\n\\t        Xl = Xr;\\n\\t        Xr = temp;\\n\\n\\t        Xr = Xr ^ ctx.pbox[N];\\n\\t        Xl = Xl ^ ctx.pbox[N + 1];\\n\\n\\t        return {left: Xl, right: Xr};\\n\\t    }\\n\\n\\t    function BlowFish_Decrypt(ctx, left, right){\\n\\t        let Xl = left;\\n\\t        let Xr = right;\\n\\t        let temp;\\n\\n\\t        for(let i = N + 1; i > 1; --i){\\n\\t            Xl = Xl ^ ctx.pbox[i];\\n\\t            Xr = F(ctx, Xl) ^ Xr;\\n\\n\\t            temp = Xl;\\n\\t            Xl = Xr;\\n\\t            Xr = temp;\\n\\t        }\\n\\n\\t        temp = Xl;\\n\\t        Xl = Xr;\\n\\t        Xr = temp;\\n\\n\\t        Xr = Xr ^ ctx.pbox[1];\\n\\t        Xl = Xl ^ ctx.pbox[0];\\n\\n\\t        return {left: Xl, right: Xr};\\n\\t    }\\n\\n\\t    /**\\n\\t     * Initialization ctx's pbox and sbox.\\n\\t     *\\n\\t     * @param {Object} ctx The object has pbox and sbox.\\n\\t     * @param {Array} key An array of 32-bit words.\\n\\t     * @param {int} keysize The length of the key.\\n\\t     *\\n\\t     * @example\\n\\t     *\\n\\t     *     BlowFishInit(BLOWFISH_CTX, key, 128/32);\\n\\t     */\\n\\t    function BlowFishInit(ctx, key, keysize)\\n\\t    {\\n\\t        for(let Row = 0; Row < 4; Row++)\\n\\t        {\\n\\t            ctx.sbox[Row] = [];\\n\\t            for(let Col = 0; Col < 256; Col++)\\n\\t            {\\n\\t                ctx.sbox[Row][Col] = ORIG_S[Row][Col];\\n\\t            }\\n\\t        }\\n\\n\\t        let keyIndex = 0;\\n\\t        for(let index = 0; index < N + 2; index++)\\n\\t        {\\n\\t            ctx.pbox[index] = ORIG_P[index] ^ key[keyIndex];\\n\\t            keyIndex++;\\n\\t            if(keyIndex >= keysize)\\n\\t            {\\n\\t                keyIndex = 0;\\n\\t            }\\n\\t        }\\n\\n\\t        let Data1 = 0;\\n\\t        let Data2 = 0;\\n\\t        let res = 0;\\n\\t        for(let i = 0; i < N + 2; i += 2)\\n\\t        {\\n\\t            res = BlowFish_Encrypt(ctx, Data1, Data2);\\n\\t            Data1 = res.left;\\n\\t            Data2 = res.right;\\n\\t            ctx.pbox[i] = Data1;\\n\\t            ctx.pbox[i + 1] = Data2;\\n\\t        }\\n\\n\\t        for(let i = 0; i < 4; i++)\\n\\t        {\\n\\t            for(let j = 0; j < 256; j += 2)\\n\\t            {\\n\\t                res = BlowFish_Encrypt(ctx, Data1, Data2);\\n\\t                Data1 = res.left;\\n\\t                Data2 = res.right;\\n\\t                ctx.sbox[i][j] = Data1;\\n\\t                ctx.sbox[i][j + 1] = Data2;\\n\\t            }\\n\\t        }\\n\\n\\t        return true;\\n\\t    }\\n\\n\\t    /**\\n\\t     * Blowfish block cipher algorithm.\\n\\t     */\\n\\t    var Blowfish = C_algo.Blowfish = BlockCipher.extend({\\n\\t        _doReset: function () {\\n\\t            // Skip reset of nRounds has been set before and key did not change\\n\\t            if (this._keyPriorReset === this._key) {\\n\\t                return;\\n\\t            }\\n\\n\\t            // Shortcuts\\n\\t            var key = this._keyPriorReset = this._key;\\n\\t            var keyWords = key.words;\\n\\t            var keySize = key.sigBytes / 4;\\n\\n\\t            //Initialization pbox and sbox\\n\\t            BlowFishInit(BLOWFISH_CTX, keyWords, keySize);\\n\\t        },\\n\\n\\t        encryptBlock: function (M, offset) {\\n\\t            var res = BlowFish_Encrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);\\n\\t            M[offset] = res.left;\\n\\t            M[offset + 1] = res.right;\\n\\t        },\\n\\n\\t        decryptBlock: function (M, offset) {\\n\\t            var res = BlowFish_Decrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);\\n\\t            M[offset] = res.left;\\n\\t            M[offset + 1] = res.right;\\n\\t        },\\n\\n\\t        blockSize: 64/32,\\n\\n\\t        keySize: 128/32,\\n\\n\\t        ivSize: 64/32\\n\\t    });\\n\\n\\t    /**\\n\\t     * Shortcut functions to the cipher's object interface.\\n\\t     *\\n\\t     * @example\\n\\t     *\\n\\t     *     var ciphertext = CryptoJS.Blowfish.encrypt(message, key, cfg);\\n\\t     *     var plaintext  = CryptoJS.Blowfish.decrypt(ciphertext, key, cfg);\\n\\t     */\\n\\t    C.Blowfish = BlockCipher._createHelper(Blowfish);\\n\\t}());\\n\\n\\n\\treturn CryptoJS.Blowfish;\\n\\n}));\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"root\",\"factory\",\"undef\",\"define\",\"amd\",\"CryptoJS\",\"F\",\"ctx\",\"x\",\"y\",\"sbox\",\"BlowFish_Encrypt\",\"left\",\"right\",\"temp\",\"i\",\"N\",\"Xl\",\"pbox\",\"Xr\",\"BlockCipher\",\"lib\",\"ORIG_P\",\"ORIG_S\",\"BLOWFISH_CTX\",\"Blowfish\",\"algo\",\"extend\",\"_doReset\",\"_keyPriorReset\",\"_key\",\"key\",\"keyWords\",\"words\",\"keySize\",\"sigBytes\",\"Row\",\"Col\",\"keyIndex\",\"index\",\"keysize\",\"Data2\",\"Data1\",\"res\",\"j\",\"encryptBlock\",\"M\",\"offset\",\"decryptBlock\",\"blockSize\",\"ivSize\",\"_createHelper\"]\n}\n"]